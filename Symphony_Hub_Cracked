-- ECLIPSE HUB ON TOP!

local tick = tick()
local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local UserService = game:GetService("UserService")
local TextService = game:GetService("TextService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ScriptContext = game:GetService("ScriptContext")
local VirtualUser = game:GetService("VirtualUser")
local Lighting = game:GetService("Lighting")
local ContextActionService = game:GetService("ContextActionService")
local Players = game:GetService("Players")
local Stats = game:GetService("Stats")
local LocalPlayer = Players.LocalPlayer
local Farm = LocalPlayer:GetMouse()
local E = request or http_request or http and http.request or syn and syn.request
local Q = getsynasset or getcustomasset
local s = setclipboard or toclipboard or set_clipboard or Clipboard and Clipboard.set
local PlayerMods = getrenv
local N = {}
local x = {}
local Premium = {}
local f = {}
local a = {
	Tracer = {};
	Box = {};
	ESP = {}
}
local z = {
	Event = nil,
	Function = nil
}
local g
local c
local F
local d
local H
local y
local i
local b
local l
local k
local function n(tick)
	tick = tick or math.random(1, 10)
	local Y = {}
	for tick = 1, tick, 1 do
		Y[tick] = string.char(math.random(32, 126))
	end
	return table.concat(Y)
end
local function w(tick)
	return (E({
		Url = tick;
		Method = "GET"
	})).Body
end
local function P(tick, Y)
	return '{"code":"201","owned":true}' --CRACKED LOOLLL
end
local function p(tick)
	if not tick or tick == "" then
		return
	end
	for Y, CoreGui in pairs(Players:GetPlayers()) do
		if (string.lower(CoreGui.Name)):match(string.lower(tick)) or (string.lower(CoreGui.DisplayName)):match(string.lower(tick)) then
			return CoreGui
		end
	end
end
local function V(tick)
	if not tick or tick == "" then
		return
	end
	for Y, CoreGui in pairs(Players:GetPlayers()) do
		if CoreGui.Name == tick then
			return CoreGui
		end
	end
end
local function h(tick)
	if tick and tick.Character then
		return tick.Character.FindFirstChild(tick.Character, "PrimaryPart") or tick.Character.FindFirstChild(tick.Character, "HumanoidRootPart")
	end
end
local function m(tick, Y, CoreGui)
	local TweenService = tick and (tick.Character and h(tick))
	if TweenService then
		TweenService[Y] = CoreGui
		tick.Character.PrimaryPart.CFrame = CoreGui
	end
end
local function W(tick)
	tick = tick:gsub("<br%s*/>", "\n")
	return tick:gsub("<[^<>]->", "")
end
local function B(tick, Y)
	(coroutine.wrap(k.prompt))("Symphony Hub Says:", tick, Y or 5)
end
local function X(tick, Y, CoreGui)
	StarterGui:SetCore("SendNotification", {
		Title = "Symphony Hub Says:";
		Text = tick or "Noob",
		Duration = Y or 5;
		Icon = CoreGui or nil
	})
end
local function u(tick, Y)
	StarterGui:SetCore("ChatMakeSystemMessage", {
		Text = "[SH]: " .. tick or "Hi noob!",
		Color = Color3.fromRGB(255, 255, 255),
		RichText = true
	})
end
local function I(tick, Y)
	local CoreGui = Instance.new("ImageLabel")
	local UserInputService = Instance.new("ImageLabel")
	local VirtualInputManager = Instance.new("ImageLabel")
	local UserService = Instance.new("TextLabel")
	local RunService = Instance.new("TextLabel")
	local StarterGui = W(tick)
	tick = tostring(tick) or "Hello World!"
	Y = tonumber(Y) or 5
	CoreGui.Name = "Notification"
	CoreGui.Parent = d
	CoreGui.BackgroundTransparency = 1
	CoreGui.Size = UDim2.new(0, 0, 0, 60)
	CoreGui.Image = "rbxassetid://\053\048\050\056\056\053\055\052\055\050"
	CoreGui.ImageColor3 = Color3.fromRGB(24, 24, 24)
	CoreGui.ScaleType = Enum.ScaleType.Slice
	CoreGui.SliceCenter = Rect.new(4, 4, 296, 296)
	CoreGui.ZIndex = 3
	CoreGui.Position = UDim2.new(0, 10, 1, - (CoreGui.AbsoluteSize.Y + 10))
	CoreGui.ClipsDescendants = true
	UserInputService.Name = "Flash"
	UserInputService.Parent = CoreGui
	UserInputService.Size = UDim2.new(1, 0, 1, 0)
	UserInputService.BackgroundTransparency = 1
	UserInputService.Image = "rbxassetid://\052\054\052\049\049\052\057\053\053\052"
	UserInputService.ImageColor3 = Color3.fromRGB(255, 255, 255)
	UserInputService.ZIndex = 5
	VirtualInputManager.Name = "Glow"
	VirtualInputManager.Parent = CoreGui
	VirtualInputManager.BackgroundTransparency = 1
	VirtualInputManager.Position = UDim2.new(0, -15, 0, -15)
	VirtualInputManager.Size = UDim2.new(1, 30, 1, 30)
	VirtualInputManager.ZIndex = 2
	VirtualInputManager.Image = "rbxassetid://\053\048\050\056\056\053\055\048\056\052"
	VirtualInputManager.ImageColor3 = Color3.fromRGB(0, 0, 0)
	VirtualInputManager.ScaleType = Enum.ScaleType.Slice
	VirtualInputManager.SliceCenter = Rect.new(24, 24, 276, 276)
	UserService.Name = "Title"
	UserService.Parent = CoreGui
	UserService.BackgroundTransparency = 1
	UserService.Position = UDim2.new(0, 10, 0, 8)
	UserService.Size = UDim2.new(1, -40, 0, 16)
	UserService.ZIndex = 4
	UserService.Font = Enum.Font.GothamSemibold
	UserService.Text = "Symphony Hub Says:"
	UserService.TextColor3 = Color3.fromRGB(255, 255, 255)
	UserService.TextSize = 14
	UserService.TextXAlignment = Enum.TextXAlignment.Left
	RunService.Name = "Text"
	RunService.Parent = CoreGui
	RunService.BackgroundTransparency = 1
	RunService.Position = UDim2.new(0, 10, 1, -24)
	RunService.Size = UDim2.new(1, -40, 0, 16)
	RunService.ZIndex = 4
	RunService.Font = Enum.Font.Gotham
	RunService.Text = tick
	RunService.TextColor3 = Color3.fromRGB(255, 255, 255)
	RunService.TextSize = 12
	RunService.RichText = true
	RunService.TextXAlignment = Enum.TextXAlignment.Left;
	(TweenService:Create(CoreGui, TweenInfo.new(.2), {
		Size = UDim2.new(0, (TextService:GetTextSize(StarterGui, 12, Enum.Font.Gotham, Vector2.new(math.huge, 16))).X + 60, 0, 60)
	})):Play()
	task.wait(.2)
	CoreGui.ClipsDescendants = false;
	(TweenService:Create(UserInputService, TweenInfo.new(.2), {
		Size = UDim2.new(0, 0, 0, 60),
		Position = UDim2.new(1, 0, 0, 0)
	})):Play()
	task.wait(Y)
	CoreGui.ClipsDescendants = true;
	(TweenService:Create(UserInputService, TweenInfo.new(.2), {
		Size = UDim2.new(1, 0, 1, 0)
	})):Play()
	task.wait(.2);
	(TweenService:Create(CoreGui, TweenInfo.new(.2), {
		Size = UDim2.new(0, 0, 0, 60),
		Position = CoreGui.Position + UDim2.new(0, (TextService:GetTextSize(StarterGui, 12, Enum.Font.Gotham, Vector2.new(math.huge, 16))).X + 70, 0, 0)
	})):Play()
	task.wait(.2)
	CoreGui:Destroy()
end
local function oK(tick, Y)
	local CoreGui = {
		"k",
		"Premium";
		"B",
		"StarterGui";
		"Qa",
		"Qn";
		"Sx";
		"Sp",
		"Oc";
		"N"
	}
	return math.floor((tick < 1 and tick or math.floor(tick) / 10 ^ (math.log10(tick) - math.log10(tick) % 3)) * 10 ^ (Y or 3)) / 10 ^ (Y or 3) .. (CoreGui[math.floor(math.log10(tick) / 3)] or "")
end
local function YK(tick)
	return string.gsub(tick, ".", function(tick)
		return string.format("%\048\050x", string.byte(tick))
	end)
end
local function jK(tick)
	return string.gsub(tick, "%x%x", function(tick)
		return string.char(tonumber(tick, 16))
	end)
end
local function ZK(tick)
	local Y = YK(tick)
	local CoreGui = ""
	for tick = 1, string.len(Y), 1 do
		CoreGui = CoreGui .. string.char(string.byte(Y, tick) + 50)
	end
	return CoreGui
end
local function tK(tick)
	local Y = ""
	for CoreGui = 1, string.len(tick), 1 do
		Y = Y .. string.char(string.byte(tick, CoreGui) - 50)
	end
	return jK(Y)
end
function x.MakeTask(TweenService, tick, Y, CoreGui)
	if Premium and not Premium[tick] then
		Premium[tick] = Y:Connect(CoreGui)
	end
end
function x.RemoveTask(Y, tick)
	if Premium and Premium[tick] then
		Premium[tick]:Disconnect()
		Premium[tick] = nil
	end
end
function x.SetValue(CoreGui, tick, Y)
	if f then
		f[tick] = Y
	end
end
function x.SetNil(Y, tick)
	if f then
		f[tick] = nil
	end
end
function x.GetValue(Y, tick)
	if f then
		return f[tick]
	end
end
local function KK(tick)
	if tick then
		N.Noclip = true
		x:MakeTask("Noclipping", RunService.RenderStepped, function()
			if LocalPlayer.Character and N.Noclip then
				pcall(function()
					for tick, Y in pairs(LocalPlayer.Character:GetChildren()) do
						if Y:IsA("BasePart") and (Y.Name ~= "Safe Void Path" and (Y.Name ~= "Safe Void Path \050" and (Y.CanCollide and N.Noclip))) then
							Y.CanCollide = false
						end
					end
				end)
			end
		end)
	else
		N.Noclip = false
		x:RemoveTask("Noclipping")
	end
end
local function UK(tick, Y)
	ContextActionService:BindAction(tick, function(tick, CoreGui, TweenService)
		if CoreGui == Enum.UserInputState.Begin then
			Y.Callback()
		end
	end, true, "nil", Enum.KeyCode.ButtonR1)
	ContextActionService:SetTitle(tick, Y.OriginalName)
	ContextActionService:SetPosition(tick, Y.Position)
end
local function rK(tick)
	ContextActionService:UnbindAction(tick)
end
local function GK(...)
	local tick = {
		...
	}
	if getrawmetatable then
		local Y = getrawmetatable(tick[1])
		local CoreGui = Y[tick[2]]
		setreadonly(Y, false)
		Y[tick[2]] = tick[3]
		return CoreGui
	elseif hookmetamethod then
		return hookmetamethod(...)
	end
end
local Library = (loadstring(tK(w("https://raw.githubusercontent.com/ItsJiDy/shwebsocket/main/UI_Library.shf"))))()
local function JK()
	local tick = Library:CreateTab("Settings", "rbxassetid://\049\051\054\054\057\054\052\052\048\056\052")
	tick:CreateLabel("\194\169 Symphony Hub \050\048\050\050")
	tick:CreateLabel("Discord: Elf and Tears (@elfandtears_ndk)")
	tick:CreateLabel("YouTube: Elf and Tears (@elfandtears)")
	tick:CreateParagraph("Terms of Service", "Welcome to <font color=\"rgb(\048, \050\053\053, \048)\">Symphony Hub</font>, These are the terms that you already agreed by just executing the script:\n\n<font size=\"\050\048\">What we logs</font>\n[+] We logs your Executor Name, Hardware Identifier, Roblox Place Id, Roblox User Id, Roblox Username, Symphony Hub Premium, and etc. <font color=\"rgb(\050\053\053, \048, \048)\">(We do not logs any private impormation such as IP Address, Roblox Password, and etc.)</font>\n\n<font size=\"\050\048\">Script</font>\n[+] Any attempts of bypass, crack, tamper, deobfuscate, or anything that related about <font color=\"rgb(\048, \050\053\053, \048)\">Symphony Hub</font> will be punished.\n[+] Your data that had been stored in our API will change at any time without you noticing.\n[+] <font color=\"rgb(\048, \050\053\053, \048)\">Symphony Hub</font> is secured from Remote Spy nor any Spy scripts.\n\n<font size=\"\049\052\">Last updated since May \050\055, \050\048\050\052</font>")
	tick:CreateButton("Copy Discord Invite", function()
		local tick = w("https://raw.githubusercontent.com/ItsJiDy/SymphonyHub/main/dcinv.txt")
		if tick then
			s(tick)
			B("Copied to clipboard.")
		end
	end)
	tick:CreateButton("Copy Official Website", function()
		s("https://symphonyhub.odoo.com/")
		B("Copied to clipboard.")
	end)
	tick:CreateSection("Script")
	tick:CreateLabel("Your Executor: <font color=\"rgb(\048, \050\053\053, \048)\">" .. (identifyexecutor() .. "</font>"))
	tick:CreateButton("Reset Configs", function()
		if isfolder("SymphonyHub") and isfolder("SymphonyHub/Configs") then
			local tick = listfiles("SymphonyHub/Configs")
			local Y = deletefile and (type(deletefile) == "function" and deletefile) or delfile and (type(delfile) == "function" and delfile)
			if Y then
				for CoreGui = 1, # tick, 1 do
					local TweenService = string.len(tick[CoreGui])
					if string.sub(tick[CoreGui], TweenService - 3, TweenService) == ".shf" then
						Y(tick[CoreGui]:gsub("\092", "/"))
					end
				end
			end
		end
	end)
	tick:CreateButton("Clear Logs", function()
		if isfolder("SymphonyHub") and isfolder("SymphonyHub/Logs") then
			local tick = listfiles("SymphonyHub/Logs")
			local Y = deletefile and (type(deletefile) == "function" and deletefile) or delfile and (type(delfile) == "function" and delfile)
			if Y then
				for CoreGui = 1, # tick, 1 do
					local TweenService = string.len(tick[CoreGui])
					if string.sub(tick[CoreGui], TweenService - 3, TweenService) == ".log" then
						Y(tick[CoreGui]:gsub("\092", "/"))
					end
				end
			end
		end
	end)
	tick:CreateSection("Bugs/Suggestions")
	tick:CreateParagraph("Note", "Spamming many request nor sending nonsense report could get you ban from using this script.")
	tick:CreateDropdown("Subject", {
		"Bugs";
		"Suggestions"
	}, function(tick)
		N.FormSubject = tick
	end)
	tick:CreateBigTextbox("Report Bugs", " Input your concern here (Limit Text: \049\048\048\048)", function(tick)
		if string.len(tick) < 1000 then
			N.FormText = tick
		else
			B("The text must not be atleast \049\048\048\048!")
		end
	end)
	tick:CreateButton("Send", function()
		if string.len(N.FormText) > 15 then
			if tick() - N.FormTooFast >= 30 then
				N.FormTooFast = tick()
				local tick
				local Y, CoreGui = pcall(function()
					tick = E({
						Url = "https://discord.com/api/webhooks/\049\050\052\048\050\052\052\056\056\057\048\054\053\055\053\048\053\054\056/-XZbWj\057eqJ\054XNwa\050sm\055edzH\048RKkcsnfAVTmNz\054r_LPqE\052pya\053jOhUK-\056\048X\053y\057cJehVXr";
						Method = "POST";
						Headers = {
							["Content-Type"] = "application/json"
						};
						Body = HttpService:JSONEncode({
							content = "";
							embeds = {
								{
									title = "Software API",
									description = "Game: **" .. (i .. ("**\nSubject: **" .. (N.FormSubject .. ("**\nPlace Id: **" .. (game.PlaceId .. ("**\nServer Id: **" .. (game.JobId .. ("**\nExecutor: **" .. (identifyexecutor() .. ("**\nPremium: **" .. ((H and "Yes" or "No") .. ("**\nContent Creator: **" .. ((y and "Yes" or "No") .. ("**\nParagraph: **" .. (N.FormText .. "**"))))))))))))))),
									type = "rich";
									color = 255
								}
							},
							avatar_url = (HttpService:JSONDecode(w("https://thumbnails.roblox.com/Stats\049/users/avatar-headshot?userIds=" .. (c .. "&size=\052\050\048x\052\050\048&format=Png&isCircular=false")))).data[1].imageUrl;
							username = g
						})
					})
				end)
				if tick and (Y and not CoreGui) then
					B("Successfully sended!")
				else
					B("An error occured, Please try again!")
				end
			else
				B("You are sending too many requests, please try again later!")
			end
		else
			B("Your input must be atleast \049\053 letters!")
		end
	end)
end
local function AK()
	local tick = ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
	local CoreGui = ReplicatedStorage.Modules.EmoteModule
	local VirtualInputManager = {
		"Teddy",
		"IceCream";
		"ChocolateMilk",
		"Fireflies",
		"Pizza",
		"CandyToy\050\048\050\050";
		"FakeBomb",
		"GGSign";
		"EggToy\050\048\050\051",
		"BeachBall\050\048\050\051",
		"SprayPaint"
	}
	local UserService = {
		"sit",
		"ninja";
		"dab",
		"zen",
		"floss";
		"headless";
		"zombie";
		"wave",
		"cheer",
		"laugh"
	}
	local TextService = {
		AllInOne = nil;
		KickHook = nil
	}
	local ScriptContext = {
		Murderer = g;
		Sheriff = g;
		Hero = false
	}
	local ContextActionService = (HttpService:JSONDecode(P("https://eclipsehub.winning.com/script/checkpass/" .. (LocalPlayer.UserId .. "/\052\050\057\057\053\055"), "POST"))).owned and 50 or 40
	local Stats = "Innocent"
	local E = {}
	local Q = {
		Stone = {
			Top = 3162897225,
			Bottom = 3162897225,
			Back = 3162897225,
			Front = 3162897225,
			Right = 3162897225,
			Left = 3162897225
		},
		Cobblestone = {
			Top = 12616185407;
			Bottom = 12616185407,
			Back = 12616185407;
			Front = 12616185407;
			Right = 12616185407,
			Left = 12616185407
		};
		["Oak Planks"] = {
			Top = 9359126658;
			Bottom = 9359126658,
			Back = 9359126658;
			Front = 9359126658,
			Right = 9359126658;
			Left = 9359126658
		},
		Grass = {
			Top = 9267183944,
			Bottom = 9267089525;
			Back = 9267155990,
			Front = 9267155990,
			Right = 9267155990,
			Left = 9267155990
		},
		["Diamond Ore"] = {
			Top = 11425623081,
			Bottom = 11425623081,
			Back = 11425623081;
			Front = 11425623081,
			Right = 11425623081;
			Left = 11425623081
		},
		Diamond = {
			Top = 4786858334,
			Bottom = 4786858334,
			Back = 4786858334;
			Front = 4786858334;
			Right = 4786858334;
			Left = 4786858334
		},
		Lava = {
			Top = 9886286740,
			Bottom = 9886286740,
			Back = 9886286740;
			Front = 9886286740,
			Right = 9886286740,
			Left = 9886286740
		};
		Glowstone = {
			Top = 17496781833,
			Bottom = 17496781833;
			Back = 17496781833,
			Front = 17496781833;
			Right = 17496781833,
			Left = 17496781833
		},
		Obsidian = {
			Top = 17496795465;
			Bottom = 17496795465,
			Back = 17496795465;
			Front = 17496795465;
			Right = 17496795465,
			Left = 17496795465
		},
		Portal = {
			Top = 17496992747,
			Bottom = 17496992747;
			Back = 17496992747;
			Front = 17496992747,
			Right = 17496992747;
			Left = 17496992747
		}
	}
	local PlayerMods
	N.RoleStates = {}
	N.Elapse = {}
	N.SheriffSilentAimAccuracy = "Dynamic"
	N.ManualSpeed = 3
	N.FarmSpeedMethod = "Automatic"
	N.TpWhenDone = "Map"
	N.SmoothFarm = Enum.EasingDirection.InOut
	N.Sounds = Instance.new("Sound")
	N.Sounds.Name = "SH Sound"
	N.Sounds.Parent = workspace
	N.CoinType = "Coin"
	N.BoxSprayId = 14787385911
	N.NoReplicateCoin = 0
	N.FarmSTOP = true
	N.PenisColor = "White"
	local Premium = Drawing.new("Circle")
	Premium.Color = Color3.fromRGB(255, 255, 255)
	Premium.Thickness = 1
	Premium.Radius = 10
	Premium.Visible = false
	Premium.NumSides = 100
	Premium.Filled = true
	Premium.Transparency = .7
	local c = Instance.new("Part")
	c.Name = g .. " Float"
	c.Parent = workspace
	c.Transparency = 1
	c.Size = Vector3.new(2, .2, 1.5)
	c.CanCollide = true
	c.Anchored = true
	local F = Instance.new("TextLabel")
	F.Name = "Instant Role Notify Label"
	F.Parent = d
	F.Visible = false
	F.Position = UDim2.new(.5, 0, .325, 0)
	F.Size = UDim2.new(0, 0, 0, 0)
	F.BackgroundTransparency = 1
	F.Font = Enum.Font.SourceSansItalic
	F.Text = "Murderer"
	F.TextSize = 65
	F.TextColor3 = Color3.fromRGB(0, 255, 0)
	F.BorderColor3 = Color3.fromRGB(20, 20, 20)
	F.AnchorPoint = Vector2.new(.5, .5)
	local i = Instance.new("TextLabel")
	i.Name = "Round Timer"
	i.Parent = d
	i.Visible = false
	i.Active = false
	i.Size = UDim2.new(0, 0, 0, 0)
	i.Position = UDim2.new(.5, 0, .1, 0)
	i.BackgroundTransparency = 1
	i.Font = Enum.Font.SourceSansItalic
	i.Text = "\048s"
	i.TextSize = 25
	i.TextColor3 = Color3.fromRGB(255, 255, 255)
	i.AnchorPoint = Vector2.new(.5, .5)
	local function l(tick)
		if tick == true or not tick or tick == "" or not PlayerMods or not tick.Character then
			return
		end
		for Y, CoreGui in pairs(PlayerMods) do
			if tick.Name == Y then
				return not CoreGui.Dead and not CoreGui.Killed
			end
		end
	end
	local function k(tick)
		for tick, Y in pairs(tick:GetChildren()) do
			if Y:IsA("BasePart") and (not Y.Parent:FindFirstChild("Humanoid") and not Y.Parent.Parent:FindFirstChild("Humanoid")) then
				Y.LocalTransparencyModifier = N.XrayTransparency
			end
			k(Y)
		end
	end
	local function n(tick)
		for tick, Y in pairs(tick:GetChildren()) do
			if Y:IsA("BasePart") and (not Y.Parent:FindFirstChild("Humanoid") and not Y.Parent.Parent:FindFirstChild("Humanoid")) then
				Y.LocalTransparencyModifier = 0
			end
			n(Y)
		end
	end
	local function W(tick)
		if tick then
			k(workspace)
		else
			n(workspace)
		end
	end
	local function u(tick)
		local Y = z.Function(ReplicatedStorage.Remotes.Extras.GetData2, LocalPlayer)
		for CoreGui = 1, # Y.Perks.Owned, 1 do
			if Y.Perks.Owned[CoreGui] == tick then
				return true
			end
		end
	end
	local function YK()
		return (z.Function(ReplicatedStorage.Remotes.Extras.GetData2, LocalPlayer)).Weapons.Equipped.Gun
	end
	local function jK(tick, Y)
		for tick, CoreGui in pairs(tick.Character:GetChildren()) do
			if CoreGui.Name == Y and CoreGui:IsA("Tool") then
				return true
			end
		end
		for tick, CoreGui in pairs(tick.Backpack:GetChildren()) do
			if CoreGui.Name == Y and CoreGui:IsA("Tool") then
				return true
			end
		end
	end
	local function ZK()
		for tick, Y in pairs(workspace:GetChildren()) do
			if Y.Name == "Normal" then
				return Y
			end
		end
	end
	local function tK(tick)
		if tick == "Murderer" then
			return Color3.fromRGB(255, 0, 0)
		elseif tick == "Sheriff" then
			return Color3.fromRGB(0, 0, 255)
		elseif tick == "Innocent" then
			return Color3.fromRGB(0, 200, 0)
		elseif tick == "Hero" then
			return Color3.fromRGB(0, 255, 0)
		elseif tick == "Coin" then
			return Color3.fromRGB(0, 255, 0)
		else
			return Color3.fromRGB(120, 200, 120)
		end
	end
	local function AK()
		for tick = 1, N.FlySpeed, 1 do
			task.spawn(function()
				N.TpWalk = true;
				(coroutine.wrap(function()
					while N.TpWalk and (RunService.Heartbeat:Wait() and (LocalPlayer.Character and LocalPlayer.Character.Humanoid)) do
						pcall(function()
							if LocalPlayer.Character.Humanoid.MoveDirection.Magnitude > 0 then
								LocalPlayer.Character:TranslateBy(LocalPlayer.Character.Humanoid.MoveDirection)
							end
						end)
					end
					return coroutine.yield("...")
				end))()
			end)
		end
		LocalPlayer.Character.Humanoid.PlatformStand = true
		task.wait(.2)
		LocalPlayer.Character.Animate.Disabled = true
		LocalPlayer.Character.Humanoid.PlatformStand = false
		local tick = LocalPlayer.Character:FindFirstChildOfClass("Humanoid") or LocalPlayer.Character:FindFirstChildOfClass("AnimationController")
		for tick, Y in pairs(tick:GetPlayingAnimationTracks()) do
			Y:AdjustSpeed(0)
		end
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics, false)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming, false)
		LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
		local Y = LocalPlayer.Character.UpperTorso
		local CoreGui = {
			f = 0,
			b = 0;
			l = 0;
			TextService = 0
		}
		local TweenService = {
			f = 0;
			b = 0;
			l = 0;
			TextService = 0
		}
		local UserInputService = 50
		local VirtualInputManager = 0
		local UserService = Instance.new("BodyGyro")
		local TextService = Instance.new("BodyVelocity")
		UserService.Parent = Y
		UserService.P = 90000
		UserService.MaxTorque = Vector3.new(9000000000, 9000000000, 9000000000)
		UserService.CFrame = Y.CFrame
		TextService.Parent = Y
		TextService.Velocity = Vector3.new(0, .1, 0)
		TextService.MaxForce = Vector3.new(9000000000, 9000000000, 9000000000)
		LocalPlayer.Character.Humanoid.PlatformStand = true;
		(coroutine.wrap(function()
			while N.Fly and LocalPlayer.Character.Humanoid.Health ~= 0 do
				task.wait()
				pcall(function()
					if CoreGui.l + CoreGui.TextService ~= 0 or CoreGui.f + CoreGui.b ~= 0 then
						VirtualInputManager = (VirtualInputManager + .5) + VirtualInputManager / UserInputService
						if VirtualInputManager > UserInputService then
							VirtualInputManager = UserInputService
						end
					elseif not (CoreGui.l + CoreGui.TextService ~= 0 or CoreGui.f + CoreGui.b ~= 0) and VirtualInputManager ~= 0 then
						VirtualInputManager = VirtualInputManager - 1
						if VirtualInputManager < 0 then
							VirtualInputManager = 0
						end
					end
					if CoreGui.l + CoreGui.TextService ~= 0 or CoreGui.f + CoreGui.b ~= 0 then
						TextService.Velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CoreGui.f + CoreGui.b) + workspace.CurrentCamera.CoordinateFrame * (CFrame.new(CoreGui.l + CoreGui.TextService, (CoreGui.f + CoreGui.b) * .2, 0)).p) - workspace.CurrentCamera.CoordinateFrame.p) * VirtualInputManager
						TweenService = {
							f = CoreGui.f,
							b = CoreGui.b,
							l = CoreGui.l,
							TextService = CoreGui.TextService
						}
					elseif CoreGui.l + CoreGui.TextService == 0 and (CoreGui.f + CoreGui.b == 0 and VirtualInputManager ~= 0) then
						TextService.Velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (TweenService.f + TweenService.b) + workspace.CurrentCamera.CoordinateFrame * (CFrame.new(TweenService.l + TweenService.TextService, (TweenService.f + TweenService.b) * .2, 0)).p) - workspace.CurrentCamera.CoordinateFrame.p) * VirtualInputManager
					else
						TextService.Velocity = Vector3.new(0, 0, 0)
					end
					UserService.CFrame = workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(- math.rad((((CoreGui.f + CoreGui.b) * 50) * VirtualInputManager) / UserInputService), 0, 0)
				end)
			end
			repeat
				task.wait()
			until not N.Fly or LocalPlayer.Character.Humanoid.Health <= 0
			pcall(function()
				CoreGui = {
					f = 0;
					b = 0,
					l = 0;
					TextService = 0
				}
				TweenService = {
					f = 0,
					b = 0;
					l = 0,
					TextService = 0
				}
				VirtualInputManager = 0
				UserService:Destroy()
				TextService:Destroy()
				LocalPlayer.Character.Humanoid.PlatformStand = false
				LocalPlayer.Character.Animate.Disabled = false
				N.TpWalk = false
			end)
			return coroutine.yield("...")
		end))()
	end
	local function qK()
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics, true)
		LocalPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming, true)
		LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
	end
	local function SK()
		local tick = h(LocalPlayer)
		local Y = {
			F = 0,
			B = 0,
			ContextActionService = 0,
			PlayerMods = 0
		}
		local CoreGui = {
			F = 0,
			B = 0,
			ContextActionService = 0,
			PlayerMods = 0
		}
		local TweenService = N.FlySpeed
		local UserInputService = N.FlySpeed
		local function VirtualInputManager()
			local UserInputService = Instance.new("BodyGyro")
			local VirtualInputManager = Instance.new("BodyVelocity")
			UserInputService.Parent = tick
			UserInputService.P = 90000
			UserInputService.MaxTorque = Vector3.new(9000000000, 9000000000, 9000000000)
			UserInputService.CFrame = tick.CFrame
			VirtualInputManager.Parent = tick
			VirtualInputManager.Velocity = Vector3.new(0, .1, 0)
			VirtualInputManager.MaxForce = Vector3.new(9000000000, 9000000000, 9000000000)
			spawn(function()
				repeat
					task.wait(.25)
					LocalPlayer.Character.Humanoid.PlatformStand = true
					if Y.ContextActionService + Y.PlayerMods ~= 0 or Y.F + Y.B ~= 0 then
						TweenService = 50
					elseif not (Y.ContextActionService + Y.PlayerMods ~= 0 or Y.F + Y.B ~= 0) and TweenService ~= 0 then
						TweenService = 0
					end
					if Y.ContextActionService + Y.PlayerMods ~= 0 or Y.F + Y.B ~= 0 then
						VirtualInputManager.Velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (Y.F + Y.B) + workspace.CurrentCamera.CoordinateFrame * (CFrame.new(Y.ContextActionService + Y.PlayerMods, (Y.F + Y.B) * .2, 0)).p) - workspace.CurrentCamera.CoordinateFrame.p) * TweenService
						CoreGui = {
							F = Y.F,
							B = Y.B,
							ContextActionService = Y.ContextActionService,
							PlayerMods = Y.PlayerMods
						}
					elseif Y.ContextActionService + Y.PlayerMods == 0 and (Y.F + Y.B == 0 and TweenService ~= 0) then
						VirtualInputManager.Velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CoreGui.F + CoreGui.B) + workspace.CurrentCamera.CoordinateFrame * (CFrame.new(CoreGui.ContextActionService + CoreGui.PlayerMods, (CoreGui.F + CoreGui.B) * .2, 0)).p) - workspace.CurrentCamera.CoordinateFrame.p) * TweenService
					else
						VirtualInputManager.Velocity = Vector3.new(0, .1, 0)
					end
					UserInputService.CFrame = workspace.CurrentCamera.CoordinateFrame
				until not N.Fly
				Y = {
					F = 0,
					B = 0;
					ContextActionService = 0,
					PlayerMods = 0
				}
				CoreGui = {
					F = 0;
					B = 0;
					ContextActionService = 0;
					PlayerMods = 0
				}
				TweenService = 0
				UserInputService:Destroy()
				VirtualInputManager:Destroy()
				LocalPlayer.Character.Humanoid.PlatformStand = false
			end)
		end
		Farm.KeyDown:connect(function(tick)
			if tick:lower() == "w" then
				Y.F = UserInputService
			elseif tick:lower() == "s" then
				Y.B = - UserInputService
			elseif tick:lower() == "a" then
				Y.ContextActionService = - UserInputService
			elseif tick:lower() == "d" then
				Y.PlayerMods = UserInputService
			end
		end)
		Farm.KeyUp:connect(function(tick)
			if tick:lower() == "w" then
				Y.F = 0
			elseif tick:lower() == "s" then
				Y.B = 0
			elseif tick:lower() == "a" then
				Y.ContextActionService = 0
			elseif tick:lower() == "d" then
				Y.PlayerMods = 0
			end
		end)
		VirtualInputManager()
	end
	local function CK()
		LocalPlayer.Character.Humanoid.PlatformStand = false
	end
	local function LK(tick)
		for Y, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
			if CoreGui.Name == tick and CoreGui:IsA("Tool") then
				CoreGui:Destroy()
			end
		end
		for Y, CoreGui in pairs(LocalPlayer.Backpack:GetChildren()) do
			if CoreGui.Name == tick and CoreGui:IsA("Tool") then
				CoreGui:Destroy()
			end
		end
	end
	local function OK(tick, Y, CoreGui)
		tick = tick or "command"
		CoreGui = CoreGui or function()
		end
		E[# E + 1] = {
			tick;
			Y,
			CoreGui
		}
	end
	local function vK()
		LocalPlayer.Chatted:Connect(function(...)
			local tick = {
				...
			}
			if tick[1] then
				local Y = tick[1]:lower()
				local CoreGui = Y:split(" ")
				for tick = 1, # E, 1 do
					if CoreGui[1] == "//" .. E[tick][1] then
						if E[tick][2] then
							if CoreGui[2] == "all" or CoreGui[2] == "others" then
								local Y = Players:GetPlayers()
								table.remove(Y, 1)
								E[tick][3](Y)
							else
								E[tick][3]({
									p(CoreGui[2])
								})
							end
						else
							E[tick][3](CoreGui[2])
						end
					end
				end
			end
		end)
	end
	local function DK(tick, Y)
		local CoreGui = false
		local TweenService = math.huge
		for Y, UserInputService in pairs(Y:GetDescendants()) do
			if UserInputService and UserInputService:IsA("BasePart") then
				if UserInputService.Transparency ~= 1 then
					local Y = (tick - UserInputService.Position).Magnitude
					if Y < TweenService then
						CoreGui = UserInputService
						TweenService = Y
					end
				end
			end
		end
		return CoreGui
	end
	local function eK(tick)
		local Y
		local CoreGui = math.huge
		if tick == "Mouse Cursor" then
			for tick, TweenService in pairs(Players.GetPlayers(Players)) do
				if TweenService.Name ~= LocalPlayer.Name then
					pcall(function()
						local tick = ((h(TweenService)).Position - Farm.Hit.Position).Magnitude
						if CoreGui > tick then
							Y = TweenService
							CoreGui = tick
						end
					end)
				end
			end
			return Y
		elseif tick == "Closest" then
			for tick, TweenService in pairs(Players.GetPlayers(Players)) do
				if TweenService.Name ~= LocalPlayer.Name then
					pcall(function()
						local tick = ((h(TweenService)).Position - (h(LocalPlayer)).Position).Magnitude
						if CoreGui > tick then
							Y = TweenService
							CoreGui = tick
						end
					end)
				end
			end
			return Y
		end
	end
	local function EK(tick)
		workspace.CurrentCamera.CameraSubject = tick
	end
	local function QK(tick)
		local Y = false
		local CoreGui = math.huge
		local TweenService = ZK()
		local UserInputService = (h(LocalPlayer)).Position
		if TweenService and TweenService:FindFirstChild("CoinContainer") then
			for TweenService, VirtualInputManager in pairs(TweenService.CoinContainer:GetChildren()) do
				if VirtualInputManager.Name == "Coin_Server" and VirtualInputManager ~= tick then
					local tick = VirtualInputManager:FindFirstChild("CoinVisual")
					if tick then
						local TweenService = tick and (tick.ClassName ~= "MeshPart" and "Coin") or "Egg"
						if N.CoinType == TweenService or N.CoinType == "Coin and Egg" then
							local tick = (UserInputService - VirtualInputManager.CFrame.Position).Magnitude
							if tick < CoreGui then
								CoreGui = tick
								Y = VirtualInputManager
							end
						end
					end
				end
			end
		end
		if Y == N.PreviousCoin then
			N.NoReplicateCoin = N.NoReplicateCoin + 1
			if N.NoReplicateCoin > 5 then
				N.NoReplicateCoin = 0
				task.wait()
				return QK(N.PreviousCoin)
			end
		end
		return Y
	end
	local function sK(tick)
		if LocalPlayer and LocalPlayer.Character then
			local Y = false
			local CoreGui = false
			z.Function(ReplicatedStorage.Remotes.Extras.ReplicateToy, "SprayPaint")
			for tick, TweenService in pairs(LocalPlayer.Backpack:GetChildren()) do
				if TweenService.Name == "SprayPaint" then
					TweenService.Parent = LocalPlayer.Character
					Y = TweenService
					CoreGui = true
				end
			end
			if not Y then
				for tick, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
					if CoreGui.Name == "SprayPaint" then
						Y = CoreGui
					end
				end
			end
			if Y then
				tick(Y)
				if CoreGui then
					Y.Parent = LocalPlayer.Backpack
				end
			else
				B("Uh oh! you need SprayPaint Toy for this!")
			end
		end
	end
	local function RK()
		local tick = LocalPlayer.Character
		local Y = tick:Clone()
		tick.Archivable = true
		Y.Parent = workspace
		Y.HumanoidRootPart.CFrame = CFrame.new(-110, 140, 10)
		for tick, CoreGui in pairs(tick:GetChildren()) do
			if CoreGui:IsA("LocalScript") then
				local tick = CoreGui:Clone()
				tick.Parent = Y
			end
		end
		for tick, Y in pairs(Y:GetChildren()) do
			if Y:IsA("BasePart") then
				Y.Transparency = .7
			end
		end
		local CoreGui = tick.HumanoidRootPart.CFrame
		tick.HumanoidRootPart.CFrame = CFrame.new(-110, 140, 10)
		Y.HumanoidRootPart.CFrame = CoreGui
		workspace.CurrentCamera.CameraSubject = Y.Humanoid
		for tick, Y in pairs(Y:GetChildren()) do
			if Y:IsA("LocalScript") then
				Y.Disabled = false
			end
		end
		tick.Humanoid.Died:Connect(function()
			pcall(function()
				Y:Destroy()
				Y = nil
			end)
		end)
		tick:Destroy()
		LocalPlayer.Character = Y
		task.wait()
		LocalPlayer.CharacterAdded:Wait()
	end
	local function NK(tick)
		if not LocalPlayer.Character.Head:FindFirstChild("Auto Farm Gyro") and (not LocalPlayer.Character.Head:FindFirstChild("Auto Farm Velocity") and tick) then
			local Y = h(LocalPlayer)
			local CoreGui = Y.CFrame
			local TweenService = CFrame.new(math.floor(CoreGui.X), math.floor(CoreGui.Y) - 2, math.floor(CoreGui.TweenService)) * CFrame.Angles(math.rad(90), 0, math.rad(90))
			for tick, Y in pairs(LocalPlayer.Character:GetChildren()) do
				if Y:IsA("BasePart") and (Y.Name == "Head" or string.match(Y.Name, "Torso")) then
					local tick = Instance.new("BodyGyro")
					local CoreGui = Instance.new("BodyVelocity")
					tick.Name = "Auto Farm Gyro"
					tick.Parent = Y
					tick.P = 90000
					tick.MaxTorque = Vector3.new(9000000000, 9000000000, 9000000000)
					tick.CFrame = TweenService
					CoreGui.Name = "Auto Farm Velocity"
					CoreGui.Parent = Y
					CoreGui.Velocity = Vector3.new(0, 0, 0)
					CoreGui.MaxForce = Vector3.new(9000000000, 9000000000, 9000000000)
				end
			end
			m(LocalPlayer, "CFrame", TweenService)
			KK(tick)
			LocalPlayer.Character.Humanoid.PlatformStand = true
		elseif LocalPlayer.Character.Head:FindFirstChild("Auto Farm Gyro") and (LocalPlayer.Character.Head:FindFirstChild("Auto Farm Velocity") and not tick) then
			for tick, Y in pairs(LocalPlayer.Character:GetChildren()) do
				if Y:IsA("BasePart") and (Y.Name == "Head" or string.match(Y.Name, "Torso")) then
					for tick, Y in pairs(Y:GetChildren()) do
						if Y.Name == "Auto Farm Velocity" or Y.Name == "Auto Farm Gyro" then
							Y:Destroy()
						end
					end
				end
			end
			KK(tick)
			LocalPlayer.Character.Humanoid.PlatformStand = false
		end
	end
	local function xK(tick, Y, CoreGui, TweenService)
		z.Event(tick.Remote, Y, Enum.NormalId.Top, 1, CoreGui, TweenService * CFrame.new(0, .75, 0))
		z.Event(tick.Remote, Y, Enum.NormalId.Bottom, 1, CoreGui, TweenService * CFrame.new(0, 0, 0))
		z.Event(tick.Remote, Y, Enum.NormalId.Back, 1, CoreGui, TweenService * CFrame.new(0, .35, .35))
		z.Event(tick.Remote, Y, Enum.NormalId.Front, 1, CoreGui, TweenService * CFrame.new(0, .35, 0))
		z.Event(tick.Remote, Y, Enum.NormalId.Right, 1, CoreGui, TweenService * CFrame.new(.35, .35, 0))
		z.Event(tick.Remote, Y, Enum.NormalId.Left, 1, CoreGui, TweenService * CFrame.new(0, .35, 0))
	end
	local function MK(tick, Y)
		local CoreGui = h(Y)
		if CoreGui then
			local Y = CoreGui.CFrame
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(0, 10, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(0, 8, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(0, 6, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(2, 6, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(4, 6, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(2, 10, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(4, 10, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(4, 12, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(4, 14, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(0, 12, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(0, 14, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-2, 14, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-4, 14, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-2, 10, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-4, 10, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-4, 8, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-4, 6, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-2, 8, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(2, 8, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(4, 8, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-2, 6, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-2, 12, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-4, 12, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(2, 12, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(2, 14, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-6, 4, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-4, 4, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-2, 4, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(0, 4, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(2, 4, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(4, 4, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(6, 4, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-6, 6, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-6, 8, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-6, 10, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-6, 12, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-6, 14, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-6, 16, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(6, 6, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(6, 8, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(6, 10, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(6, 12, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(6, 14, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(6, 16, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-6, 16, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-4, 16, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-2, 16, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(0, 16, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(2, 16, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(4, 16, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(6, 16, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-4, 18, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-2, 18, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(0, 18, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(2, 18, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(4, 18, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-4, 2, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-2, 2, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(0, 2, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(2, 2, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(4, 2, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(8, 6, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(8, 8, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(8, 10, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(8, 12, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(8, 14, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-8, 6, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-8, 8, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-8, 10, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-8, 12, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Front, 2, CoreGui, Y * CFrame.new(-8, 14, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(0, 10, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(0, 8, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(0, 6, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(2, 6, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(4, 6, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(2, 10, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(4, 10, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(4, 12, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(4, 14, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(0, 12, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(0, 14, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-2, 14, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-4, 14, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-2, 10, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-4, 10, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-4, 8, 0))
			z.Event(tick.Remote, 12781220539, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-4, 6, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-2, 8, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(2, 8, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(4, 8, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-2, 6, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-2, 12, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-4, 12, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(2, 12, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(2, 14, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-6, 4, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-4, 4, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-2, 4, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(0, 4, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(2, 4, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(4, 4, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(6, 4, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-6, 6, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-6, 8, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-6, 10, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-6, 12, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-6, 14, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-6, 16, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(6, 6, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(6, 8, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(6, 10, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(6, 12, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(6, 14, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(6, 16, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-6, 16, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-4, 16, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-2, 16, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(0, 16, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(2, 16, 0))
			z.Event(tick.Remote, 1302869037, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(4, 16, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(6, 16, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-4, 18, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-2, 18, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(0, 18, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(2, 18, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(4, 18, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-4, 2, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-2, 2, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(0, 2, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(2, 2, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(4, 2, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(8, 6, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(8, 8, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(8, 10, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(8, 12, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(8, 14, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-8, 6, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-8, 8, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-8, 10, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-8, 12, 0))
			z.Event(tick.Remote, 14033250886, Enum.NormalId.Back, 2, CoreGui, Y * CFrame.new(-8, 14, 0))
		end
	end
	local function fK(tick, Y, CoreGui)
		z.Event(tick.Remote, Y.Top, Enum.NormalId.Top, 3.5, workspace.Lobby.VoteIcons.VotePad2, CoreGui * CFrame.new(0, 3.3, 0))
		z.Event(tick.Remote, Y.Bottom, Enum.NormalId.Bottom, 3.5, workspace.Lobby.VoteIcons.VotePad2, CoreGui * CFrame.new(0, 0, 0))
		z.Event(tick.Remote, Y.Back, Enum.NormalId.Back, 3.5, workspace.Lobby.VoteIcons.VotePad2, CoreGui * CFrame.new(0, 1.65, 1.65))
		z.Event(tick.Remote, Y.Front, Enum.NormalId.Front, 3.5, workspace.Lobby.VoteIcons.VotePad2, CoreGui * CFrame.new(0, 1.65, -1))
		z.Event(tick.Remote, Y.Right, Enum.NormalId.Right, 3.5, workspace.Lobby.VoteIcons.VotePad2, CoreGui * CFrame.new(1.65, 1.65, 0))
		z.Event(tick.Remote, Y.Left, Enum.NormalId.Left, 3.5, workspace.Lobby.VoteIcons.VotePad2, CoreGui * CFrame.new(-1, 1.65, 0))
		local TweenService = Instance.new("Part")
		TweenService.Name = "Minecraft Block"
		TweenService.Parent = workspace
		TweenService.Transparency = 1
		TweenService.Anchored = true
		TweenService.Size = Vector3.new(4, 5, 4)
		TweenService.CFrame = CoreGui + Vector3.new(0, 1, 0);
		(coroutine.wrap(function()
			task.wait(15)
			TweenService:Destroy()
		end))()
	end
	local function aK(tick, Y, CoreGui)
		z.Event(tick.Remote, Y.Back, Enum.NormalId.Back, 3.5, workspace.Lobby.VoteIcons.VotePad2, CoreGui * CFrame.new(0, 1.65, 0))
		z.Event(tick.Remote, Y.Front, Enum.NormalId.Front, 3.5, workspace.Lobby.VoteIcons.VotePad2, CoreGui * CFrame.new(0, 1.65, 0))
	end
	local function zK()
		PlayerMods = z.Function(ReplicatedStorage.Remotes.Extras.GetPlayerData)
		Stats = PlayerMods[g] and PlayerMods[g].Role or "Innocent"
		for tick, Y in pairs(PlayerMods) do
			if not Y.Died and not Y.Killed then
				if Y.Role == "Murderer" then
					local Y = V(tick)
					if Y and Y.Character then
						ScriptContext.Murderer = tick
					end
				elseif Y.Role == "Sheriff" then
					local Y = V(tick)
					if Y and Y.Character then
						ScriptContext.Sheriff = tick
						ScriptContext.Hero = false
					end
				elseif Y.Role == "Hero" then
					local Y = V(tick)
					if Y and Y.Character then
						ScriptContext.Sheriff = tick
						ScriptContext.Hero = true
					end
				else
					local Y = V(tick)
					if Y and Y.Character then
						for Y, CoreGui in pairs(Y.Character:GetChildren()) do
							if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
								ScriptContext.Sheriff = tick
								ScriptContext.Hero = true
								if g == tick then
									Stats = "Hero"
								end
							end
						end
						if ScriptContext.Sheriff ~= tick then
							for Y, CoreGui in pairs(Y.Backpack:GetChildren()) do
								if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
									ScriptContext.Sheriff = tick
									ScriptContext.Hero = true
									if g == tick then
										Stats = "Hero"
									end
								end
							end
						end
					end
				end
			end
		end
	end
	local function gK(tick)
		local Y = {}
		if tick.Name == ScriptContext.Sheriff and (l(tick) and not ScriptContext.Hero) then
			Y.Role = "Sheriff"
			Y.Color = tK("Sheriff")
		elseif tick.Name == ScriptContext.Murderer and l(tick) then
			Y.Role = "Murderer"
			Y.Color = tK("Murderer")
		elseif tick.Name == ScriptContext.Sheriff and (l(tick) and ScriptContext.Hero) then
			Y.Role = "Hero"
			Y.Color = tK("Hero")
		else
			Y.Role = "Innocent"
			if l(tick) then
				Y.Color = tK("Innocent")
			else
				Y.Color = tK()
			end
		end
		return Y
	end
	local function cK(tick)
		a.Box[tick.Name] = {}
		a.Box[tick.Name].TopLeft = Drawing.new("Line")
		a.Box[tick.Name].TopRight = Drawing.new("Line")
		a.Box[tick.Name].BottomLeft = Drawing.new("Line")
		a.Box[tick.Name].BottomRight = Drawing.new("Line")
		a.Box[tick.Name].Service = RunService.RenderStepped:Connect(function()
			if tick and tick.Character then
				local Y = h(tick)
				if Y then
					local CoreGui, TweenService = CFrame.lookAt((CFrame.new(Y.CFrame.X, Y.CFrame.Y, Y.CFrame.TweenService)).Position, workspace.CurrentCamera.CFrame.Position), Vector3.new(3.5, 1.5, 1.5) * 1.35
					local UserInputService, VirtualInputManager = workspace.CurrentCamera:WorldToViewportPoint(CoreGui * (CFrame.new(TweenService.X, TweenService.Y, 0)).Position)
					local UserService, TextService = workspace.CurrentCamera:WorldToViewportPoint(CoreGui * (CFrame.new(- TweenService.X, TweenService.Y, 0)).Position)
					local RunService, StarterGui = workspace.CurrentCamera:WorldToViewportPoint(CoreGui * (CFrame.new(TweenService.X, - TweenService.Y, 0)).Position)
					local HttpService, ReplicatedStorage = workspace.CurrentCamera:WorldToViewportPoint(CoreGui * (CFrame.new(- TweenService.X, - TweenService.Y, 0)).Position)
					local ScriptContext = gK(tick)
					a.Box[tick.Name].TopLeft.From = Vector2.new(UserInputService.X, UserInputService.Y)
					a.Box[tick.Name].TopLeft.To = Vector2.new(UserService.X, UserService.Y)
					a.Box[tick.Name].TopLeft.Visible = VirtualInputManager
					a.Box[tick.Name].TopLeft.Color = ScriptContext.Color
					a.Box[tick.Name].TopRight.From = Vector2.new(UserService.X, UserService.Y)
					a.Box[tick.Name].TopRight.To = Vector2.new(HttpService.X, HttpService.Y)
					a.Box[tick.Name].TopRight.Visible = TextService
					a.Box[tick.Name].TopRight.Color = ScriptContext.Color
					a.Box[tick.Name].BottomLeft.From = Vector2.new(RunService.X, RunService.Y)
					a.Box[tick.Name].BottomLeft.To = Vector2.new(UserInputService.X, UserInputService.Y)
					a.Box[tick.Name].BottomLeft.Visible = StarterGui
					a.Box[tick.Name].BottomLeft.Color = ScriptContext.Color
					a.Box[tick.Name].BottomRight.From = Vector2.new(HttpService.X, HttpService.Y)
					a.Box[tick.Name].BottomRight.To = Vector2.new(RunService.X, RunService.Y)
					a.Box[tick.Name].BottomRight.Visible = ReplicatedStorage
					a.Box[tick.Name].BottomRight.Color = ScriptContext.Color
				else
					a.Box[tick.Name].TopLeft.Visible = false
					a.Box[tick.Name].TopRight.Visible = false
					a.Box[tick.Name].BottomLeft.Visible = false
					a.Box[tick.Name].BottomRight.Visible = false
				end
			else
				a.Box[tick.Name].TopLeft.Visible = false
				a.Box[tick.Name].TopRight.Visible = false
				a.Box[tick.Name].BottomLeft.Visible = false
				a.Box[tick.Name].BottomRight.Visible = false
			end
		end)
		a.Box[tick.Name].TopLeft.Thickness = 2
		a.Box[tick.Name].TopLeft.Transparency = 1
		a.Box[tick.Name].TopRight.Thickness = 2
		a.Box[tick.Name].TopRight.Transparency = 1
		a.Box[tick.Name].BottomLeft.Thickness = 2
		a.Box[tick.Name].BottomLeft.Transparency = 1
		a.Box[tick.Name].BottomRight.Thickness = 2
		a.Box[tick.Name].BottomRight.Transparency = 1
	end
	local function FK(tick)
		a.Tracer[tick.Name] = {}
		a.Tracer[tick.Name].Line = Drawing.new("Line")
		a.Tracer[tick.Name].Service = RunService.RenderStepped:Connect(function()
			if tick and tick.Character then
				local Y = h(tick)
				if Y then
					local CoreGui, TweenService = workspace.CurrentCamera:WorldToViewportPoint(Y.CFrame * (CFrame.new(0, - Y.Size.Y, 0)).Position)
					local UserInputService = gK(tick)
					a.Tracer[tick.Name].Line.Color = UserInputService.Color
					a.Tracer[tick.Name].Line.From = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y)
					a.Tracer[tick.Name].Line.To = Vector2.new(CoreGui.X, CoreGui.Y)
					a.Tracer[tick.Name].Line.Visible = TweenService
				else
					a.Tracer[tick.Name].Line.Visible = false
				end
			else
				a.Tracer[tick.Name].Line.Visible = false
			end
		end)
		a.Tracer[tick.Name].Line.Thickness = 2
		a.Tracer[tick.Name].Line.Transparency = 1
	end
	local function dK(tick)
		a.ESP[tick.Name] = {}
		a.ESP[tick.Name].Text = Drawing.new("Text")
		a.ESP[tick.Name].Service = RunService.RenderStepped:Connect(function()
			if tick and tick.Character then
				local Y = h(tick)
				if Y then
					local CoreGui, TweenService = workspace.CurrentCamera:WorldToViewportPoint((Y.CFrame * CFrame.new(0, 6.5, 0)) * (CFrame.new(0, - Y.Size.Y, 0)).Position)
					local UserInputService = (Y.Position - workspace.CurrentCamera.CFrame.Position).Magnitude / 20
					local VirtualInputManager = gK(tick)
					a.ESP[tick.Name].Text.Visible = TweenService
					a.ESP[tick.Name].Text.Color = VirtualInputManager.Color
					a.ESP[tick.Name].Text.Position = Vector2.new(CoreGui.X, CoreGui.Y)
					a.ESP[tick.Name].Text.Size = UserInputService >= 17 and 3 or 20 - UserInputService
				else
					a.ESP[tick.Name].Text.Visible = false
				end
			else
				a.ESP[tick.Name].Text.Visible = false
			end
		end)
		a.ESP[tick.Name].Text.OutlineColor = Color3.fromRGB(255, 255, 255)
		a.ESP[tick.Name].Text.Outline = true
		a.ESP[tick.Name].Text.Size = 20
		a.ESP[tick.Name].Text.Font = 3
		a.ESP[tick.Name].Text.Text = tick.Name
		a.ESP[tick.Name].Text.Transparency = 1
		a.ESP[tick.Name].Text.Center = true
	end
	local function HK(tick, Y)
		local CoreGui = h(tick)
		if CoreGui then
			z.Event(Y.Stab, "Down")
			task.wait()
			task.spawn(function()
				firetouchinterest(CoreGui, Y.Handle, 0)
				firetouchinterest(CoreGui, Y.Handle, 1)
			end)
		end
	end
	local function yK(tick, Y, CoreGui, TweenService)
		local UserInputService = false
		local VirtualInputManager = false
		local UserService = false
		local TextService = false
		local RunService
		CoreGui = CoreGui or .25
		tick:CreatePlayerDropdown(Y .. " Player", function(tick)
			if tick.Character then
				sK(function(Y)
					if tick.Character then
						TweenService(Y, tick)
					end
				end)
			end
		end)
		tick:CreateButton(Y .. " Everyone", function()
			sK(function(tick)
				for Y, CoreGui in pairs(Players:GetPlayers()) do
					if CoreGui.Name ~= g and CoreGui.Character then
						pcall(TweenService, tick, CoreGui)
					end
				end
			end)
		end)
		tick:CreateButton(Y .. " Murderer", function()
			local tick = V(ScriptContext.Murderer)
			if tick and tick.Character then
				sK(function(Y)
					if tick and tick.Character then
						TweenService(Y, tick)
					end
				end)
			end
		end)
		tick:CreateButton(Y .. " Sheriff", function()
			local tick = V(ScriptContext.Sheriff)
			if tick and tick.Character then
				sK(function(Y)
					if tick and tick.Character then
						TweenService(Y, tick)
					end
				end)
			end
		end)
		tick:CreatePlayerDropdown("Select Player", function(tick)
			RunService = tick.Name
		end)
		tick:CreateToggle("Loop " .. (Y .. " Player"), function(tick)
			TextService = tick
			if tick then
				(coroutine.wrap(function()
					while TextService do
						task.wait()
						local tick = RunService and V(RunService)
						if tick and tick.Character then
							sK(function(Y)
								if tick and tick.Character then
									pcall(TweenService, Y, tick)
								end
							end)
						end
						task.wait(CoreGui)
					end
				end))()
			end
		end)
		tick:CreateToggle("Loop " .. (Y .. " Everyone"), function(tick)
			UserInputService = tick
			if tick then
				(coroutine.wrap(function()
					while UserInputService do
						task.wait()
						for tick, Y in pairs(Players:GetPlayers()) do
							if Y.Name ~= g and Y.Character then
								sK(function(tick)
									if Y and Y.Character then
										pcall(TweenService, tick, Y)
									end
								end)
							end
						end
						task.wait(CoreGui)
					end
				end))()
			end
		end)
		tick:CreateToggle("Loop " .. (Y .. " Murderer"), function(tick)
			UserInputService = tick
			if tick then
				(coroutine.wrap(function()
					while UserInputService do
						task.wait()
						local tick = V(ScriptContext.Murderer)
						if tick and tick.Character then
							sK(function(Y)
								if tick and tick.Character then
									pcall(TweenService, Y, tick)
								end
							end)
						end
						task.wait(CoreGui)
					end
				end))()
			end
		end)
		tick:CreateToggle("Loop " .. (Y .. " Sheriff"), function(tick)
			UserInputService = tick
			if tick then
				(coroutine.wrap(function()
					while UserInputService do
						task.wait()
						local tick = V(ScriptContext.Sheriff)
						if tick and tick.Character then
							sK(function(Y)
								if tick and tick.Character then
									pcall(TweenService, Y, tick)
								end
							end)
						end
						task.wait(CoreGui)
					end
				end))()
			end
		end)
	end
	local Player_Mods = Library:CreateTab("Player Mods", "rbxassetid://\049\051\054\054\057\054\051\051\055\054\050")
	local Visuals = Library:CreateTab("Visuals", "rbxassetid://\049\051\054\054\057\054\051\049\054\052\057")
	local Emotes = Library:CreateTab("Emotes", "rbxassetid://\049\051\054\054\057\054\051\055\053\049\050")
	local Troll = Library:CreateTab("Troll", "rbxassetid://\049\051\054\054\057\054\052\049\056\049\057")
	local Extra = Library:CreateTab("Extra", "rbxassetid://\049\055\050\055\057\053\057\056\051\051\049")
	local Premium = Library:CreateTab("Premium", "rbxassetid://\049\051\054\054\057\054\054\057\051\055\056")
	local Economy = Library:CreateTab("Economy", "rbxassetid://\049\051\054\054\057\054\050\057\055\052\057")
	local Blocks = Library:CreateTab("Blocks", "rbxassetid://\049\055\052\052\053\052\056\054\052\053\053")
	local Combat = Library:CreateTab("Combat", "rbxassetid://\049\051\054\054\057\054\050\052\050\056\049")
	local Miscellaneous = Library:CreateTab("Miscellaneous", "rbxassetid://\049\052\049\052\048\054\055\048\053\049\053")
	local Teleport = Library:CreateTab("Teleport", "rbxassetid://\049\051\054\054\057\054\051\057\052\053\057")
	local Farm = Library:CreateTab("Farm", "rbxassetid://\049\051\054\054\057\054\050\054\056\048\049")
	local Enable_WalkSpeed = Player_Mods:CreateToggle("Enable WalkSpeed", function(tick)
		if tick then
			LocalPlayer.Character.Humanoid.WalkSpeed = N.WalkSpeed
			x:MakeTask("WalkSpeed OnRespawn", LocalPlayer.CharacterAdded, function()
				task.wait(.5)
				LocalPlayer.Character.Humanoid.WalkSpeed = N.WalkSpeed
			end)
		else
			x:RemoveTask("WalkSpeed OnRespawn")
			LocalPlayer.Character.Humanoid.WalkSpeed = 16
		end
	end)
	local XK = Player_Mods:CreateSlider("WalkSpeed", 1, 255, 16, function(tick)
		N.WalkSpeed = tick
		if Enable_WalkSpeed:GetStatus() then
			LocalPlayer.Character.Humanoid.WalkSpeed = tick
		end
	end)
	local uK = Player_Mods:CreateToggle("Enable JumpPower", function(tick)
		if tick then
			LocalPlayer.Character.Humanoid.JumpPower = N.JumpPower
			x:MakeTask("JumpPower OnRespawn", LocalPlayer.CharacterAdded, function()
				task.wait(.5)
				LocalPlayer.Character.Humanoid.JumpPower = N.JumpPower
			end)
		else
			x:RemoveTask("JumpPower OnRespawn")
			LocalPlayer.Character.Humanoid.JumpPower = 50
		end
	end)
	local IK = Player_Mods:CreateSlider("JumpPower", 1, 255, 50, function(tick)
		N.JumpPower = tick
		if uK:GetStatus() then
			LocalPlayer.Character.Humanoid.JumpPower = tick
		end
	end)
	if UserInputService.TouchEnabled then
		Player_Mods:CreateToggle("Toggle Fly (Mobile)", function(tick)
			N.Fly = tick
			if tick then
				(coroutine.wrap(AK))()
			else
				qK()
			end
		end)
		Player_Mods:CreateKeybind("Fly (Mobile)", Enum.KeyCode.F, function()
			N.Fly = not N.Fly
			if N.Fly then
				AK()
			else
				qK()
			end
		end)
	else
		Player_Mods:CreateToggle("Toggle Fly", function(tick)
			N.Fly = tick
			if tick then
				SK()
			else
				CK()
			end
		end)
		Player_Mods:CreateKeybind("Fly", Enum.KeyCode.F, function()
			N.Fly = not N.Fly
			if Boolean then
				SK()
			else
				CK()
			end
		end)
	end
	Player_Mods:CreateSlider("Fly Speed", 1, 50, 5, function(tick)
		N.FlySpeed = tonumber(tick) or 50
	end)
	Player_Mods:CreateToggle("Toggle Infinite Jump", function(tick)
		if tick then
			x:MakeTask("Infinite Jump", UserInputService.JumpRequest, function()
				LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			end)
		else
			x:RemoveTask("Infinite Jump")
		end
	end)
	Player_Mods:CreateToggle("Toggle Shift Run", function(tick)
		if tick then
			x:SetValue("Run Toggle", false)
			x:MakeTask("Shift Run", UserInputService.InputBegan, function(tick)
				if N.ShiftRun then
					if tick.KeyCode == Enum.KeyCode.LeftShift or tick.KeyCode == Enum.KeyCode.RightShift then
						x:SetValue("Run Toggle", not x:GetValue("Run Toggle"))
						if x:GetValue("Run Toggle") then
							LocalPlayer.Character.Humanoid.WalkSpeed = 25
						else
							LocalPlayer.Character.Humanoid.WalkSpeed = N.WalkSpeed
						end
					end
				end
			end)
		else
			x:RemoveTask("Shift Run")
			N.WalkSpeed = x:GetValue("Default Speed")
			x:SetNil("Run Toggle")
		end
	end)
	Player_Mods:CreateParagraph("Toggle Shift Run", "Press <font color=\"rgb(\048, \050\053\053, \048)\">LeftShift</font>/<font color=\"rgb(\048, \050\053\053, \048)\">RightShift</font> to sprint.")
	Player_Mods:CreateToggle("Toggle Noclip", function(tick)
		KK(tick)
	end)
	Player_Mods:CreateButton("Invisible", RK)
	Player_Mods:CreateSection("Tools")
	Player_Mods:CreateToggle("X-ray", W)
	Player_Mods:CreateSlider("X-ray Transparency", 1, 100, 75, function(tick)
		N.XrayTransparency = tonumber(tick) and tonumber(tick) / 100 or 7.5
	end)
	Player_Mods:CreateToggle("Always Alive Chat", function(tick)
		N.AlwaysAliveChat = tick
	end)
	Player_Mods:CreateToggle("Show Round Timer", function(tick)
		if tick then
			x:SetValue("Timer Show", true)
			x:MakeTask("Show Round Timer", RunService.Heartbeat, function()
				local tick = z.Function(ReplicatedStorage.Remotes.Extras.GetTimer)
				if tick < 1 then
					i.Visible = false
					i.Active = false
				else
					local Y, CoreGui, TweenService = 0, 0, tick
					while TweenService > 0 do
						TweenService = TweenService - 1
						CoreGui = CoreGui + 1
						if CoreGui == 60 then
							CoreGui = 0
							Y = Y + 1
						end
					end
					i.Visible = x:GetValue("Timer Show")
					i.Active = x:GetValue("Timer Show")
					if Y > 0 then
						i.Text = Y .. ("m " .. (CoreGui .. "s"))
						i.TextColor3 = Color3.fromRGB(255, 255, 255)
					elseif Y < 1 then
						i.Text = CoreGui .. "s"
						i.TextColor3 = Color3.fromRGB(255, 0, 0)
					end
				end
			end)
		else
			x:RemoveTask("Show Round Timer")
			x:SetNil("Timer Show")
			i.Visible = false
			i.Active = false
		end
	end)
	Player_Mods:CreateToggle("Instant Role Notify", function(tick)
		if tick then
			N.RoleStates["Instant Role Notify"] = function()
				local tick
				F.Text = N.ShowMurdererChance and PlayerMods[g].Role .. ("\n<font size=\"\050\053\">Murderer Chance: " .. (z.Function(ReplicatedStorage.Remotes.Extras.GetChance) .. "%</font>")) or PlayerMods[g].Role
				F.TextColor3 = tK(Stats)
				F.Visible = true
				F.RichText = true
				F.TextSize = 40
				tick = (LocalPlayer.PlayerGui.MainGUI.Game.RoleSelector.Title:GetPropertyChangedSignal("Text")):Connect(function()
					if LocalPlayer.PlayerGui.MainGUI.Game.RoleSelector.Title.Text ~= "You Are" then
						tick:Disconnect()
						F.Visible = false
					end
				end)
				for tick, Y in pairs(PlayerMods) do
					if Y.Role == "Murderer" or Y.Role == "Sheriff" then
						ScriptContext[Y.Role] = tick
					end
				end
				task.wait(.5)
				X("Murderer is: " .. ScriptContext.Murderer, 5, "https://web.roblox.com/Thumbs/Avatar.ashx?x=\049\048\048&y=\049\048\048&Format=Png&userid=" .. (V(ScriptContext.Murderer)).UserId)
				X("Sheriff is: " .. ScriptContext.Sheriff, 5, "https://web.roblox.com/Thumbs/Avatar.ashx?x=\049\048\048&y=\049\048\048&Format=Png&userid=" .. (V(ScriptContext.Sheriff)).UserId)
				repeat
					task.wait()
				until LocalPlayer.PlayerGui.MainGUI.Game.RoleSelector.Title.Text ~= "You Are"
				F.Visible = false
			end
		else
			N.RoleStates["Instant Role Notify"] = nil
		end
	end)
	Player_Mods:CreateToggle("Show Murderer Chance", function(tick)
		N.ShowMurdererChance = tick
	end)
	Player_Mods:CreateToggle("See Dead Chat", function(tick)
		if tick then
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g then
					x:MakeTask("See Dead Chat of " .. Y.Name, Y.Chatted, function(tick)
						pcall(function()
							if not l(Y) and (l(LocalPlayer) and l(V(ScriptContext.Murderer))) then
								if tick:sub(1, 4) == "/me " then
									StarterGui:SetCore("ChatMakeSystemMessage", {
										Text = "[Dead] [" .. (Y.Name .. ("]: " .. string.sub(tick, 5, # tick))),
										Color = Color3.fromRGB(128, 128, 128)
									})
								else
									StarterGui:SetCore("ChatMakeSystemMessage", {
										Text = "[Dead] [" .. (Y.Name .. ("]: " .. tick));
										Color = Color3.fromRGB(128, 128, 128)
									})
								end
							end
						end)
					end)
				end
			end
			x:MakeTask("See Dead Chat Handler\049", Players.PlayerAdded, function(tick)
				x:MakeTask("See Dead Chat of " .. tick.Name, tick.Chatted, function(Y)
					pcall(function()
						if not l(tick) and (l(LocalPlayer) and l(V(ScriptContext.Murderer))) then
							if Y:sub(1, 4) == "/me " then
								StarterGui:SetCore("ChatMakeSystemMessage", {
									Text = "[Dead] [" .. (tick.Name .. ("]: " .. string.sub(Y, 5, # Y)));
									Color = Color3.fromRGB(128, 128, 128)
								})
							else
								StarterGui:SetCore("ChatMakeSystemMessage", {
									Text = "[Dead] [" .. (tick.Name .. ("]: " .. Y)),
									Color = Color3.fromRGB(128, 128, 128)
								})
							end
						end
					end)
				end)
			end)
			x:MakeTask("See Dead Chat Handler\050", Players.PlayerRemoving, function(tick)
				x:RemoveTask("See Dead Chat of " .. tick.Name)
			end)
		else
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g then
					x:RemoveTask("See Dead Chat of " .. Y.Name)
				end
			end
			x:RemoveTask("See Dead Chat Handler\049")
			x:RemoveTask("See Dead Chat Handler\050")
		end
	end)
	Player_Mods:CreateButton("Notify Murderer\'s Perk", function()
		if ScriptContext.Murderer ~= "" and PlayerMods[ScriptContext.Murderer] then
			I("<font color=\"rgb(\050\053\053, \048, \048)\">" .. (ScriptContext.Murderer .. ("</font> is currently using <font color=\"rgb(\050\053\053, \048, \048)\">" .. (PlayerMods[ScriptContext.Murderer].Effect .. "</font> Perk!"))), 5)
		end
	end)
	Player_Mods:CreateToggle("Auto Notify Murderer\'s Perk", function(tick)
		if tick then
			N.RoleStates["Auto Notify Murderer\'s Perk"] = function()
				for tick, Y in pairs(PlayerMods) do
					if Y.Role == "Murderer" then
						I("<font color=\"rgb(\050\053\053, \048, \048)\">" .. (tick .. ("</font> is currently using <font color=\"rgb(\050\053\053, \048, \048)\">" .. (Y.Effect .. "</font> Perk!"))), 5)
					end
				end
			end
		else
			N.RoleStates["Auto Notify Murderer\'s Perk"] = nil
		end
	end)
	Visuals:CreateSection("Cham")
	Visuals:CreateToggle("Cham Everyone", function(tick)
		N.ChamEveryone = tick
		if tick then
			local function tick(tick)
				local Y = N.ESPFolder:FindFirstChild(tick.Name) or Instance.new("Folder")
				local CoreGui = Y:FindFirstChild("Cham") or Instance.new("Folder")
				Y.Name = tick.Name
				Y.Parent = N.ESPFolder
				CoreGui.Name = "Cham"
				CoreGui.Parent = Y
				if tick and tick.Character then
					for Y, TweenService in pairs(tick.Character:GetChildren()) do
						if TweenService.Name ~= "HumanoidRootPart" and TweenService:IsA("BasePart") then
							local Y = CoreGui:FindFirstChild(TweenService.Name) or Instance.new("BoxHandleAdornment")
							local UserInputService = gK(tick)
							Y.Name = TweenService.Name
							Y.Parent = CoreGui
							Y.Size = TweenService.Size
							Y.Adornee = TweenService
							Y.Color3 = UserInputService.Color
							Y.AlwaysOnTop = true
							Y.Transparency = .55
							Y.ZIndex = 10
						end
					end
				end
			end
			N.RoleStates["Cham Connection \049"] = function()
				task.wait()
				for Y, CoreGui in pairs(Players:GetPlayers()) do
					if CoreGui.Name ~= g then
						pcall(tick, CoreGui)
					end
				end
			end
			x:MakeTask("Cham Connection \050", Players.PlayerAdded, function(Y)
				task.wait(2.5)
				x:MakeTask("Cham Connection " .. (Y.Name .. " Giver"), Y.CharacterAdded, function()
					task.wait(2.5)
					pcall(tick, Y);
					(coroutine.wrap(function()
						repeat
							task.wait()
						until Y and (Y.Character and (Y.Character:FindFirstChild("Humanoid") and Y.Character.Humanoid.Health <= 0)) or not Y or not Y.Character or not Y.Character:FindFirstChild("Humanoid") or not Y.Character:FindFirstChild("Head") or not N.ChamEveryone
						local tick = N.ESPFolder:FindFirstChild(Y.Name)
						if tick and tick:FindFirstChild("Cham") then
							tick.Cham:Destroy()
						end
					end))()
				end)
				pcall(tick, Y);
				(coroutine.wrap(function()
					repeat
						task.wait()
					until Y and (Y.Character and (Y.Character:FindFirstChild("Humanoid") and Y.Character.Humanoid.Health <= 0)) or not Y or not Y.Character or not Y.Character:FindFirstChild("Humanoid") or not Y.Character:FindFirstChild("Head") or not N.ChamEveryone
					local tick = N.ESPFolder:FindFirstChild(Y.Name)
					if tick and tick:FindFirstChild("Cham") then
						tick.Cham:Destroy()
					end
				end))()
			end)
			x:MakeTask("Cham Connection \051", ReplicatedStorage.Remotes.Gameplay.RoundEndFade.OnClientEvent, function()
				task.wait(10)
				for Y, CoreGui in pairs(Players:GetPlayers()) do
					if CoreGui.Name ~= g then
						pcall(tick, CoreGui)
					end
				end
			end)
			x:MakeTask("Cham Connection \052", ReplicatedStorage.UpdatePlayerData.OnClientEvent, function()
				task.wait(1)
				for Y, CoreGui in pairs(Players:GetPlayers()) do
					if CoreGui.Name ~= g then
						pcall(tick, CoreGui)
					end
				end
			end)
			for Y, CoreGui in pairs(Players:GetPlayers()) do
				if CoreGui.Name ~= g then
					pcall(tick, CoreGui)
					x:MakeTask("Cham Connection " .. (CoreGui.Name .. " Giver"), CoreGui.CharacterAdded, function()
						task.wait(2.5)
						pcall(tick, CoreGui);
						(coroutine.wrap(function()
							repeat
								task.wait()
							until CoreGui and (CoreGui.Character and (CoreGui.Character:FindFirstChild("Humanoid") and CoreGui.Character.Humanoid.Health <= 0)) or not CoreGui or not CoreGui.Character or not CoreGui.Character:FindFirstChild("Humanoid") or not CoreGui.Character:FindFirstChild("Head") or not N.ChamEveryone
							local tick = N.ESPFolder:FindFirstChild(CoreGui.Name)
							if tick and tick:FindFirstChild("Cham") then
								tick.Cham:Destroy()
							end
						end))()
					end);
					(coroutine.wrap(function()
						repeat
							task.wait()
						until CoreGui and (CoreGui.Character and (CoreGui.Character:FindFirstChild("Humanoid") and CoreGui.Character.Humanoid.Health <= 0)) or not CoreGui or not CoreGui.Character or not CoreGui.Character:FindFirstChild("Humanoid") or not CoreGui.Character:FindFirstChild("Head") or not N.ChamEveryone
						local tick = N.ESPFolder:FindFirstChild(CoreGui.Name)
						if tick and tick:FindFirstChild("Cham") then
							tick.Cham:Destroy()
						end
					end))()
				end
			end
		else
			N.RoleStates["Cham Connection \049"] = nil
			x:RemoveTask("Cham Connection \050")
			x:RemoveTask("Cham Connection \051")
			x:RemoveTask("Cham Connection \052")
		end
	end)
	Visuals:CreateToggle("Cham Dropped Gun", function(tick)
		if tick then
			local function tick(tick)
				local Y = N.ESPFolder:FindFirstChild("Dropped Gun") or Instance.new("Folder")
				local CoreGui = Y:FindFirstChild("Cham") or Instance.new("Folder")
				local TweenService = CoreGui:FindFirstChild("Humanoid") or Instance.new("BoxHandleAdornment")
				Y.Name = "Dropped Gun"
				Y.Parent = N.ESPFolder
				CoreGui.Name = "Cham"
				CoreGui.Parent = Y
				TweenService.Name = "Humanoid"
				TweenService.Parent = CoreGui
				TweenService.Size = tick.Size
				TweenService.Adornee = tick
				TweenService.Color3 = tK("Sheriff")
				TweenService.AlwaysOnTop = true
				TweenService.Transparency = .55
				TweenService.ZIndex = 10
			end
			x:MakeTask("Cham Dropped Gun Connection", workspace.ChildAdded, function(Y)
				if Y.Name == "GunDrop" then
					tick(Y)
				end
			end)
			x:MakeTask("Cham Dropped Gun Connection \049", workspace.ChildRemoved, function(tick)
				if tick.Name == "GunDrop" then
					local tick = N.ESPFolder:FindFirstChild("Dropped Gun") or Instance.new("Folder")
					local Y = tick:FindFirstChild("Cham") or Instance.new("Folder")
					local CoreGui = Y:FindFirstChild("Humanoid") or Instance.new("BoxHandleAdornment")
					tick.Name = "Dropped Gun"
					tick.Parent = N.ESPFolder
					Y.Name = "Cham"
					Y.Parent = tick
					CoreGui.Name = "Humanoid"
					CoreGui.Parent = Y
					CoreGui.Adornee = nil
				end
			end)
			if workspace:FindFirstChild("GunDrop") then
				tick(workspace.GunDrop)
			end
		else
			x:RemoveTask("Cham Dropped Gun Connection")
			x:RemoveTask("Cham Dropped Gun Connection \049")
			local tick = N.ESPFolder:FindFirstChild("Dropped Gun") or Instance.new("Folder")
			local Y = tick:FindFirstChild("Cham") or Instance.new("Folder")
			local CoreGui = Y:FindFirstChild("Humanoid") or Instance.new("BoxHandleAdornment")
			tick.Name = "Dropped Gun"
			tick.Parent = N.ESPFolder
			Y.Name = "Cham"
			Y.Parent = tick
			CoreGui.Name = "Humanoid"
			CoreGui.Parent = Y
			CoreGui.Adornee = nil
		end
	end)
	Visuals:CreateToggle("Cham Coins", function(tick)
		if tick then
			local function tick(tick)
				local Y = tick:FindFirstChild("CoinVisual")
				if Y and not tick:FindFirstChild("Cham") then
					local Y = Instance.new("BoxHandleAdornment")
					Y.Name = "Cham"
					Y.Parent = tick
					Y.Size = Vector3.new(1.5, 1.5, 1.5)
					Y.Adornee = tick
					Y.Color3 = tK("Innocent")
					Y.AlwaysOnTop = true
					Y.Transparency = .55
					Y.ZIndex = 10
				end
			end
			x:MakeTask("Cham Coins", RunService.RenderStepped, function()
				local Y = ZK()
				if Y and Y:FindFirstChild("CoinContainer") then
					for Y, CoreGui in pairs(Y.CoinContainer:GetChildren()) do
						if CoreGui.Name == "Coin_Server" then
							tick(CoreGui)
						end
					end
				end
			end)
		else
			local tick = ZK()
			x:RemoveTask("Cham Coins")
			if tick and tick:FindFirstChild("CoinContainer") then
				for tick, Y in pairs(tick.CoinContainer:GetChildren()) do
					if Y.Name == "Coin_Server" and Y:FindFirstChild("Cham") then
						Y.Cham:Destroy()
					end
				end
			end
		end
	end)
	Visuals:CreateSection("ESP")
	Visuals:CreateToggle("ESP Everyone", function(tick)
		if tick then
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g then
					dK(Y)
				end
			end
			x:MakeTask("ESP Handler \049", Players.PlayerAdded, dK)
			x:MakeTask("ESP Handler \050", Players.PlayerRemoving, function(tick)
				if a.ESP[tick.Name] then
					a.ESP[tick.Name].Text:Remove()
					a.ESP[tick.Name].Service:Disconnect()
					a.ESP[tick.Name] = nil
				end
			end)
		else
			x:RemoveTask("ESP Handler \049")
			x:RemoveTask("ESP Handler \050")
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g and a.ESP[Y.Name] then
					a.ESP[Y.Name].Text:Remove()
					a.ESP[Y.Name].Service:Disconnect()
					a.ESP[Y.Name] = nil
				end
			end
		end
	end)
	Visuals:CreateToggle("ESP Dropped Gun", function(tick)
		if tick then
			local function tick(tick)
				local Y = N.ESPFolder:FindFirstChild("Dropped Gun") or Instance.new("Folder")
				local CoreGui = Y:FindFirstChild("ESP") or Instance.new("Folder")
				local TweenService = CoreGui:FindFirstChild("Humanoid") or Instance.new("BillboardGui")
				local UserInputService = TweenService:FindFirstChild("Text") or Instance.new("TextLabel")
				Y.Name = "Dropped Gun"
				Y.Parent = N.ESPFolder
				CoreGui.Name = "ESP"
				CoreGui.Parent = Y
				TweenService.Name = "Humanoid"
				TweenService.Parent = CoreGui
				TweenService.AlwaysOnTop = true
				TweenService.ExtentsOffset = Vector3.new(0, 5.5, 0)
				TweenService.Size = UDim2.new(0, 200, 0, 50)
				TweenService.Adornee = tick
				UserInputService.Name = "Text"
				UserInputService.Parent = TweenService
				UserInputService.BackgroundTransparency = 1
				UserInputService.Size = UDim2.new(0, 200, 0, 50)
				UserInputService.Font = Enum.Font.GothamBold
				UserInputService.Text = "Dropped Gun"
				UserInputService.TextSize = 13
				UserInputService.TextColor3 = tK("Sheriff")
			end
			x:MakeTask("ESP Dropped Gun Connection", workspace.ChildAdded, function(Y)
				if Y.Name == "GunDrop" then
					tick(Y)
				end
			end)
			x:MakeTask("ESP Dropped Gun Connection \049", workspace.ChildRemoved, function(tick)
				if tick.Name == "GunDrop" then
					local tick = N.ESPFolder:FindFirstChild("Dropped Gun") or Instance.new("Folder")
					tick:Destroy()
				end
			end)
			if workspace:FindFirstChild("GunDrop") then
				tick(workspace.GunDrop)
			end
		else
			x:RemoveTask("ESP Dropped Gun Connection")
			x:RemoveTask("ESP Dropped Gun Connection \049")
			local tick = N.ESPFolder:FindFirstChild("Dropped Gun") or Instance.new("Folder")
			tick:Destroy()
		end
	end)
	Visuals:CreateToggle("ESP Coins", function(tick)
		if tick then
			local function tick(tick)
				local Y = tick:FindFirstChild("CoinVisual")
				if Y and not tick:FindFirstChild("ESP") then
					local CoreGui = Instance.new("BillboardGui")
					local TweenService = Instance.new("TextLabel")
					CoreGui.Name = "ESP"
					CoreGui.Parent = tick
					CoreGui.AlwaysOnTop = true
					CoreGui.ExtentsOffset = Vector3.new(0, 5.5, 0)
					CoreGui.Size = UDim2.new(0, 200, 0, 50)
					CoreGui.Adornee = tick
					TweenService.Name = "Text"
					TweenService.Parent = CoreGui
					TweenService.BackgroundTransparency = 1
					TweenService.Size = UDim2.new(0, 200, 0, 50)
					TweenService.Font = Enum.Font.GothamBold
					TweenService.Text = Y and (Y.ClassName ~= "MeshPart" and "Coin") or "Egg"
					TweenService.TextSize = 13
					TweenService.TextColor3 = tK("Innocent")
				end
			end
			x:MakeTask("ESP Coins", RunService.RenderStepped, function()
				local Y = ZK()
				if Y and Y:FindFirstChild("CoinContainer") then
					for Y, CoreGui in pairs(Y.CoinContainer:GetChildren()) do
						if CoreGui.Name == "Coin_Server" then
							tick(CoreGui)
						end
					end
				end
			end)
		else
			local tick = ZK()
			x:RemoveTask("ESP Coins")
			if tick and tick:FindFirstChild("CoinContainer") then
				for tick, Y in pairs(tick.CoinContainer:GetChildren()) do
					if Y.Name == "Coin_Server" and Y:FindFirstChild("ESP") then
						Y.ESP:Destroy()
					end
				end
			end
		end
	end)
	Visuals:CreateSection("ESP Box")
	Visuals:CreateToggle("ESP Box Everyone", function(tick)
		if tick then
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g then
					cK(Y)
				end
			end
			x:MakeTask("Boxes Handler \049", Players.PlayerAdded, cK)
			x:MakeTask("Boxes Handler \050", Players.PlayerRemoving, function(tick)
				if a.Box[tick.Name] then
					a.Box[tick.Name].TopLeft:Remove()
					a.Box[tick.Name].TopRight:Remove()
					a.Box[tick.Name].BottomLeft:Remove()
					a.Box[tick.Name].BottomRight:Remove()
					a.Box[tick.Name].Service:Disconnect()
					a.Box[tick.Name] = nil
				end
			end)
		else
			x:RemoveTask("Boxes Handler \049")
			x:RemoveTask("Boxes Handler \050")
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g and a.Box[Y.Name] then
					a.Box[Y.Name].TopLeft:Remove()
					a.Box[Y.Name].TopRight:Remove()
					a.Box[Y.Name].BottomLeft:Remove()
					a.Box[Y.Name].BottomRight:Remove()
					a.Box[Y.Name].Service:Disconnect()
					a.Box[Y.Name] = nil
				end
			end
		end
	end)
	Visuals:CreateSection("Tracer")
	Visuals:CreateToggle("Tracer Everyone", function(tick)
		if tick then
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g then
					FK(Y)
				end
			end
			x:MakeTask("Tracer Handler \049", Players.PlayerAdded, FK)
			x:MakeTask("Tracer Handler \050", Players.PlayerRemoving, function(tick)
				if a.Tracer[tick.Name] then
					a.Tracer[tick.Name].Line:Remove()
					a.Tracer[tick.Name].Service:Disconnect()
					a.Tracer[tick.Name] = nil
				end
			end)
		else
			x:RemoveTask("Tracer Handler \049")
			x:RemoveTask("Tracer Handler \050")
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g and a.Tracer[Y.Name] then
					a.Tracer[Y.Name].Line:Remove()
					a.Tracer[Y.Name].Service:Disconnect()
					a.Tracer[Y.Name] = nil
				end
			end
		end
	end)
	Emotes:CreateSection("Fe Emotes")
	Emotes:CreateButton("Sit", function()
		ReplicatedStorage.Remotes.Misc.PlayEmote:Fire("sit")
	end)
	Emotes:CreateButton("Ninja", function()
		ReplicatedStorage.Remotes.Misc.PlayEmote:Fire("ninja")
	end)
	Emotes:CreateButton("Dab", function()
		ReplicatedStorage.Remotes.Misc.PlayEmote:Fire("dab")
	end)
	Emotes:CreateButton("Zen", function()
		ReplicatedStorage.Remotes.Misc.PlayEmote:Fire("zen")
	end)
	Emotes:CreateButton("Floss", function()
		ReplicatedStorage.Remotes.Misc.PlayEmote:Fire("floss")
	end)
	Emotes:CreateButton("Headless", function()
		ReplicatedStorage.Remotes.Misc.PlayEmote:Fire("headless")
	end)
	Emotes:CreateButton("Zombie", function()
		ReplicatedStorage.Remotes.Misc.PlayEmote:Fire("zombie")
	end)
	Emotes:CreateSection("Default Emotes:")
	Emotes:CreateButton("Wave", function()
		ReplicatedStorage.Remotes.Misc.PlayEmote:Fire("wave")
	end)
	Emotes:CreateButton("Cheer", function()
		ReplicatedStorage.Remotes.Misc.PlayEmote:Fire("cheer")
	end)
	Emotes:CreateButton("Laugh", function()
		ReplicatedStorage.Remotes.Misc.PlayEmote:Fire("laugh")
	end)
	Emotes:CreateSection("Free")
	Emotes:CreateToggle("Seizure", function(tick)
		N.Seizure = tick
		if tick then
			(coroutine.wrap(function()
				while N.Seizure do
					task.wait(.2)
					ReplicatedStorage.Remotes.Misc.PlayEmote:Fire(UserService[math.random(1, # UserService)])
				end
			end))()
		end
	end)
	Troll:CreateLabel("Trap Abuser:")
	Troll:CreateToggle("Loop Trap Everyone", function(tick)
		if tick then
			if u("Trap") then
				x:SetValue("Loop Trap", true)
				x:MakeTask("Loop Trap", RunService.Stepped, function()
					if x:GetValue("Loop Trap") then
						for tick, Y in pairs(Players:GetPlayers()) do
							if Y.Name ~= g and x:GetValue("Loop Trap") then
								local tick = h(Y)
								if tick then
									z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, tick.CFrame)
								end
							end
						end
					end
				end)
			else
				B("Uh oh! you need Trap Perks for this!")
			end
		else
			x:SetNil("Loop Trap")
			x:RemoveTask("Loop Trap")
		end
	end)
	Troll:CreateToggle("Loop Trap Murderer", function(tick)
		if tick then
			if u("Trap") then
				x:SetValue("Loop Trap Murderer", true)
				x:MakeTask("Loop Trap Murderer", RunService.Stepped, function()
					pcall(function()
						if x:GetValue("Loop Trap Murderer") then
							local tick = V(ScriptContext.Murderer)
							if tick and (l(tick) and x:GetValue("Loop Trap Murderer")) then
								z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, (h(tick)).CFrame)
							end
						end
					end)
				end)
			else
				B("Uh oh! you need Trap Perks for this!")
			end
		else
			x:SetNil("Loop Trap Murderer")
			x:RemoveTask("Loop Trap Murderer")
		end
	end)
	Troll:CreateToggle("Loop Trap Sheriff", function(tick)
		if tick then
			if u("Trap") then
				x:SetValue("Loop Trap Sheriff", true)
				x:MakeTask("Loop Trap Sheriff", RunService.Stepped, function()
					pcall(function()
						if x:GetValue("Loop Trap Sheriff") then
							local tick = V(ScriptContext.Sheriff)
							if tick and (l(tick) and x:GetValue("Loop Trap Sheriff")) then
								z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, (h(tick)).CFrame)
							end
						end
					end)
				end)
			else
				B("Uh oh! you need Trap Perks for this!")
			end
		else
			x:SetNil("Loop Trap Sheriff")
			x:RemoveTask("Loop Trap Sheriff")
		end
	end)
	Troll:CreateToggle("Loop Trap Player", function(tick)
		if tick then
			if u("Trap") then
				x:SetValue("Loop Trap Player", true)
				x:MakeTask("Loop Trap Player", RunService.Stepped, function()
					if x:GetValue("Loop Trap Player") then
						local tick = h(N.LoopTrapPlayer)
						if tick then
							z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, tick.CFrame)
						end
					end
				end)
			else
				B("Uh oh! you need Trap Perks for this!")
			end
		else
			x:SetNil("Loop Trap Player")
			x:RemoveTask("Loop Trap Player")
		end
	end)
	Troll:CreatePlayerDropdown("Select Player", function(tick)
		N.LoopTrapPlayer = tick
	end)
	Troll:CreatePlayerDropdown("Trap Player", function(tick)
		if u("Trap") then
			if tick and tick.Character then
				z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, (h(tick)).CFrame)
			end
		else
			B("Uh oh! you need Trap Perks for this!")
		end
	end)
	Troll:CreateButton("Trap Everyone", function()
		if u("Trap") then
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g and Y.Character then
					z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, (h(Y)).CFrame)
				end
			end
		else
			B("Uh oh! you need Trap Perks for this!")
		end
	end)
	Troll:CreateButton("Trap Murderer", function()
		if u("Trap") then
			local tick = V(ScriptContext.Murderer)
			if tick and (l(tick) and tick.Character) then
				z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, (h(tick)).CFrame)
			end
		else
			B("Uh oh! you need Trap Perks for this!")
		end
	end)
	Troll:CreateButton("Trap Sheriff", function()
		if u("Trap") then
			local tick = V(ScriptContext.Sheriff)
			if tick and (l(tick) and tick.Character) then
				z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, (h(tick)).CFrame)
			end
		else
			B("Uh oh! you need Trap Perks for this!")
		end
	end)
	Troll:CreateSection("Without Perks")
	Troll:CreateToggle("Fake Knife", function(tick)
		if tick then
			pcall(function()
				local tick = Instance.new("Tool")
				local Y = LocalPlayer.Character.KnifeDisplay
				local CoreGui = Y.Mesh:Clone()
				local TweenService = Instance.new("Part")
				local UserInputService = false
				local VirtualInputManager = {
					Instance.new("Animation");
					Instance.new("Animation")
				}
				VirtualInputManager[1].AnimationId = "rbxassetid://\050\052\054\055\053\054\055\055\053\048"
				VirtualInputManager[2].AnimationId = "rbxassetid://\049\057\053\055\056\057\048\053\051\056"
				tick.Name = "Fake Knife"
				tick.RequiresHandle = true
				tick.GripPos = Vector3.new(0, -1, 0)
				tick.Activated:Connect(function()
					if not UserInputService then
						UserInputService = true;
						(LocalPlayer.Character.Humanoid:LoadAnimation(VirtualInputManager[math.random(1, 2)])):Play()
						task.wait(1)
						UserInputService = false
					end
				end)
				TweenService.Name = "Handle"
				TweenService.Parent = tick
				TweenService.Size = Y.Size
				CoreGui.Parent = TweenService
				tick.Parent = LocalPlayer.Character
			end)
		else
			LK("Fake Knife")
		end
	end)
	if y then
		Extra:CreateSection("Survival")
		Extra:CreateToggle("Auto Dodge Knives", function(tick)
			if tick then
				x:MakeTask("Auto Dodge Knives", workspace.ChildAdded, function(tick)
					if tick.Name == "ThrowingKnife" and (tick:IsA("Model") and Stats ~= "Murderer") then
						local Y = false
						while not Y and tick do
							task.wait()
							local CoreGui = h(LocalPlayer)
							if CoreGui then
								local TweenService = (tick:GetPivot()).Position
								local UserInputService = (CoreGui.Position - TweenService).Magnitude
								if UserInputService < 15 then
									local tick = CoreGui.Position.X - TweenService.X
									local UserInputService = CoreGui.Position.Y - TweenService.Y
									if UserInputService < 4.35 then
										CoreGui.CFrame = CoreGui.CFrame * CFrame.new(- tick * 3, 0, 0)
										Y = true
									end
								end
							end
						end
					end
				end)
			else
				x:RemoveTask("Auto Dodge Knives")
			end
		end)
		Extra:CreateSection("Toy Modification")
		Extra:CreateToggle("Auto Prank Bomb Clutch", function(tick)
			N.AutoPrankBombClutch = tick
		end)
		Extra:CreateToggle("Infinite Prank Bomb", function(tick)
			if tick then
				x:MakeTask("Infinite Prank Bomb", RunService.RenderStepped, function()
					if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("FakeBomb")) then
						(getsenv(LocalPlayer.Character.FakeBomb.Client)).firerate = 0
					end
				end)
			else
				x:RemoveTask("Infinite Prank Bomb")
				if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("FakeBomb")) then
					(getsenv(LocalPlayer.Character.FakeBomb.Client)).firerate = 22
				end
			end
		end)
		Extra:CreateToggle("No Prank Bomb Cooldown", function(tick)
			if tick then
				x:MakeTask("No Prank Bomb Cooldown", RunService.RenderStepped, function()
					if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("FakeBomb")) then
						(getsenv(LocalPlayer.Character.FakeBomb.Client)).check = true
					end
				end)
			else
				x:RemoveTask("No Prank Bomb Cooldown")
			end
		end)
		Extra:CreateSection("Troll")
		Extra:CreateToggle("Force Sheriff To Spam Shoot", function(tick)
			if tick then
				x:MakeTask("Force Sheriff To Spam Shoot", RunService.Stepped, function()
					local tick = V(ScriptContext.Sheriff)
					if tick and (tick.Name ~= g and tick.Character) then
						for tick, Y in pairs(tick.Character:GetChildren()) do
							if Y.Name == "Gun" and Y:IsA("Tool") then
								z.Function(Y.KnifeServer.ShootGun, 0, Vector3.new(), "AH")
							end
						end
						for tick, Y in pairs(tick.Backpack:GetChildren()) do
							if Y.Name == "Gun" and Y:IsA("Tool") then
								z.Function(Y.KnifeServer.ShootGun, 0, Vector3.new(), "AH")
							end
						end
					end
				end)
			else
				x:RemoveTask("Force Sheriff To Spam Shoot")
			end
		end)
		Extra:CreateButton("Force Sheriff to Shoot", function()
			local tick = V(ScriptContext.Sheriff)
			if tick and (tick.Name ~= g and tick.Character) then
				for tick, Y in pairs(tick.Character:GetChildren()) do
					if Y.Name == "Gun" and Y:IsA("Tool") then
						z.Function(Y.KnifeServer.ShootGun, 0, Vector3.new(), "AH")
					end
				end
				for tick, Y in pairs(tick.Backpack:GetChildren()) do
					if Y.Name == "Gun" and Y:IsA("Tool") then
						z.Function(Y.KnifeServer.ShootGun, 0, Vector3.new(), "AH")
					end
				end
			end
		end)
		Extra:CreateSection("Spray Paint")
		yK(Extra, "Give Fake Knife", 15, function(tick, Y)
			z.Event(tick.Remote, 15093138669, Enum.NormalId.Right, 3, Y.Character.RightHand, Y.Character.RightHand.CFrame * CFrame.new(0, 0, 0))
			z.Event(tick.Remote, 15093138669, Enum.NormalId.Right, 3, Y.Character.RightHand, Y.Character.RightHand.CFrame * CFrame.new(0, 0, 0))
			z.Event(tick.Remote, 15093138669, Enum.NormalId.Right, 3, Y.Character.RightHand, Y.Character.RightHand.CFrame * CFrame.new(0, 0, 0))
			z.Event(tick.Remote, 15096522641, Enum.NormalId.Left, 3, Y.Character.RightHand, Y.Character.RightHand.CFrame * CFrame.new(0, 0, 0))
			z.Event(tick.Remote, 15096522641, Enum.NormalId.Left, 3, Y.Character.RightHand, Y.Character.RightHand.CFrame * CFrame.new(0, 0, 0))
			z.Event(tick.Remote, 15096522641, Enum.NormalId.Left, 3, Y.Character.RightHand, Y.Character.RightHand.CFrame * CFrame.new(0, 0, 0))
		end)
		Extra:CreateParagraph("Ghost", "This feature only last \049\053 seconds.")
		Extra:CreateButton("Ghost Yourself", function()
			sK(function(tick)
				local Y = h(LocalPlayer)
				local CoreGui = Y.CFrame
				Y.CFrame = CFrame.new(-110, 140, 10)
				z.Event(tick.Remote, 0, Enum.NormalId.Front, 2500, Y, CFrame.new(0, -25000, 0))
				z.Event(tick.Remote, 0, Enum.NormalId.Front, 2500, Y, CFrame.new(0, 25000, 0))
				if TCF then
					tick.Parent = LocalPlayer.Backpack
				end
				repeat
					task.wait()
				until workspace:FindFirstChild("Spray")
				workspace.Spray:Destroy()
				repeat
					task.wait()
				until workspace:FindFirstChild("Spray")
				workspace.Spray:Destroy()
				Y.CFrame = CoreGui
			end)
		end)
		yK(Extra, "Sus Fling", 15, function(tick, Y)
			z.Event(tick.Remote, 0, Enum.NormalId.Back, 10, Y.Character.LeftHand, (h(Y)).CFrame * CFrame.new(10, 5, 0))
		end)
	else
		Extra:CreateParagraph("Note", "This channel is for <font color=\"rgb(\050\053\053, \048, \048)\">Content Creators</font> only, if you want to get access here you should showcase <font color=\"rgb(\048, \050\053\053, \048)\">Symphony Hub</font> in <font color=\"rgb(\050\053\053, \048, \048)\">YouTube</font> first and verify into our <font color=\"rgb(\048, \050\053\053, \048)\">Discord Server</font>")
	end
	if b then
		Extra:CreateSection("Content Creators")
		for tick = 1, # b, 1 do
			local Y = b[tick]
			Extra:CreateProfileMessage("rbxthumb://type=AvatarHeadShot&id=" .. (Y.Id .. "&w=\049\048\048&h=\049\048\048"), Y.Username .. (" [ <font color=\"rgb(\048, \050\053\053, \048)\">" .. (Y.DisplayName .. "</font> ]")), "# " .. tick)
		end
	end
	if H then
		Premium:CreateSection("FPS Booster")
		Premium:CreateButton("Fps Boost", function()
			for tick, Y in pairs(workspace:GetDescendants()) do
				pcall(function()
					if Y:IsA("BasePart") and (not Y.Parent:FindFirstChild("Humanoid") and not Y.Parent.Parent:FindFirstChild("Humanoid")) then
						Y.Material = Enum.Material.SmoothPlastic
						if Y:IsA("Texture") then
							Y:Destroy()
						end
					end
				end)
			end
		end)
		Premium:CreateButton("Less Lag", function()
			local tick = workspace:FindFirstChildOfClass("Terrain")
			tick.WaterWaveSize = 0
			tick.WaterWaveSpeed = 0
			tick.WaterReflectance = 0
			tick.WaterTransparency = 0
			Lighting.GlobalShadows = false
			Lighting.FogEnd = 9000000000
		end)
		Premium:CreateSection("Statistics")
		Premium:CreateToggle("Auto Delete Dead Body", function(tick)
			N.AutoDeleteDeadBody = tick
			if tick then
				(coroutine.wrap(function()
					while N.AutoDeleteDeadBody do
						task.wait(.25)
						pcall(function()
							if workspace:FindFirstChild("Raggy") then
								workspace.Raggy:Destroy()
							end
						end)
					end
					return coroutine.yield("...")
				end))()
			end
		end)
		Premium:CreateToggle("Disable Trap", function(tick)
			N.DisableTrap = tick
			if tick then
				(coroutine.wrap(function()
					while N.DisableTrap do
						task.wait(.25)
						pcall(function()
							for tick, Y in pairs(Players:GetPlayers()) do
								if Y.Name ~= g then
									for tick, Y in pairs(workspace[Y.Name]:GetChildren()) do
										if Y.Name == "Trap" and Y:IsA("Model") then
											Y:Destroy()
										end
									end
								end
							end
						end)
					end
					return coroutine.yield("...")
				end))()
			end
		end)
		Premium:CreateParagraph("Disable Trap!", "only affect others trap perk")
		Premium:CreateToggle("Btools", function(tick)
			if tick then
				local tick = Instance.new("HopperBin")
				local Y = Instance.new("HopperBin")
				local CoreGui = Instance.new("HopperBin")
				local TweenService = Instance.new("HopperBin")
				local UserInputService = Instance.new("HopperBin")
				tick.BinType = "Clone"
				tick.Parent = LocalPlayer.Backpack
				Y.BinType = "GameTool"
				Y.Parent = LocalPlayer.Backpack
				CoreGui.BinType = "Hammer"
				CoreGui.Parent = LocalPlayer.Backpack
				TweenService.BinType = "Script"
				TweenService.Parent = LocalPlayer.Backpack
				UserInputService.BinType = "Grab"
				UserInputService.Parent = LocalPlayer.Backpack
				N.Premium.Btoolspack = {
					tick,
					Y;
					CoreGui,
					TweenService,
					UserInputService
				}
			else
				for tick = 1, # N.Premium.Btoolspack, 1 do
					N.Premium.Btoolspack[tick]:Destroy()
				end
			end
		end)
		Premium:CreateButton("F\051X Btools", function()
			(loadstring((game:GetObjects("rbxassetid://\054\054\057\053\054\052\052\050\057\057"))[1].Source))()
		end)
		Premium:CreateButton("Replicate Toys", function()
			for tick = 1, # VirtualInputManager, 1 do
				z.Function(ReplicatedStorage.Remotes.Extras.ReplicateToy, VirtualInputManager[tick])
				task.wait()
				z.Function(ReplicatedStorage.Remotes.Extras.ReplicateToy, VirtualInputManager[tick])
			end
		end)
		Premium:CreateButton("Get All Emotes and Toys", function()
			local tick = {}
			for Y, CoreGui in pairs(UserService) do
				if CoreGui ~= "wave" and (CoreGui ~= "cheer" and CoreGui ~= "laugh") then
					table.insert(tick, CoreGui)
				end
			end;
			(require(CoreGui)).GeneratePage(tick, LocalPlayer.PlayerGui.MainGUI.Game:FindFirstChild("Emotes"), "Symphony Hub\'s Premium Emotes \049/\051");
			(require(CoreGui)).GeneratePage({
				"Teddy";
				"IceCream";
				"ChocolateMilk";
				"Fireflies";
				"Pizza";
				"CandyToy\050\048\050\050",
				"FakeBomb"
			}, LocalPlayer.PlayerGui.MainGUI.Game:FindFirstChild("Emotes"), "Symphony Hub\'s Premium Emotes \050/\051");
			(require(CoreGui)).GeneratePage({
				"GGSign",
				"EggToy\050\048\050\051",
				"SprayPaint"
			}, LocalPlayer.PlayerGui.MainGUI.Game:FindFirstChild("Emotes"), "Symphony Hub\'s Premium Emotes \051/\051")
		end)
		Premium:CreateButton("Force Spawn", function()
			local tick = h(LocalPlayer)
			N.ForceSpawn = true
			N.ForceSpawnCFrame = tick.CFrame
			LocalPlayer.Character.Humanoid.Health = 0
		end)
		Premium:CreateToggle("Auto Rotate", function(tick)
			LocalPlayer.Character.Humanoid.AutoRotate = not tick
		end)
		Premium:CreateToggle("Teleport Tool", function(tick)
			if tick then
				local tick = Instance.new("Tool")
				tick.Name = "Teleport Tool"
				tick.RequiresHandle = false
				tick.Parent = LocalPlayer.Backpack
				tick.Activated:Connect(function()
					m(LocalPlayer, "CFrame", Farm.Hit)
				end)
			else
				LK("Teleport Tool")
			end
		end)
		Premium:CreateToggle("Toggle Anti-AFK", function(tick)
			if tick then
				x:MakeTask("Anti AFK", LocalPlayer.Idled, function()
					VirtualUser:ClickButton2(Vector2.new())
				end)
			else
				x:RemoveTask("Anti AFK")
			end
		end)
		Premium:CreateToggle("Toggle Anti Fling", function(tick)
			N.AntiFling = tick
			if tick then
				x:MakeTask("Anti Fling Handler", RunService.Heartbeat, function()
					if N.AntiFling then
						pcall(function()
							for tick, Y in pairs(Players:GetPlayers()) do
								if Y.Name ~= g and N.AntiFling then
									local tick = h(Y)
									if Y.Character and tick then
										if tick.AssemblyAngularVelocity.Magnitude > 50 or tick.AssemblyLinearVelocity.Magnitude > 100 then
											for tick, Y in pairs(Y.Character:GetChildren()) do
												if Y:IsA("BasePart") then
													Y.CanCollide = false
													Y.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
													Y.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
													Y.CustomPhysicalProperties = PhysicalProperties.new(.1, .1, .1)
												end
											end
										end
									end
								end
							end
							if LocalPlayer.Character.PrimaryPart.AssemblyLinearVelocity.Magnitude > 250 or LocalPlayer.Character.PrimaryPart.AssemblyAngularVelocity.Magnitude > 250 then
								LocalPlayer.Character.PrimaryPart.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
								LocalPlayer.Character.PrimaryPart.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
								LocalPlayer.Character.PrimaryPart.CFrame = N.LastPosition
							elseif LocalPlayer.Character.PrimaryPart.AssemblyLinearVelocity.Magnitude < 50 or LocalPlayer.Character.PrimaryPart.AssemblyAngularVelocity.Magnitude > 50 then
								N.LastPosition = LocalPlayer.Character.PrimaryPart.CFrame + CFame.new(0, 1, 0)
							end
						end)
					end
				end)
			else
				x:RemoveTask("Anti Fling Handler")
			end
		end)
		Premium:CreateToggle("Toggle Anti Kick", function(tick)
			N.AntiKick = tick
		end)
		Premium:CreateToggle("Toggle Anti Void", function(tick)
			if tick then
				x:MakeTask("Anti Void", RunService.Heartbeat, function()
					pcall(function()
						local tick = (h(LocalPlayer)).CFrame.Y
						if Y <= -465 then
							LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
						end
					end)
				end)
			else
				x:RemoveTask("Anti Void")
			end
		end)
		Premium:CreateToggle("Toggle Double Jump", function(tick)
			if tick then
				x:SetValue("LastJump", false)
				task.spawn(function()
					x:MakeTask("Double Jump", UserInputService.JumpRequest, function()
						pcall(function()
							if not x:GetValue("Last Jump") then
								x:SetValue("Last Jump", true)
								LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
							end
						end)
					end)
				end)
				LocalPlayer.Character.Humanoid.StateChanged:Connect(function(tick, Y)
					if Y == Enum.HumanoidStateType.Landed then
						x:SetValue("Last Jump", false)
					elseif Y == Enum.HumanoidStateType.Jumping then
						x:SetValue("Last Jump", false)
					end
				end)
				x:MakeTask("Double Jump Character", LocalPlayer.CharacterAdded, function()
					task.wait(.25)
					LocalPlayer.Character.Humanoid.StateChanged:Connect(function(tick, Y)
						if Y == Enum.HumanoidStateType.Landed then
							x:SetValue("Last Jump", false)
						elseif Y == Enum.HumanoidStateType.Jumping then
							x:SetValue("Last Jump", false)
						end
					end)
				end)
			else
				x:RemoveTask("Double Jump Character")
				x:RemoveTask("Double Jump")
				x:SetNil("Last Jump")
			end
		end)
		local TweenService = Premium:CreateSlider("Fov", 1, 100, 75, function(tick)
			workspace.CurrentCamera.FieldOfView = tonumber(tick)
		end)
		Premium:CreateButton("Reset Fov", function()
			TweenService:SetValue(75)
			workspace.CurrentCamera.FieldOfView = 75
		end)
		Premium:CreateToggle("Two Lives", function(tick)
			N.SecondLife = tick
			if tick then
				(coroutine.wrap(function()
					while N.SecondLife do
						wait()
						pcall(function()
							local tick = LocalPlayer.Character.Humanoid
							if tick.Health <= 0 then
								tick:ChangeState(11)
								wait(2.5)
								tick.Health = 100
								wait(1)
								tick:ChangeState(1)
							end
						end)
					end
				end))()
			end
		end)
		Premium:CreateParagraph("Two Lives!", "makes you invincible when you shooted random Innocent or you got shooted by sheriff or or you got thrown/stabbed a knife by the murderer, This only works once every round this might have a chance to make this won\'UserInputService work.")
		Premium:CreateToggle("Float", function(tick)
			N.Float = tick
			c.CanCollide = tick
			if tick then
				(coroutine.wrap(function()
					while N.Float do
						task.wait()
						pcall(function()
							c.CFrame = (h(LocalPlayer)).CFrame * CFrame.new(0, -3, 0)
						end)
					end
					return coroutine.yield("...")
				end))()
			end
		end)
		Premium:CreateButton("Fake Dead", function()
			if LocalPlayer.Character then
				local tick = h(LocalPlayer)
				LocalPlayer.Character.Humanoid.Sit = true
				tick.CFrame = tick.CFrame * CFrame.new(0, 3.5, 0)
			end
		end)
		Premium:CreateToggle("Toggle Spam Chat", function(Y)
			N.Loop = Y
			if Y then
				(coroutine.wrap(function()
					while N.Loop do
						task.wait(.25)
						pcall(function()
							task.wait(N.LoopDelay)
							z.Event(tick, N.LoopText, N.AlwaysAliveChat and "alive" or "normalchat")
						end)
					end
					return coroutine.yield("...")
				end))()
			end
		end)
		Premium:CreateTextbox("Text to Spam", function(tick)
			N.LoopText = tostring(tick)
		end)
		local TextService = Premium:CreateSlider("Text to Spam Delay", 1, 100, 1, function(tick)
			N.SpamDelay = tonumber(tick) and tonumber(tick) / 100 or .1
		end)
		Premium:CreateToggle("Toggle Hitbox", function(tick)
			if tick then
				x:MakeTask("Hitbox", RunService.RenderStepped, function()
					for tick, Y in pairs(Players:GetPlayers()) do
						if Y.Name ~= g and Y.Character then
							Y.Character.HumanoidRootPart.Size = Vector3.new(N.HitboxSize, N.HitboxSize, N.HitboxSize)
							Y.Character.HumanoidRootPart.Transparency = .4
							Y.Character.HumanoidRootPart.CanCollide = false
						end
					end
				end)
			else
				x:RemoveTask("Hitbox")
				for tick, Y in pairs(Players:GetPlayers()) do
					if Y.Name ~= g and Y.Character then
						Y.Character.HumanoidRootPart.Size = Vector3.new(2, 1, 1)
						Y.Character.HumanoidRootPart.Transparency = 1
						Y.Character.HumanoidRootPart.CanCollide = true
					end
				end
			end
		end)
		local StarterGui = Premium:CreateSlider("Hitbox Size", 1, 25, 5, function(tick)
			N.HitboxSize = tonumber(tick) or 5
		end)
		Premium:CreateButton("God Mode", function()
			local tick = workspace.CurrentCamera.CFrame
			local Y = LocalPlayer.Character
			local CoreGui = Y.Humanoid
			local TweenService = CoreGui:Clone()
			TweenService.Parent = LocalPlayer.Character
			LocalPlayer.Character = nil
			TweenService.Name = "Humanoid"
			TweenService.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
			TweenService.Health = 100
			TweenService:SetStateEnabled(15, false)
			TweenService:SetStateEnabled(1, false)
			TweenService:SetStateEnabled(0, false)
			TweenService.BreakJointsOnDeath = true
			CoreGui:Destroy()
			LocalPlayer.Character = Y
			workspace.CurrentCamera.CameraSubject = TweenService
			workspace.CurrentCamera.CFrame = tick
			local UserInputService = Y.Animate
			UserInputService.Disabled = true
			task.wait()
			UserInputService.Disabled = false
			LocalPlayer.CharacterAdded:Wait()
		end)
		Premium:CreateParagraph("God Mode!", "was like similar to Two Lives but different.")
		Premium:CreateToggle("Aim Lock Murderer", function(tick)
			if tick then
				x:SetValue("Aiming", true)
				x:MakeTask("Aim Lock Murderer", RunService.Heartbeat, function()
					if x:GetValue("Aiming") then
						pcall(function()
							local tick = V(ScriptContext.Murderer)
							if h(tick) and (l(tick) and x:GetValue("Aiming")) then
								local Y = (h(tick)).Position
								workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, Y)
							end
						end)
					end
				end)
			else
				x:SetNil("Aiming")
			end
		end)
		Premium:CreateKeybind("Place Trap", Enum.KeyCode.PlayerMods, function()
			if u("Trap") then
				z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, (h(LocalPlayer)).CFrame)
			else
				B("Uh oh! you need Trap Perks for this!")
			end
		end)
		Premium:CreateToggle("Trap Aura", function(tick)
			if tick then
				if u("Trap") then
					x:SetValue("Trap Aura Value", true)
					x:MakeTask("Trap Aura", RunService.Stepped, function()
						pcall(function()
							if x:GetValue("Trap Aura Value") then
								for tick, Y in pairs(Players:GetPlayers()) do
									if Y.Name ~= g and x:GetValue("Trap Aura Value") then
										local tick = ((h(Y)).Position - (h(LocalPlayer)).Position).Magnitude
										if tick <= tonumber(N.TrapDistance) then
											z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, (h(Y)).CFrame)
										end
									end
								end
							end
						end)
					end)
				else
					B("Uh oh! you need Trap Perks for this!")
				end
			else
				x:SetNil("Trap Aura Value")
				x:RemoveTask("Trap Aura")
			end
		end)
		local HttpService = Premium:CreateSlider("Trap Distance", 1, 999, 30, function(tick)
			N.TrapDistance = tonumber(tick) or 30
		end)
		Premium:CreateToggle("Click Place Trap", function(tick)
			if tick then
				if u("Trap") then
					x:MakeTask("Touch Place Trap", UserInputService.InputBegan, function(tick, Y)
						if Y then
							return
						end
						if tick.UserInputType == Enum.UserInputType.MouseButton1 or tick.UserInputType == Enum.UserInputType.Touch then
							z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, Farm.Hit)
						end
					end)
				else
					B("Uh oh! you need Trap Perks for this!")
				end
			else
				x:RemoveTask("Touch Place Trap")
			end
		end)
		Premium:CreateToggle("Enable Place Trap Bindable Button", function(tick)
			if tick then
				if u("Trap") then
					UK("Place Trap", {
						OriginalName = "Place Trap",
						Position = UDim2.new(1, -550, 0, -190);
						Callback = function()
							z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, (h(LocalPlayer)).CFrame)
						end
					})
				else
					B("Uh oh! you need Trap Perks for this!")
				end
			else
				rK("Place Trap")
			end
		end)
		Premium:CreateButton("Make Circle Trap", function()
			if u("Trap") then
				for tick = 1, 10, 1 do
					z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, CFrame.new((h(LocalPlayer)).Position + 3 * Vector3.new(math.cos(((2 * math.pi) / 10) * tick), 0, math.sin(((2 * math.pi) / 10) * tick))))
				end
			else
				B("Uh oh! you need FakeGun Perks for this!")
			end
		end)
		Premium:CreateKeybind("Make Circle Trap", Enum.KeyCode.UserService, function()
			if u("Trap") then
				for tick = 1, 10, 1 do
					z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, CFrame.new((h(LocalPlayer)).Position + 3 * Vector3.new(math.cos(((2 * math.pi) / 10) * tick), 0, math.sin(((2 * math.pi) / 10) * tick))))
				end
			else
				B("Uh oh! you need FakeGun Perks for this!")
			end
		end)
		Premium:CreateToggle("Enable Make Circle Trap Bindable Button", function(tick)
			if tick then
				if u("Trap") then
					UK("Make Circle Trap", {
						OriginalName = "MCT",
						Position = UDim2.new(1, -550, 0, -140);
						Callback = function()
							for tick = 1, 10, 1 do
								z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, CFrame.new((h(LocalPlayer)).Position + 3 * Vector3.new(math.cos(((2 * math.pi) / 10) * tick), 0, math.sin(((2 * math.pi) / 10) * tick))))
							end
						end
					})
				else
					B("Uh oh! you need Trap Perks for this!")
				end
			else
				rK("Make Circle Trap")
			end
		end)
		Premium:CreateButton("Get Fake Gun", function()
			if u("FakeGun") then
				z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, true)
			else
				B("Uh oh! you need FakeGun Perks for this!")
			end
		end)
		Premium:CreateKeybind("Get Fake Gun", Enum.KeyCode.H, function()
			if u("FakeGun") then
				z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, true)
			else
				B("Uh oh! you need FakeGun Perks for this!")
			end
		end)
		Premium:CreateToggle("Enable Get Fake Gun Bindable Button", function(tick)
			if tick then
				if u("FakeGun") then
					UK("Get Fake Gun", {
						OriginalName = "GFG",
						Position = UDim2.new(1, -500, 0, -140),
						Callback = function()
							z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, true)
						end
					})
				else
					B("Uh oh! you need FakeGun Perks for this!")
				end
			else
				rK("Get Fake Gun")
			end
		end)
		Premium:CreateSection("Server Sided")
		Premium:CreateToggle("Fake Gun Rain", function(tick)
			N.FakeGunRain = tick
			if tick then
				if u("FakeGun") then
					(coroutine.wrap(function()
						while N.FakeGunRain do
							task.wait()
							z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, true)
							if N.X3Drop then
								z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, true)
								z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, true)
							end
						end
					end))();
					(coroutine.wrap(function()
						while N.FakeGunRain do
							task.wait()
							if LocalPlayer.Character then
								local tick = YK()
								for Y, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
									if CoreGui.Name == tick then
										CoreGui.Parent = workspace
									end
								end
								for Y, CoreGui in pairs(LocalPlayer.Backpack:GetChildren()) do
									if CoreGui.Name == tick then
										CoreGui.Parent = LocalPlayer.Character
										CoreGui.Parent = workspace
									end
								end
							end
						end
					end))()
				else
					B("Uh oh! you need FakeGun Perks for this!")
				end
			end
		end)
		Premium:CreateToggle("Fake Gun Rain Lobby", function(tick)
			N.FakeGunRainLobby = tick
			if tick then
				if u("FakeGun") then
					local tick = tick()
					local Y = h(LocalPlayer)
					local CoreGui = Instance.new("BodyGyro")
					local TweenService = CFrame.new(-110, 150, 25)
					N.LastPos = Y.CFrame
					CoreGui.Name = "BodyGyro_Rain"
					CoreGui.Parent = LocalPlayer.Character.Head
					CoreGui.P = 90000
					CoreGui.MaxTorque = Vector3.new(9000000000, 9000000000, 9000000000)
					CoreGui.CFrame = Y.CFrame * CFrame.Angles(math.rad(-90), 0, math.rad(-90))
					m(LocalPlayer, "CFrame", TweenService * CFrame.Angles(math.rad(-90), 0, math.rad(-90)));
					(coroutine.wrap(function()
						while N.FakeGunRainLobby do
							task.wait()
							if LocalPlayer.Character then
								local Y = ((tick - tick()) * 2 + ((1 * math.pi) * 15) * 3) % (2 * math.pi)
								local CoreGui = math.sin(Y) * 10
								local UserInputService = math.cos(Y) * 10
								m(LocalPlayer, "CFrame", (TweenService * CFrame.new(CoreGui, 0, UserInputService)) * CFrame.Angles(math.rad(-90), 0, math.rad(-90)))
							end
						end
					end))();
					(coroutine.wrap(function()
						while N.FakeGunRainLobby do
							task.wait()
							z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, true)
							if N.X3Drop then
								z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, true)
								z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, true)
							end
						end
					end))();
					(coroutine.wrap(function()
						while N.FakeGunRainLobby do
							task.wait()
							if LocalPlayer.Character then
								local tick = YK()
								for Y, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
									if CoreGui.Name == tick then
										CoreGui.Parent = workspace
									end
								end
								for Y, CoreGui in pairs(LocalPlayer.Backpack:GetChildren()) do
									if CoreGui.Name == tick then
										CoreGui.Parent = LocalPlayer.Character
										CoreGui.Parent = workspace
									end
								end
							end
						end
					end))()
				else
					B("Uh oh! you need FakeGun Perks for this!")
				end
			else
				if LocalPlayer and (LocalPlayer.Character and (LocalPlayer.Character.Head and LocalPlayer.Character.Head:FindFirstChild("BodyGyro_Rain"))) then
					(LocalPlayer.Character.Head:FindFirstChild("BodyGyro_Rain")):Destroy()
					task.wait(.25)
					local tick = h(LocalPlayer)
					tick.CFrame = N.LastPos
				end
			end
		end)
		Premium:CreateToggle("X\051 Drop", function(tick)
			N.X3Drop = tick
		end)
		Premium:CreateButton("Drop Fake Gun", function()
			if u("FakeGun") then
				if LocalPlayer.Character then
					local tick = YK()
					local Y = false
					z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, true)
					repeat
						task.wait()
						for CoreGui, TweenService in pairs(LocalPlayer.Character:GetChildren()) do
							if TweenService.Name == tick then
								Y = true
							end
						end
					until Y
					LocalPlayer.Character[tick].Parent = workspace
				end
			else
				B("Uh oh! you need FakeGun Perks for this!")
			end
		end)
		Premium:CreateKeybind("Drop Fake Gun", Enum.KeyCode.V, function()
			if u("FakeGun") then
				if LocalPlayer.Character then
					local tick = YK()
					local Y = false
					z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, true)
					repeat
						task.wait()
						for CoreGui, TweenService in pairs(LocalPlayer.Character:GetChildren()) do
							if TweenService.Name == tick then
								Y = true
							end
						end
					until Y
					LocalPlayer.Character[tick].Parent = workspace
				end
			else
				B("Uh oh! you need FakeGun Perks for this!")
			end
		end)
		Premium:CreateToggle("Enable Drop Fake Gun Bindable Button", function(tick)
			if tick then
				if u("FakeGun") then
					UK("Drop Fake Gun", {
						OriginalName = "Drop Gun",
						Position = UDim2.new(1, -450, 0, -190);
						Callback = function()
							if u("FakeGun") then
								if LocalPlayer.Character then
									local tick = YK()
									local Y = false
									z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, true)
									repeat
										task.wait()
										for CoreGui, TweenService in pairs(LocalPlayer.Character:GetChildren()) do
											if TweenService.Name == tick then
												Y = true
											end
										end
									until Y
									LocalPlayer.Character[tick].Parent = workspace
								end
							else
								B("Uh oh! you need FakeGun Perks for this!")
							end
						end
					})
				else
					B("Uh oh! you need FakeGun Perks for this!")
				end
			else
				rK("Drop Fake Gun")
			end
		end)
		Premium:CreateParagraph("Fake Gun Rain!", "requires a godly gun.")
		Premium:CreateButton("Break Gun", function()
			local tick = V(ScriptContext.Sheriff)
			if tick and tick.Name ~= g then
				local Y = false
				for tick, CoreGui in pairs(tick.Backpack:GetChildren()) do
					if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
						Y = CoreGui
					end
				end
				if not Y then
					for tick, CoreGui in pairs(tick.Character:GetChildren()) do
						if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
							Y = CoreGui
						end
					end
				end
				if Y then
					local tick, CoreGui = pcall(function()
						z.Function(Y.KnifeServer.ShootGun, 0, CFrame.new(), "AH")
					end)
					if CoreGui and not tick then
						I("<font color=\"rgb(\048, \050\053\053, \048)\">Successfully</font> Breaked the gun from <font color=\"rgb(\048, \048, \050\053\053)\">Sheriff</font>!")
					end
				end
			end
		end)
		Premium:CreateKeybind("Break Gun", Enum.KeyCode.HttpService, function()
			local tick = V(ScriptContext.Sheriff)
			if tick and tick.Name ~= g then
				local Y = false
				for tick, CoreGui in pairs(tick.Backpack:GetChildren()) do
					if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
						Y = CoreGui
					end
				end
				if not Y then
					for tick, CoreGui in pairs(tick.Character:GetChildren()) do
						if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
							Y = CoreGui
						end
					end
				end
				if Y then
					local tick, CoreGui = pcall(function()
						z.Function(Y.KnifeServer.ShootGun, 0, CFrame.new(), "AH")
					end)
					if CoreGui and not tick then
						I("<font color=\"rgb(\048, \050\053\053, \048)\">Successfully</font> Breaked the gun from <font color=\"rgb(\048, \048, \050\053\053)\">Sheriff</font>!")
					end
				end
			end
		end)
		Premium:CreateToggle("Enable Break Gun Bindable Button", function(tick)
			if tick then
				UK("Break Gun", {
					OriginalName = "Break Gun",
					Position = UDim2.new(1, -600, 0, -190);
					Callback = function()
						local tick = V(ScriptContext.Sheriff)
						if tick and tick.Name ~= g then
							local Y = false
							for tick, CoreGui in pairs(tick.Backpack:GetChildren()) do
								if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
									Y = CoreGui
								end
							end
							if not Y then
								for tick, CoreGui in pairs(tick.Character:GetChildren()) do
									if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
										Y = CoreGui
									end
								end
							end
							if Y then
								local tick, CoreGui = pcall(function()
									z.Function(Y.KnifeServer.ShootGun, 0, CFrame.new(), "AH")
								end)
								if CoreGui and not tick then
									I("<font color=\"rgb(\048, \050\053\053, \048)\">Successfully</font> Breaked the gun from <font color=\"rgb(\048, \048, \050\053\053)\">Sheriff</font>!")
								end
							end
						end
					end
				})
			else
				rK("Break Gun")
			end
		end)
		Premium:CreateToggle("Auto Break Gun", function(tick)
			if tick then
				x:MakeTask("Auto Break Gun", RunService.Stepped, function()
					local tick = V(ScriptContext.Sheriff)
					if tick and tick.Name ~= g then
						local Y = false
						for tick, CoreGui in pairs(tick.Backpack:GetChildren()) do
							if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
								Y = CoreGui
							end
						end
						if not Y then
							for tick, CoreGui in pairs(tick.Character:GetChildren()) do
								if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
									Y = CoreGui
								end
							end
						end
						if Y then
							local tick, CoreGui = pcall(function()
								z.Function(Y.KnifeServer.ShootGun, 0, CFrame.new(), "AH")
							end)
							if CoreGui and not tick then
								I("<font color=\"rgb(\048, \050\053\053, \048)\">Successfully</font> Breaked the gun from <font color=\"rgb(\048, \048, \050\053\053)\">Sheriff</font>!")
							end
						end
					end
				end)
			else
				x:RemoveTask("Auto Break Gun")
			end
		end)
		Premium:CreatePlayerDropdown("Check Player Coins", function(tick)
			local Y = (z.Function(ReplicatedStorage.Remotes.Extras.GetFullInventory, tick)).Coins;
			(coroutine.wrap(I))(tick.Name .. (" Got <font color=\"rgb(\050\048\048, \050\048\048, \050\048\048)\">" .. (oK(Y) .. (" (" .. (Y .. ") Coins.</font>")))))
		end)
		Premium:CreatePlayerDropdown("Check Player Gems", function(tick)
			local Y = (z.Function(ReplicatedStorage.Remotes.Extras.GetFullInventory, tick)).Gems;
			(coroutine.wrap(I))(tick.Name .. (" Got <font color=\"rgb(\050\048\048, \050\048\048, \050\048\048)\">" .. (oK(Y) .. (" (" .. (Y .. ") Gems.</font>")))))
		end)
		Premium:CreatePlayerDropdown("Check Player Perks", function(tick)
			local Y = z.Function(ReplicatedStorage.Remotes.Extras.GetFullInventory, tick)
			local CoreGui, TweenService = Y.Perks.Owned, ""
			for tick = 1, # CoreGui, 1 do
				if TweenService == "" then
					TweenService = TweenService .. CoreGui[tick]
				else
					if tick == # CoreGui then
						TweenService = TweenService .. (" and " .. CoreGui[tick])
					else
						TweenService = TweenService .. (", " .. CoreGui[tick])
					end
				end
			end;
			(coroutine.wrap(I))(tick.Name .. (" has " .. (TweenService .. " Perks.")))
		end)
		Premium:CreateSection("Toy Modification")
		Premium:CreateToggle("Infinite Fireflies", function(tick)
			if tick then
				x:MakeTask("Infinite Fireflies", RunService.RenderStepped, function()
					if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Fireflies")) then
						(getsenv(LocalPlayer.Character.Fireflies.Client)).Fireflies = math.huge
					end
				end)
			else
				x:RemoveTask("Infinite Fireflies")
				if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Fireflies")) then
					(getsenv(LocalPlayer.Character.Fireflies.Client)).fireflies = 7
				end
			end
		end)
		Premium:CreateToggle("No Fireflies Cooldown", function(tick)
			if tick then
				x:MakeTask("No Fireflies Cooldown", RunService.RenderStepped, function()
					if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Fireflies")) then
						(getsenv(LocalPlayer.Character.Fireflies.Client)).check = true
					end
				end)
			else
				x:RemoveTask("No Fireflies Cooldown")
			end
		end)
		Premium:CreateSection("Spray Paint")
		Premium:CreateToggle("Spray Paint Immunity", function(tick)
			if tick then
				x:MakeTask("Spray Paint Immunity", workspace.ChildAdded, function(tick)
					if tick.Name == "Spray" then
						task.wait()
						for tick, Y in pairs(workspace:GetChildren()) do
							if Y.Name == "Spray" then
								Y:Destroy()
							end
						end
					end
				end)
			else
				x:RemoveTask("Spray Paint Immunity")
			end
		end)
		Premium:CreateButton("Steal Gun", function()
			local tick = V(ScriptContext.Sheriff)
			if tick and tick.Character then
				sK(function(Y)
					local CoreGui = h(tick)
					if CoreGui then
						local tick = 0
						z.Event(Y.Remote, 0, Enum.NormalId.Right, 10, CoreGui, CFrame.new(0, - math.huge, 0))
						repeat
							task.wait()
							tick = tick + 1
						until workspace:FindFirstChild("GunDrop") or tick >= 25
						task.spawn(function()
							if workspace:FindFirstChild("GunDrop") and not x:GetValue("Grabbing") then
								local tick = (h(LocalPlayer)).CFrame
								x:SetValue("Grabbing", true)
								x:MakeTask("Grab Gun", RunService.Heartbeat, function()
									if x:GetValue("Grabbing") then
										m(LocalPlayer, "CFrame", workspace.GunDrop.CFrame)
										LocalPlayer.Character.Humanoid.PlatformStand = false
									end
								end)
								repeat
									task.wait()
								until not workspace:FindFirstChild("GunDrop")
								x:RemoveTask("Grab Gun")
								m(LocalPlayer, "CFrame", tick)
								x:SetNil("Grabbing")
								LocalPlayer.Character.Humanoid.PlatformStand = false
								LocalPlayer.Character.Humanoid:ChangeState(1)
							end
						end)
					end
				end)
			end
		end)
		Premium:CreateButton("Black Lobby", function()
			sK(function(tick)
				for Y, CoreGui in pairs(workspace.Lobby:GetDescendants()) do
					task.wait()
					if CoreGui:IsA("BasePart") or CoreGui:IsA("Part") then
						z.Event(tick.Remote, 14787385911, Enum.NormalId.Top, 9999, CoreGui, CoreGui.CFrame)
						z.Event(tick.Remote, 14787385911, Enum.NormalId.Front, 9999, CoreGui, CoreGui.CFrame)
						z.Event(tick.Remote, 14787385911, Enum.NormalId.Bottom, 9999, CoreGui, CoreGui.CFrame)
						z.Event(tick.Remote, 14787385911, Enum.NormalId.Right, 9999, CoreGui, CoreGui.CFrame)
						z.Event(tick.Remote, 14787385911, Enum.NormalId.Left, 9999, CoreGui, CoreGui.CFrame)
						z.Event(tick.Remote, 14787385911, Enum.NormalId.Back, 9999, CoreGui, CoreGui.CFrame)
					end
				end
			end)
		end)
		yK(Premium, "Camera Shake", 15, function(tick, Y)
			local CoreGui = Y.Character:FindFirstChild("Head")
			if CoreGui then
				z.Event(tick.Remote, 0, Enum.NormalId.Front, 8, CoreGui, CoreGui.CFrame * CFrame.new(0, 1.5, 0))
			end
		end)
		yK(Premium, "Give Hallow", 15, function(tick, Y)
			local CoreGui = h(Y)
			if CoreGui then
				for Y = 1, 10, 1 do
					z.Event(tick.Remote, 17618294446, Enum.NormalId.Top, 2, CoreGui, CoreGui.CFrame * CFrame.new(0, 2.5 + Y / 100, 0))
					z.Event(tick.Remote, 17618294446, Enum.NormalId.Bottom, 2, CoreGui, CoreGui.CFrame * CFrame.new(0, 2.5 + Y / 100, 0))
				end
			end
		end)
		yK(Premium, "Slickback", 15, function(tick, Y)
			local CoreGui = Y.Character:FindFirstChild("LeftLowerArm")
			local TweenService = Y.Character:FindFirstChild("RightLowerArm")
			if CoreGui and TweenService then
				z.Event(tick.Remote, 0, Enum.NormalId.Front, 10000, CoreGui, CoreGui.CFrame * CFrame.new(0, 0, -1))
				z.Event(tick.Remote, 0, Enum.NormalId.Front, 10000, TweenService, TweenService.CFrame * CFrame.new(0, 0, -1))
			end
		end)
		yK(Premium, "Spoof Role Text", 15, function(tick, Y)
			local CoreGui = Y.Character:FindFirstChild("Head")
			if CoreGui then
				z.Event(tick.Remote, ScriptContext.Murderer == Y.Name and 17528040335 or ScriptContext.Sheriff == Y.Name and (not ScriptContext.Hero and 17528079377) or ScriptContext.Sheriff == Y.Name and (ScriptContext.Hero and 17528057967) or 17528011613, Enum.NormalId.Front, 5.5, CoreGui, CoreGui.CFrame * CFrame.new(0, 1.5, 0))
				z.Event(tick.Remote, ScriptContext.Murderer == Y.Name and 17528040335 or ScriptContext.Sheriff == Y.Name and (not ScriptContext.Hero and 17528079377) or ScriptContext.Sheriff == Y.Name and (ScriptContext.Hero and 17528057967) or 17528011613, Enum.NormalId.Back, 5.5, CoreGui, CoreGui.CFrame * CFrame.new(0, 1.5, 0))
			end
		end)
		yK(Premium, "Floor Clip", 15, function(tick, Y)
			local CoreGui = Y.Character:FindFirstChild("RightHand")
			if CoreGui then
				z.Event(tick.Remote, 0, Enum.NormalId.Front, 2500, CoreGui, CFrame.new(0, -25000, 0))
				z.Event(tick.Remote, 0, Enum.NormalId.Front, 2500, CoreGui, CFrame.new(0, 25000, 0))
			end
		end)
		yK(Premium, "Box", 15, function(tick, Y)
			local CoreGui = h(Y)
			if CoreGui then
				local Y = CoreGui.CFrame
				z.Event(tick.Remote, N.BoxSprayId, Enum.NormalId.Top, 6, CoreGui, Y * CFrame.new(0, 3, 0))
				z.Event(tick.Remote, N.BoxSprayId, Enum.NormalId.Bottom, 6, CoreGui, Y * CFrame.new(0, 3.15, 0))
				z.Event(tick.Remote, N.BoxSprayId, Enum.NormalId.Bottom, 6, CoreGui, Y * CFrame.new(0, -2, 0))
				z.Event(tick.Remote, N.BoxSprayId, Enum.NormalId.Top, 6, CoreGui, Y * CFrame.new(0, -3, 0))
				z.Event(tick.Remote, N.BoxSprayId, Enum.NormalId.Front, 6, CoreGui, Y * CFrame.new(0, .1, 3.1))
				z.Event(tick.Remote, N.BoxSprayId, Enum.NormalId.Back, 6, CoreGui, Y * CFrame.new(0, .1, 2.86))
				z.Event(tick.Remote, N.BoxSprayId, Enum.NormalId.Front, 6, CoreGui, Y * CFrame.new(0, .1, -2))
				z.Event(tick.Remote, N.BoxSprayId, Enum.NormalId.Back, 6, CoreGui, Y * CFrame.new(0, .1, -3))
				z.Event(tick.Remote, N.BoxSprayId, Enum.NormalId.Right, 6, CoreGui, Y * CFrame.new(2.86, .1, 0))
				z.Event(tick.Remote, N.BoxSprayId, Enum.NormalId.Left, 6, CoreGui, Y * CFrame.new(3.1, .1, 0))
				z.Event(tick.Remote, N.BoxSprayId, Enum.NormalId.Right, 6, CoreGui, Y * CFrame.new(-3, .1, 0))
				z.Event(tick.Remote, N.BoxSprayId, Enum.NormalId.Left, 6, CoreGui, Y * CFrame.new(-2, .1, 0))
			end
		end)
		Premium:CreateTextbox("Customize Box Image ID", function(tick)
			N.BoxSprayId = tonumber(tick) or 14787385911
		end)
		yK(Premium, "Penis", 15, function(tick, Y)
			local CoreGui = h(Y)
			if CoreGui then
				xK(tick, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, CoreGui, CoreGui.CFrame * CFrame.new(-1, -1, -1))
				xK(tick, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, CoreGui, CoreGui.CFrame * CFrame.new(1, -1, -1))
				xK(tick, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, CoreGui, CoreGui.CFrame * CFrame.new(0, -1, -1))
				xK(tick, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, CoreGui, CoreGui.CFrame * CFrame.new(0, -1, -2))
				xK(tick, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, CoreGui, CoreGui.CFrame * CFrame.new(0, -1, -3))
				xK(tick, 17621332813, CoreGui, CoreGui.CFrame * CFrame.new(0, -1, -4))
			end
		end)
		yK(Premium, "Back Penis", 15, function(tick, Y)
			local CoreGui = h(Y)
			if CoreGui then
				xK(tick, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, CoreGui, CoreGui.CFrame * CFrame.new(-1, -1, 4.5))
				xK(tick, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, CoreGui, CoreGui.CFrame * CFrame.new(1, -1, 4.5))
				xK(tick, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, CoreGui, CoreGui.CFrame * CFrame.new(0, -1, 4.5))
				xK(tick, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, CoreGui, CoreGui.CFrame * CFrame.new(0, -1, 3.5))
				xK(tick, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, CoreGui, CoreGui.CFrame * CFrame.new(0, -1, 2.5))
				xK(tick, 17621332813, CoreGui, CoreGui.CFrame * CFrame.new(0, -1, 1.5))
			end
		end)
		Premium:CreateDropdown("Penis Color", {
			"White",
			"Black"
		}, function(tick)
			N.PenisColor = tick
		end)
		yK(Premium, "Give White Stuff", 15, function(tick, Y)
			for Y, CoreGui in pairs(Y.Character:GetChildren()) do
				if CoreGui:IsA("BasePart") then
					z.Event(tick.Remote, 17593649425, Enum.NormalId.Left, 2, CoreGui, CoreGui.CFrame * CFrame.new(math.random(0, 1.5), math.random(0, 1.5), math.random(0, 1.5)))
					z.Event(tick.Remote, 17593649425, Enum.NormalId.Right, 2, CoreGui, CoreGui.CFrame * CFrame.new(math.random(0, 1.5), math.random(0, 1.5), math.random(0, 1.5)))
					z.Event(tick.Remote, 17593649425, Enum.NormalId.Front, 2, CoreGui, CoreGui.CFrame * CFrame.new(math.random(0, 1.5), math.random(0, 1.5), math.random(0, 1.5)))
				end
			end
		end)
		yK(Premium, "Blind", 15, function(tick, Y)
			local CoreGui = h(Y)
			if CoreGui then
				for Y = 1, 5, 1 do
					z.Event(tick.Remote, 14787385911, Enum.NormalId.Left, 55, CoreGui, CoreGui.CFrame * CFrame.new(0, 5 - 5 * (Y - 1), 0))
					z.Event(tick.Remote, 14787385911, Enum.NormalId.Right, 55, CoreGui, CoreGui.CFrame * CFrame.new(0, 5 - 5 * (Y - 1), 0))
					z.Event(tick.Remote, 14787385911, Enum.NormalId.Top, 55, CoreGui, CoreGui.CFrame * CFrame.new(0, 5 - 5 * (Y - 1), 0))
					z.Event(tick.Remote, 14787385911, Enum.NormalId.Bottom, 55, CoreGui, CoreGui.CFrame * CFrame.new(0, 5 - 5 * (Y - 1), 0))
					z.Event(tick.Remote, 14787385911, Enum.NormalId.Back, 55, CoreGui, CoreGui.CFrame * CFrame.new(0, 5 - 5 * (Y - 1), 0))
					z.Event(tick.Remote, 14787385911, Enum.NormalId.Front, 55, CoreGui, CoreGui.CFrame * CFrame.new(0, 5 - 5 * (Y - 1), 0))
				end
			end
		end)
		yK(Premium, "Lag", 15, function(tick, Y)
			local CoreGui = h(Y)
			if CoreGui then
				for Y = 1, 250, 1 do
					z.Event(tick.Remote, 0, Enum.NormalId.Right, 2048, CoreGui, CoreGui.CFrame)
				end
			end
		end)
		yK(Premium, "Freeze", 15, function(tick, Y)
			local CoreGui = Y.Character:FindFirstChild("LeftLowerArm")
			if CoreGui then
				for Y = 1, 30, 1 do
					z.Event(tick.Remote, 0, Enum.NormalId.Top, 2048, CoreGui, CoreGui.CFrame)
				end
			end
		end)
		yK(Premium, "Knock Up", 15, function(tick, Y)
			local CoreGui = Y.Character:FindFirstChild("LeftLowerArm")
			local TweenService = Y.Character:FindFirstChild("RightLowerArm")
			if CoreGui and TweenService then
				for Y = 1, 50, 1 do
					z.Event(tick.Remote, 0, Enum.NormalId.Top, 2048, TweenService, TweenService.CFrame)
				end
				for Y = 1, 50, 1 do
					z.Event(tick.Remote, 0, Enum.NormalId.Top, 2048, CoreGui, CoreGui.CFrame)
				end
			end
		end)
		yK(Premium, "Old Germany Flag", 15, MK)
		yK(Premium, "Reset", .25, function(tick, Y)
			local CoreGui = h(Y)
			if CoreGui then
				z.Event(tick.Remote, 0, Enum.NormalId.Right, 10, CoreGui, CFrame.new(0, - math.huge, 0))
			end
		end)
		yK(Premium, "Glitch", 5, function(tick, Y)
			local CoreGui = h(Y)
			if CoreGui then
				for Y = 1, 150, 1 do
					z.Event(tick.Remote, 0, Enum.NormalId.Right, 10, CoreGui, CoreGui.CFrame)
				end
			end
		end)
		yK(Premium, "Yeet", 15, function(tick, Y)
			local CoreGui = h(Y)
			if CoreGui then
				for Y = 1, 5, 1 do
					z.Event(tick.Remote, 0, Enum.NormalId.Right, 999999, CoreGui, CFrame.new(99999, 99999, 99999))
				end
			end
		end)
		Premium:CreateToggle("Infinite Spray Size", function(tick)
			N.InfiniteSpraySize = tick
		end)
		Premium:CreateToggle("Infinite Spray Range", function(tick)
			if tick then
				x:MakeTask("Infinite Spray Range", RunService.RenderStepped, function()
					if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("SprayPaint")) then
						(getsenv(LocalPlayer.Character.SprayPaint.Client)).range = math.huge
					end
				end)
			else
				x:RemoveTask("Infinite Spray Range")
				if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("SprayPaint")) then
					(getsenv(LocalPlayer.Character.SprayPaint.Client)).range = 5
				end
			end
		end)
		Premium:CreateToggle("No Spray Cooldown", function(tick)
			if tick then
				x:MakeTask("No Spray Cooldown", RunService.RenderStepped, function()
					if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("SprayPaint")) then
						(getsenv(LocalPlayer.Character.SprayPaint.Client)).cooldown = 0;
						(getsenv(LocalPlayer.Character.SprayPaint.Client)).check = true
					end
				end)
			else
				x:RemoveTask("No Spray Cooldown")
				if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("SprayPaint")) then
					(getsenv(LocalPlayer.Character.SprayPaint.Client)).cooldown = 9;
					(getsenv(LocalPlayer.Character.SprayPaint.Client)).check = true
				end
			end
		end)
		Premium:CreateSection("Advanced")
		Premium:CreateToggle("Loop Sound", function(tick)
			N.LoopSound = tick
			if tick then
				(coroutine.wrap(function()
					while N.LoopSound do
						task.wait(.25)
						for tick, Y in pairs(workspace:GetDescendants()) do
							if Y:IsA("Sound") then
								Y:Play()
							end
						end
					end
				end))()
			end
		end)
		Premium:CreateToggle("Swim", function(tick)
			N.Swim = tick
			if tick then
				local tick = Enum.HumanoidStateType:GetEnumItems()
				table.remove(tick, table.find(tick, Enum.HumanoidStateType.None))
				for tick, Y in pairs(tick) do
					LocalPlayer.Character.Humanoid:SetStateEnabled(Y, false)
				end
				LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
				x:MakeTask("Swim Died", LocalPlayer.Character.Humanoid.Died, function()
					pcall(function()
						if N.SwimBeat then
							N.SwimBeat:Disconnect()
							N.SwimDied:Disconnect()
						end
					end)
				end)
				x:MakeTask("Swim Beat", RunService.Stepped, function()
					pcall(function()
						LocalPlayer.Character.HumanoidRootPart.Velocity = (LocalPlayer.Character.Humanoid.MoveDirection ~= Vector3.new() or UserInputService:IsKeyDown(Enum.KeyCode.Space)) and (h(LocalPlayer)).Velocity or Vector3.new()
					end)
				end)
			else
				pcall(function()
					x:RemoveTask("Swim Died")
					x:RemoveTask("Swim Beat")
					local tick = Enum.HumanoidStateType:GetEnumItems()
					table.remove(tick, table.find(tick, Enum.HumanoidStateType.None))
					for tick, Y in pairs(tick) do
						LocalPlayer.Character.Humanoid:SetStateEnabled(Y, true)
					end
				end)
			end
		end)
		Premium:CreateToggle("Bang Player", function(tick)
			N.Bang = tick
			if tick then
				N.BangAnim = Instance.new("Animation")
				N.BangAnim.AnimationId = "rbxassetid://\053\057\049\056\055\050\054\054\055\052"
				N.Bang = LocalPlayer.Character.Humanoid:LoadAnimation(N.BangAnim)
				N.Bang:Play(.1, 1, 1)
				N.Bang:AdjustSpeed(10)
				x:MakeTask("Bang Died", LocalPlayer.Character.Humanoid.Died, function()
					x:RemoveTask("Bang Died")
					x:RemoveTask("Bang Beat")
				end)
				x:MakeTask("Bang Beat", RunService.Stepped, function()
					pcall(function()
						if N.BangPlayer ~= "" then
							m(LocalPlayer, "CFrame", (h(N.BangPlayer)).CFrame * CFrame.new(0, 0, 1.1))
						end
					end)
				end)
			else
				pcall(function()
					x:RemoveTask("Bang Died")
					x:RemoveTask("Bang Beat")
					N.Bang:Stop()
					N.BangAnim:Destroy()
				end)
			end
		end)
		Premium:CreatePlayerDropdown("Select Player", function(tick)
			N.BangPlayer = tick
		end)
		Premium:CreateToggle("Force Trade", function(tick)
			N.ForceTrade = tick
			if tick then
				(coroutine.wrap(function()
					while N.ForceTrade do
						task.wait(.25)
						pcall(function()
							z.Event(ReplicatedStorage.Trade.AcceptRequest)
						end)
					end
					return coroutine.yield("...")
				end))()
			end
		end)
		Premium:CreateToggle("Fake Lag", function(tick)
			N.FakeLag = tick
			if tick then
				(coroutine.wrap(function()
					while N.FakeLag do
						task.wait(1)
						pcall(function()
							if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character.Humanoid) then
								local tick = h(LocalPlayer)
								tick.Anchored = true
								task.wait(1)
								tick.Anchored = false
							end
						end)
					end
				end))()
			end
		end)
		Premium:CreateSection("Admin Commands")
		Premium:CreateLabel("Spray Paint:")
		Premium:CreateLabel("[+] //reset [player]")
		Premium:CreateLabel("[+] //box [player]")
		Premium:CreateLabel("[+] //spoofrole [player]")
		Premium:CreateLabel("[+] //blind [player]")
		Premium:CreateLabel("[+] //slickback [player]")
		Premium:CreateLabel("[+] //pp [player]")
		Premium:CreateLabel("[+] //backpp [player]")
		Premium:CreateLabel("[+] //floorclip [player]")
		Premium:CreateLabel("[+] //lag [player]")
		Premium:CreateLabel("[+] //freeze [player]")
		Premium:CreateLabel("[+] //knockup [player]")
		Premium:CreateLabel("[+] //camerashake [player]")
		Premium:CreateLabel("[+] //hallow [player]")
		Premium:CreateLabel("[+] //glitch [player]")
		Premium:CreateLabel("[+] //yeet [player]")
		Premium:CreateLabel("[+] //blacklobby")
		Premium:CreateLabel("[+] //stealgun")
		Premium:CreateLabel("Casual:")
		Premium:CreateLabel("[+] //tp [player]")
		Premium:CreateLabel("[+] //breakgun")
		Premium:CreateLabel("[+] //blurtroles")
		Premium:CreateLabel("[+] //trap")
		Premium:CreateLabel("Sheriff:")
		Premium:CreateLabel("[+] //shootmurderer")
		Premium:CreateLabel("Murderer:")
		Premium:CreateLabel("[+] //kill [player]")
		Premium:CreateParagraph("Admin Cmd!", "the target can do all or others.")
	else
		local tick = HttpService:JSONDecode(w("https://apis.roblox.com/game-passes/Stats\049/game-passes/\050\050\055\051\057\056\048\052/product-info"))
		Premium:CreateSection("Premium Member")
		Premium:CreateLabel("Be a Symphony Hub <font color=\"rgb(\048, \048, \050\053\053)\">Premium</font> <u>Member</u>!")
		Premium:CreateButton("Buy Premium for <font color=\"rgb(\048, \050\053\053, \048)\">" .. (tick.PriceInRobux .. " Robux</font>"), function()
			local tick, Y = pcall(function()
				MarketplaceService:PromptGamePassPurchase(LocalPlayer, 22739804)
			end)
			if Y and not tick then
				s("https://web.roblox.com/game-pass/\050\050\055\051\057\056\048\052/Symphony-Hub-Premium")
				I("<font color=\"rgb(\050\053\053, \048, \048)\">Failed</font> to callback the prompt, buy it on website instead | Copied to Clipboard")
			end
		end)
		Premium:CreateLabel("Not Working?")
		Premium:CreateButton("Copy Link Our Official site", function()
			s("https://symphonyhub.odoo.com")
		end)
	end
	local ox = Economy:CreateLabel("Murderer is: " .. ScriptContext.Murderer)
	local Yx = Economy:CreateLabel("Sheriff is: " .. ScriptContext.Sheriff)
	local jx = Economy:CreateLabel("Gun Status: <font color=\"rgb(\050\053\053, \048, \048)\">Not Dropped</font>")
	Economy:CreateButton("Grab Gun", function()
		local tick = workspace:FindFirstChild("GunDrop")
		if tick and l(LocalPlayer) then
			if ScriptContext.Murderer ~= g then
				task.spawn(function()
					if not x:GetValue("Grabbing") then
						local Y = (h(LocalPlayer)).CFrame
						x:SetValue("Grabbing", true)
						x:MakeTask("Grab Gun", RunService.Heartbeat, function()
							if x:GetValue("Grabbing") then
								m(LocalPlayer, "CFrame", tick.CFrame)
								LocalPlayer.Character.Humanoid.PlatformStand = false
							end
						end)
						repeat
							task.wait()
						until not workspace:FindFirstChild("GunDrop")
						x:RemoveTask("Grab Gun")
						m(LocalPlayer, "CFrame", Y)
						x:SetNil("Grabbing")
						LocalPlayer.Character.Humanoid.PlatformStand = false
						LocalPlayer.Character.Humanoid:ChangeState(1)
					end
				end)
			end
		elseif tick and not l(LocalPlayer) then
			B("You can\'UserInputService get the gun because you\'re not in the game")
		elseif not tick ~= nil then
			B("The gun didn\'UserInputService dropped yet")
		end
	end)
	Economy:CreateKeybind("Grab Gun", Enum.KeyCode.RunService, function()
		local tick = workspace:FindFirstChild("GunDrop")
		if tick and l(LocalPlayer) then
			if ScriptContext.Murderer ~= g then
				task.spawn(function()
					if not x:GetValue("Grabbing") then
						local Y = (h(LocalPlayer)).CFrame
						x:SetValue("Grabbing", true)
						x:MakeTask("Grab Gun", RunService.Heartbeat, function()
							if x:GetValue("Grabbing") then
								m(LocalPlayer, "CFrame", tick.CFrame)
								LocalPlayer.Character.Humanoid.PlatformStand = false
							end
						end)
						repeat
							task.wait()
						until not workspace:FindFirstChild("GunDrop")
						x:RemoveTask("Grab Gun")
						m(LocalPlayer, "CFrame", Y)
						x:SetNil("Grabbing")
						LocalPlayer.Character.Humanoid.PlatformStand = false
						LocalPlayer.Character.Humanoid:ChangeState(1)
					end
				end)
			end
		elseif tick and not l(LocalPlayer) then
			B("You can\'UserInputService get the gun because you\'re not in the game")
		elseif not tick ~= nil then
			B("The gun didn\'UserInputService dropped yet")
		end
	end)
	Economy:CreateToggle("Enable Grab Gun Bindable Button", function(tick)
		if tick then
			UK("Grab Gun", {
				OriginalName = "Grab Gun",
				Position = UDim2.new(1, -500, 0, -190);
				Callback = function()
					local tick = workspace:FindFirstChild("GunDrop")
					if tick and l(LocalPlayer) then
						if ScriptContext.Murderer ~= g then
							task.spawn(function()
								if not x:GetValue("Grabbing") then
									local Y = (h(LocalPlayer)).CFrame
									x:SetValue("Grabbing", true)
									x:MakeTask("Grab Gun", RunService.Heartbeat, function()
										if x:GetValue("Grabbing") then
											m(LocalPlayer, "CFrame", tick.CFrame)
											LocalPlayer.Character.Humanoid.PlatformStand = false
										end
									end)
									repeat
										task.wait()
									until not workspace:FindFirstChild("GunDrop")
									x:RemoveTask("Grab Gun")
									m(LocalPlayer, "CFrame", Y)
									x:SetNil("Grabbing")
									LocalPlayer.Character.Humanoid.PlatformStand = false
									LocalPlayer.Character.Humanoid:ChangeState(1)
								end
							end)
						end
					elseif tick and not l(LocalPlayer) then
						B("You can\'UserInputService get the gun because you\'re not in the game")
					elseif not tick ~= nil then
						B("The gun didn\'UserInputService dropped yet")
					end
				end
			})
		else
			rK("Grab Gun")
		end
	end)
	Economy:CreateToggle("Auto Grab Gun", function(tick)
		N.AutoGrabGun = tick
		if tick then
			task.spawn(function()
				(coroutine.wrap(function()
					while N.AutoGrabGun do
						task.wait(.25)
						pcall(function()
							local tick = workspace:FindFirstChild("GunDrop")
							local Y = V(ScriptContext.Murderer)
							if Y ~= nil and (l(Y) and Y.Name ~= g) then
								local CoreGui = ((h(Y)).Position - tick.CFrame.Position).Magnitude
								if tick and (l(LocalPlayer) and CoreGui > 10) then
									if not x:GetValue("Grabbing") then
										local Y = (h(LocalPlayer)).CFrame
										x:SetValue("Grabbing", true)
										x:MakeTask("Grab Gun", RunService.Heartbeat, function()
											if x:GetValue("Grabbing") then
												m(LocalPlayer, "CFrame", tick.CFrame)
												LocalPlayer.Character.Humanoid.PlatformStand = false
											end
										end)
										repeat
											task.wait()
										until not workspace:FindFirstChild("GunDrop")
										x:RemoveTask("Grab Gun")
										m(LocalPlayer, "CFrame", Y)
										x:SetNil("Grabbing")
										LocalPlayer.Character.Humanoid.PlatformStand = false
										LocalPlayer.Character.Humanoid:ChangeState(1)
									end
								end
							end
						end)
					end
					return coroutine.yield("...")
				end))()
			end)
		end
	end)
	Economy:CreateParagraph("Auto Grab Gun!", "will not trigger, if the murderer was camping the gun")
	Economy:CreateSection("Blurt/Expose")
	Economy:CreateButton("Blurt Roles", function()
		for Y, CoreGui in pairs(PlayerMods) do
			if CoreGui.Role == "Murderer" or CoreGui.Role == "Sheriff" or CoreGui.Role == "Hero" then
				z.Event(tick, CoreGui.Role .. (" is: " .. Y), N.AlwaysAliveChat and "alive" or "normalchat")
			end
		end
	end)
	Economy:CreateToggle("Auto Blurt Roles", function(Y)
		if Y then
			N.RoleStates["Auto Blurt Roles"] = function()
				for Y, CoreGui in pairs(PlayerMods) do
					if CoreGui.Role == "Murderer" or CoreGui.Role == "Sheriff" or CoreGui.Role == "Hero" then
						z.Event(tick, CoreGui.Role .. (" is: " .. Y), N.AlwaysAliveChat and "alive" or "normalchat")
					end
				end
			end
		else
			N.RoleStates["Auto Blurt Roles"] = nil
		end
	end)
	Economy:CreateButton("Blurt Murderer\'s Perk", function()
		if ScriptContext.Murderer ~= "" then
			z.Event(tick, ScriptContext.Murderer .. (" is currently using " .. (PlayerMods[ScriptContext.Murderer].Effect .. " Perk")), N.AlwaysAliveChat and "alive" or "normalchat")
		end
	end)
	Economy:CreateToggle("Auto Blurt Murderer\'s Perk", function(Y)
		if Y then
			N.RoleStates["Auto Blurt Murderer\'s Perk"] = function()
				for Y, CoreGui in pairs(PlayerMods) do
					if CoreGui.Role == "Murderer" then
						z.Event(tick, Y .. (" is currently using " .. (CoreGui.Effect .. " Perk")), N.AlwaysAliveChat and "alive" or "normalchat")
					end
				end
			end
		else
			N.RoleStates["Auto Blurt Murderer\'s Perk"] = nil
		end
	end)
	Economy:CreateSection("Spectate")
	Economy:CreateButton("Spectate Murderer", function()
		local tick = V(ScriptContext.Murderer)
		if l(tick) then
			EK(tick.Character)
		end
	end)
	Economy:CreateButton("Spectate Sheriff", function()
		local tick = V(ScriptContext.Sheriff)
		if l(tick) then
			EK(tick.Character)
		end
	end)
	Economy:CreateButton("Spectate Gun Drop", function()
		local tick = workspace:FindFirstChild("GunDrop")
		if tick ~= nil then
			EK(tick)
		else
			B("The gun didn\'UserInputService dropped yet")
		end
	end)
	Economy:CreatePlayerDropdown("Spectate Player", function(tick)
		EK(tick.Character)
	end)
	Economy:CreateButton("Unspectate", function()
		EK(LocalPlayer.Character)
	end)
	Economy:CreateToggle("Toggle Circle Cursor", function(tick)
		Premium.Visible = tick
		if tick then
			x:MakeTask("Circle Cursor", RunService.Stepped, function()
				Premium.Position = Vector2.new(Farm.X, Farm.Y - 5.5)
			end)
		else
			x:RemoveTask("Circle Cursor")
		end
	end)
	Economy:CreateButton("Remove Barriers", function()
		for tick, Y in pairs(workspace:GetDescendants()) do
			if Y.Name == "GlitchProof" then
				Y:Destroy()
			end
		end
	end)
	Economy:CreateToggle("Remove Knife Effects &\n<font color=\"rgb(\050\053\053, \048, \048)\">Lighting</font><font color=\"rgb(\048, \050\053\053, \048)\">h</font><font color=\"rgb(\048, \048, \050\053\053)\">TextService</font><font color=\"rgb(\050\053\053, \048, \048)\">tick</font><font color=\"rgb(\048, \050\053\053, \048)\">m</font><font color=\"rgb(\048, \048, \050\053\053)\">a</font> Glowing Animation", function(tick)
		if tick then
			x:MakeTask("Remove Knife Effects & Chroma Glowing Animation", RunService.RenderStepped, function()
				for tick, Y in pairs(Players:GetPlayers()) do
					pcall(function()
						for tick, Y in pairs(Y.Character.KnifeDisplay:GetDescendants()) do
							if Y.Name ~= "Attachment" and (Y.Name ~= "CustomAttachment" and (Y.Name ~= "RigidConstraint" and Y.Name ~= "Mesh")) or Y.Name == "Chroma" then
								Y:Destroy()
							end
						end
						if ScriptContext.Murderer == Y.Name then
							local tick = Y.Character:FindFirstChild("Knife")
							local CoreGui = tick and tick.Handle:FindFirstChild("Chroma")
							if CoreGui then
								CoreGui:Destroy()
							end
						elseif ScriptContext.Sheriff == Y.Name then
							local tick = Y.Character:FindFirstChild("Gun")
							local CoreGui = tick and tick.Handle:FindFirstChild("Chroma")
							if CoreGui then
								CoreGui:Destroy()
							end
						end
					end)
				end
			end)
		else
			x:RemoveTask("Remove Knife Effects & Chroma Glowing Animation")
		end
	end)
	Economy:CreateToggle("Optimize Coins", function(tick)
		if tick then
			x:MakeTask("Optimize Coins", RunService.Stepped, function()
				local tick = ZK()
				if tick then
					pcall(function()
						for tick, Y in pairs(tick.CoinContainer:GetChildren()) do
							if Y.Name == "Coin_Server" then
								if Y.CoinVisual:FindFirstChild("MainCoin") and Y.CoinVisual.MainCoin.Transparency == 1 or not Y.CoinVisual:FindFirstChild("MainCoin") and Y.CoinVisual.Transparency == 1 then
									Y:Destroy()
								end
							end
						end
					end)
				end
			end)
		else
			x:RemoveTask("Optimize Coins")
		end
	end)
	Economy:CreateToggle("Loop Interactive", function(tick)
		N.LoopInteractive = tick
		if tick then
			(coroutine.wrap(function()
				while N.LoopInteractive do
					task.wait(.25)
					local tick = ZK()
					if tick then
						for tick, Y in pairs(tick:GetDescendants()) do
							if Y.Name == "Interact" and Y:IsA("RemoteEvent") then
								z.Event(Y)
							end
						end
					end
				end
			end))()
		end
	end)
	Economy:CreateButton("Get XBox Knife", function()
		if ReplicatedStorage.Remotes.Extras and ReplicatedStorage.Remotes.Extras.IsXbox then
			z.Event(ReplicatedStorage.Remotes.Extras.IsXbox)
		end
	end)
	Economy:CreateToggle("Auto Prestige", function(tick)
		if tick then
			x:MakeTask("Auto Prestige", RunService.RenderStepped, function()
				z.Event(ReplicatedStorage.Remotes.Inventory.Prestige)
			end)
		else
			x:RemoveTask("Auto Prestige")
		end
	end)
	Economy:CreateButton("Prestige", function()
		z.Event(ReplicatedStorage.Remotes.Inventory.Prestige)
	end)
	RunService.RenderStepped:Connect(function()
		pcall(function()
			local tick = V(ScriptContext.Murderer)
			local Y = V(ScriptContext.Sheriff)
			if l(tick) then
				ox:Update("Murderer is: <font color=\"rgb(\050\053\053, \048, \048)\">" .. (ScriptContext.Murderer .. "</font>"))
			else
				ox:Update("Murderer is: <font color=\"rgb(\049\048\052, \049\048\052, \049\048\052)\">None Detected</font>")
			end
			if l(Y) then
				if ScriptContext.Hero then
					Yx:Update("Hero is: <font color=\"rgb(\048, \050\053\053, \048)\">" .. (ScriptContext.Sheriff .. "</font>"))
				else
					Yx:Update("Sheriff is: <font color=\"rgb(\048, \048, \050\053\053)\">" .. (ScriptContext.Sheriff .. "</font>"))
				end
			else
				Yx:Update("Sheriff is: <font color=\"rgb(\049\048\052, \049\048\052, \049\048\052)\">None Detected</font>")
			end
		end)
	end)
	RunService.RenderStepped:Connect(function()
		local tick = workspace:FindFirstChild("GunDrop")
		if tick then
			jx:Update("Gun Status: <font color=\"rgb(\048, \050\053\053, \048)\">Dropped</font>")
		else
			jx:Update("Gun Status: <font color=\"#ff\048\048\048\048\">Not Dropped</font>")
		end
	end)
	Blocks:CreateParagraph("Blocks", "Every blocks you placed have collision but only for you except for others.")
	for tick, Y in pairs(Q) do
		Blocks:CreateButton("Place " .. (tick .. " Block"), function()
			sK(function(tick)
				local CoreGui = h(LocalPlayer)
				if CoreGui then
					CoreGui = CoreGui.CFrame
					fK(tick, Y, CFrame.new(CoreGui.X, CoreGui.Y - 3, CoreGui.TweenService))
				end
			end)
		end)
	end
	Blocks:CreateSection("Buildings")
	Blocks:CreateButton("Place Nether Portal", function()
		sK(function(tick)
			local Y = h(LocalPlayer)
			if Y then
				Y = Y.CFrame
				local CoreGui, TweenService, UserInputService = Y.X, Y.Y - 3, Y.TweenService
				for Y = 1, 3, 1 do
					fK(tick, Q.Obsidian, CFrame.new(CoreGui + 3.5 * (Y - 1), TweenService, UserInputService + 7))
				end
				for Y = 1, 2, 1 do
					fK(tick, Q.Obsidian, CFrame.new(CoreGui - 3.5 * Y, TweenService, UserInputService + 7))
				end
				for Y = 1, 4, 1 do
					fK(tick, Q.Obsidian, CFrame.new(CoreGui + 7, TweenService + 3.5 * Y, UserInputService + 7))
				end
				for Y = 1, 4, 1 do
					fK(tick, Q.Obsidian, CFrame.new(CoreGui - 7, TweenService + 3.5 * Y, UserInputService + 7))
				end
				fK(tick, Q.Obsidian, CFrame.new(CoreGui + 3.5, TweenService + 14, UserInputService + 7))
				fK(tick, Q.Obsidian, CFrame.new(CoreGui, TweenService + 14, UserInputService + 7))
				fK(tick, Q.Obsidian, CFrame.new(CoreGui - 3.5, TweenService + 14, UserInputService + 7))
				for Y = 1, 3, 1 do
					aK(tick, Q.Portal, CFrame.new(CoreGui + 3.5, TweenService + 3.5 * Y, UserInputService + 7))
					aK(tick, Q.Portal, CFrame.new(CoreGui, TweenService + 3.5 * Y, UserInputService + 7))
					aK(tick, Q.Portal, CFrame.new(CoreGui - 3.5, TweenService + 3.5 * Y, UserInputService + 7))
				end
			end
		end)
	end)
	Blocks:CreateButton("Place Aether Portal", function()
		sK(function(tick)
			local Y = h(LocalPlayer)
			if Y then
				Y = Y.CFrame
				local CoreGui, TweenService, UserInputService = Y.X, Y.Y - 3, Y.TweenService
				for Y = 1, 3, 1 do
					fK(tick, Q.Glowstone, CFrame.new(CoreGui + 3.5 * (Y - 1), TweenService, UserInputService + 7))
				end
				for Y = 1, 2, 1 do
					fK(tick, Q.Glowstone, CFrame.new(CoreGui - 3.5 * Y, TweenService, UserInputService + 7))
				end
				for Y = 1, 4, 1 do
					fK(tick, Q.Glowstone, CFrame.new(CoreGui + 7, TweenService + 3.5 * Y, UserInputService + 7))
				end
				for Y = 1, 4, 1 do
					fK(tick, Q.Glowstone, CFrame.new(CoreGui - 7, TweenService + 3.5 * Y, UserInputService + 7))
				end
				fK(tick, Q.Glowstone, CFrame.new(CoreGui + 3.5, TweenService + 14, UserInputService + 7))
				fK(tick, Q.Glowstone, CFrame.new(CoreGui, TweenService + 14, UserInputService + 7))
				fK(tick, Q.Glowstone, CFrame.new(CoreGui - 3.5, TweenService + 14, UserInputService + 7))
				for Y = 1, 3, 1 do
					aK(tick, Q.Portal, CFrame.new(CoreGui + 3.5, TweenService + 3.5 * Y, UserInputService + 7))
					aK(tick, Q.Portal, CFrame.new(CoreGui, TweenService + 3.5 * Y, UserInputService + 7))
					aK(tick, Q.Portal, CFrame.new(CoreGui - 3.5, TweenService + 3.5 * Y, UserInputService + 7))
				end
			end
		end)
	end)
	Blocks:CreateButton("Place Basic Villager House", function()
		sK(function(tick)
			local Y = h(LocalPlayer)
			if Y then
				Y = Y.CFrame
				local CoreGui, TweenService, UserInputService = Y.X, Y.Y - 3, Y.TweenService
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 7, TweenService, UserInputService + 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 7, TweenService, UserInputService + 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 7, TweenService, UserInputService))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 7, TweenService, UserInputService - 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 7, TweenService, UserInputService - 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 3.5, TweenService, UserInputService + 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 3.5, TweenService, UserInputService + 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 3.5, TweenService, UserInputService))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 3.5, TweenService, UserInputService - 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 3.5, TweenService, UserInputService - 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui, TweenService, UserInputService + 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui, TweenService, UserInputService + 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui, TweenService, UserInputService))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui, TweenService, UserInputService - 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui, TweenService, UserInputService - 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 7, TweenService, UserInputService + 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 7, TweenService, UserInputService + 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 7, TweenService, UserInputService))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 7, TweenService, UserInputService - 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 7, TweenService, UserInputService - 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 3.5, TweenService, UserInputService + 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 3.5, TweenService, UserInputService + 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 3.5, TweenService, UserInputService))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 3.5, TweenService, UserInputService - 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 3.5, TweenService, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 3.5, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 3.5, UserInputService + 3.5))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 3.5, UserInputService))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 3.5, UserInputService - 3.5))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 3.5, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 3.5, TweenService + 3.5, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 3.5, TweenService + 3.5, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui, TweenService + 3.5, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 3.5, TweenService + 3.5, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 3.5, TweenService + 3.5, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 3.5, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 3.5, UserInputService + 3.5))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 3.5, UserInputService))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 3.5, UserInputService - 3.5))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 3.5, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 7, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 7, UserInputService + 3.5))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 7, UserInputService - 3.5))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 7, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 3.5, TweenService + 7, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 3.5, TweenService + 7, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 3.5, TweenService + 7, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 3.5, TweenService + 7, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 7, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 7, UserInputService + 3.5))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 7, UserInputService - 3.5))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 7, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 10.5, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 10.5, UserInputService + 3.5))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 10.5, UserInputService))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 10.5, UserInputService - 3.5))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 7, TweenService + 10.5, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 3.5, TweenService + 10.5, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui - 3.5, TweenService + 10.5, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui, TweenService + 10.5, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui, TweenService + 10.5, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 3.5, TweenService + 10.5, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui, TweenService + 10.5, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 3.5, TweenService + 10.5, UserInputService - 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 10.5, UserInputService + 7))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 10.5, UserInputService + 3.5))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 10.5, UserInputService))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 10.5, UserInputService - 3.5))
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui + 7, TweenService + 10.5, UserInputService - 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 7, TweenService + 14, UserInputService + 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 7, TweenService + 14, UserInputService + 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 7, TweenService + 14, UserInputService))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 7, TweenService + 14, UserInputService - 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 7, TweenService + 14, UserInputService - 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 3.5, TweenService + 14, UserInputService + 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 3.5, TweenService + 14, UserInputService + 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 3.5, TweenService + 14, UserInputService))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 3.5, TweenService + 14, UserInputService - 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 3.5, TweenService + 14, UserInputService - 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui, TweenService + 14, UserInputService + 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui, TweenService + 14, UserInputService + 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui, TweenService + 14, UserInputService))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui, TweenService + 14, UserInputService - 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui, TweenService + 14, UserInputService - 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 7, TweenService + 14, UserInputService + 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 7, TweenService + 14, UserInputService + 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 7, TweenService + 14, UserInputService))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 7, TweenService + 14, UserInputService - 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 7, TweenService + 14, UserInputService - 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 3.5, TweenService + 14, UserInputService + 7))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 3.5, TweenService + 14, UserInputService + 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 3.5, TweenService + 14, UserInputService))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 3.5, TweenService + 14, UserInputService - 3.5))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 3.5, TweenService + 14, UserInputService - 7))
			end
		end)
	end)
	Blocks:CreateButton("Place PP", function()
		sK(function(tick)
			local Y = h(LocalPlayer)
			if Y then
				Y = Y.CFrame
				local CoreGui, TweenService, UserInputService = Y.X, Y.Y - 3, Y.TweenService
				for Y = 1, 3, 1 do
					fK(tick, Q.Cobblestone, CFrame.new(CoreGui, TweenService, UserInputService + 3.5 * Y))
				end
				fK(tick, Q["Oak Planks"], CFrame.new(CoreGui, TweenService, UserInputService + 14))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui + 3.5, TweenService, UserInputService))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui, TweenService, UserInputService))
				fK(tick, Q.Cobblestone, CFrame.new(CoreGui - 3.5, TweenService, UserInputService))
			end
		end)
	end)
	Combat:CreateSection("Survival")
	Combat:CreateToggle("Auto Dodge Murderer <font color=\"#\057f\052fff\">(Premium)</font>", function(tick)
		if H then
			if tick then
				x:MakeTask("Auto Dodge Murderer", RunService.Heartbeat, function()
					pcall(function()
						local tick = p(ScriptContext.Murderer) or false
						if tick ~= nil and (tick.Name ~= g and l(tick)) then
							local Y = ((h(tick)).Position - (h(LocalPlayer)).Position).Magnitude
							if Y <= 15 then
								local Y = ((h(tick)).Position - (h(LocalPlayer)).Position).Unit
								local CoreGui = CFrame.new((h(LocalPlayer)).Position + Y * 25)
								m(LocalPlayer, "CFrame", CoreGui)
							end
						end
					end)
				end)
			else
				x:RemoveTask("Auto Dodge Murderer")
			end
		end
	end)
	Combat:CreateSection("Sheriff")
	Combat:CreateButton("Shoot Murderer", function()
		local tick = V(ScriptContext.Murderer)
		if tick and (tick.Character and (l(tick) and not x:GetValue("Shooting Murderer"))) then
			local Y = false
			local CoreGui = false
			for tick, TweenService in pairs(LocalPlayer.Backpack:GetChildren()) do
				if TweenService.Name == "Gun" and TweenService:IsA("Tool") then
					TweenService.Parent = LocalPlayer.Character
					Y = TweenService
					CoreGui = true
				end
			end
			if not Y then
				for tick, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
					if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
						Y = CoreGui
					end
				end
			end
			if Y then
				local TweenService = (h(LocalPlayer)).CFrame
				local UserInputService
				local VirtualInputManager
				x:SetValue("Shooting Murderer", true)
				VirtualInputManager = RunService.Heartbeat:Connect(function()
					m(LocalPlayer, "CFrame", (h(tick)).CFrame * CFrame.new(0, 0, 5))
				end)
				task.wait(.2)
				UserInputService = RunService.Heartbeat:Connect(function()
					z.Function(Y.KnifeServer.ShootGun, 0, ((h(tick)).CFrame + (tick.Character.Humanoid.MoveDirection * tick.Character.Humanoid.WalkSpeed) / 16).Position, "AH")
				end)
				task.wait()
				VirtualInputManager:Disconnect()
				UserInputService:Disconnect()
				x:SetNil("Shooting Murderer")
				m(LocalPlayer, "CFrame", TweenService)
				if CoreGui then
					Y.Parent = LocalPlayer.Backpack
				end
			end
		end
	end)
	Combat:CreateKeybind("Shoot Murderer", Enum.KeyCode.Lighting, function()
		local tick = V(ScriptContext.Murderer)
		if tick and (tick.Character and (l(tick) and not x:GetValue("Shooting Murderer"))) then
			local Y = false
			local CoreGui = false
			for tick, TweenService in pairs(LocalPlayer.Backpack:GetChildren()) do
				if TweenService.Name == "Gun" and TweenService:IsA("Tool") then
					TweenService.Parent = LocalPlayer.Character
					Y = TweenService
					CoreGui = true
				end
			end
			if not Y then
				for tick, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
					if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
						Y = CoreGui
					end
				end
			end
			if Y then
				local TweenService = (h(LocalPlayer)).CFrame
				local UserInputService
				local VirtualInputManager
				x:SetValue("Shooting Murderer", true)
				VirtualInputManager = RunService.Heartbeat:Connect(function()
					m(LocalPlayer, "CFrame", (h(tick)).CFrame * CFrame.new(0, 0, 5))
				end)
				task.wait(.2)
				UserInputService = RunService.Heartbeat:Connect(function()
					z.Function(Y.KnifeServer.ShootGun, 0, ((h(tick)).CFrame + (tick.Character.Humanoid.MoveDirection * tick.Character.Humanoid.WalkSpeed) / 16).Position, "AH")
				end)
				task.wait()
				VirtualInputManager:Disconnect()
				UserInputService:Disconnect()
				x:SetNil("Shooting Murderer")
				m(LocalPlayer, "CFrame", TweenService)
				if CoreGui then
					Y.Parent = LocalPlayer.Backpack
				end
			end
		end
	end)
	Combat:CreateToggle("Sharp Shooter", function(tick)
		N.SharpShooter = tick
	end)
	Combat:CreateToggle("Sheriff Silent Aim", function(tick)
		N.SheriffSilentAim = tick
	end)
	local Zx = Combat:CreateLabel("Current Silent Aim Accuracy: " .. (N.SheriffSilentAimAccuracy or "Dynamic"))
	Combat:CreateParagraph("Sheriff Silent Aim", "Probabilities:\n\nSeismic: <s>\055\048%</s> <u>\056\056%</u> \226\172\134\nOverflow: <s>\055\056%</s> <u>\057\048%</u> \226\172\134\nDynamic: <s>\053\049%</s> <u>\053\051%</u> \226\172\134\nRegular: <s>\050\056%</s> <u>\051\056%</u> \226\172\134\n\n<font size=\"\049\050\">Last updated since patch \048.\056</font>")
	Combat:CreateDropdown("Sheriff Silent Aim Accuracy", {
		"Overflow <font color=\"rgb(\048, \048, \050\053\053)\">(Premium)</font>";
		"Seismic <font color=\"rgb(\050\048\048, \049\048, \049\048)\">(Content Creator)</font>",
		"Dynamic",
		"Regular"
	}, function(tick)
		if tick == "Overflow <font color=\"rgb(\048, \048, \050\053\053)\">(Premium)</font>" then
			if H then
				N.SheriffSilentAimAccuracy = "Overflow"
			else
				B("You need to be a premium user to use this feature.")
			end
		elseif tick == "Seismic <font color=\"rgb(\050\048\048, \049\048, \049\048)\">(Content Creator)</font>" then
			if y then
				N.SheriffSilentAimAccuracy = "Seismic"
			else
				B("You need to be a content creator to use this feature.")
			end
		else
			N.SheriffSilentAimAccuracy = tick
		end
		Zx:Update("Current Silent Aim Accuracy: " .. N.SheriffSilentAimAccuracy)
	end)
	Combat:CreateSection("Murderer")
	Combat:CreateDropdown("Target Checking", {
		"Mouse Cursor",
		"Closest"
	}, function(tick)
		N.MurdererSilentAimTargetChecking = tick
	end)
	Combat:CreateToggle("Murderer Silent Aim <font color=\"#\057f\052fff\">(Premium)</font>", function(tick)
		N.MurdererSilentAim = H and tick
		if not H and tick then
			B("You need to be a premium user to use this feature.")
		end
	end)
	Combat:CreateToggle("Auto Kill Everyone", function(tick)
		if tick then
			x:MakeTask("Auto Kill Everyone", RunService.Heartbeat, function()
				if Stats == "Murderer" and l(LocalPlayer) then
					local tick = false
					for Y, CoreGui in pairs(LocalPlayer.Backpack:GetChildren()) do
						if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
							CoreGui.Parent = LocalPlayer.Character
							tick = CoreGui
						end
					end
					if not tick then
						for Y, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
							if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
								tick = CoreGui
							end
						end
					end
					if tick then
						for Y, CoreGui in pairs(Players:GetPlayers()) do
							if CoreGui.Name ~= g and l(CoreGui) then
								HK(CoreGui, tick)
							end
						end
					end
				end
			end)
		else
			x:RemoveTask("Auto Kill Everyone")
		end
	end)
	Combat:CreateToggle("Knife Aura", function(tick)
		N.KnifeAura = tick
		if tick then
			(coroutine.wrap(function()
				while N.KnifeAura do
					task.wait(.15)
					if Stats == "Murderer" then
						for tick, Y in pairs(Players:GetPlayers()) do
							if Y.Name ~= g then
								local tick = ((h(Y)).Position - (h(LocalPlayer)).Position).Magnitude
								if tick <= N.KnifeRange then
									local tick = false
									for Y, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
										if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
											tick = CoreGui
										end
									end
									if tick then
										HK(Y, tick)
									end
								end
							end
						end
					end
				end
			end))()
		end
	end)
	local tx = Combat:CreateSlider("Knife Range", 1, 100, 30, function(tick)
		N.KnifeRange = tonumber(tick)
	end)
	Combat:CreateButton("Kill Everyone", function()
		if Stats == "Murderer" then
			local tick = false
			for Y, CoreGui in pairs(LocalPlayer.Backpack:GetChildren()) do
				if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
					CoreGui.Parent = LocalPlayer.Character
					tick = CoreGui
				end
			end
			if not tick then
				for Y, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
					if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
						tick = CoreGui
					end
				end
			end
			if tick then
				for Y, CoreGui in pairs(Players:GetPlayers()) do
					if CoreGui.Name ~= g then
						HK(CoreGui, tick)
					end
				end
			end
		end
	end)
	Combat:CreateKeybind("Kill Everyone", Enum.KeyCode.B, function()
		if Stats == "Murderer" then
			local tick = false
			for Y, CoreGui in pairs(LocalPlayer.Backpack:GetChildren()) do
				if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
					CoreGui.Parent = LocalPlayer.Character
					tick = CoreGui
				end
			end
			if not tick then
				for Y, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
					if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
						tick = CoreGui
					end
				end
			end
			if tick then
				for Y, CoreGui in pairs(Players:GetPlayers()) do
					if CoreGui.Name ~= g then
						HK(CoreGui, tick)
					end
				end
			end
		end
	end)
	Combat:CreateButton("Kill Sheriff", function()
		local tick = V(ScriptContext.Sheriff)
		if Stats == "Murderer" then
			local Y = false
			for tick, CoreGui in pairs(LocalPlayer.Backpack:GetChildren()) do
				if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
					CoreGui.Parent = LocalPlayer.Character
					Y = CoreGui
				end
			end
			if not Y then
				for tick, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
					if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
						Y = CoreGui
					end
				end
			end
			if Y then
				HK(tick, Y)
			end
		end
	end)
	Combat:CreatePlayerDropdown("Kill Player", function(tick)
		if Stats == "Murderer" then
			local Y = false
			for tick, CoreGui in pairs(LocalPlayer.Backpack:GetChildren()) do
				if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
					CoreGui.Parent = LocalPlayer.Character
					Y = CoreGui
				end
			end
			if not Y then
				for tick, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
					if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
						Y = CoreGui
					end
				end
			end
			if Y then
				HK(tick, Y)
			end
		end
	end)
	Miscellaneous:CreateSection("Perks")
	Miscellaneous:CreateToggle("Stealth", function(tick)
		if u("Ghost") then
			z.Event(ReplicatedStorage.Remotes.Gameplay.Stealth, tick)
		else
			if tick then
				B("Uh oh! you need Ghost Perks for this!")
			end
		end
	end)
	Miscellaneous:CreateToggle("Fake Gun", function(tick)
		if u("FakeGun") then
			z.Event(ReplicatedStorage.Remotes.Gameplay.FakeGun, tick)
		else
			if tick then
				B("Uh oh! you need FakeGun Perks for this!")
			end
		end
	end)
	Miscellaneous:CreateToggle("Sprint Trail", function(tick)
		if u("Sprint") then
			if LocalPlayer.Character then
				z.Event(LocalPlayer.Character.SpeedTrail.Toggle, tick)
			end
		else
			if tick then
				B("Uh oh! you need Sprint Perks for this!")
			end
		end
	end)
	Miscellaneous:CreateSection("Client")
	Miscellaneous:CreateToggle("Headless", function(tick)
		if tick then
			LocalPlayer.Character.Head.Transparency = 1
			for tick, Y in pairs(LocalPlayer.Character.Head:GetChildren()) do
				if Y:IsA("Decal") then
					Y.Transparency = 1
				end
			end
		else
			LocalPlayer.Character.Head.Transparency = 0
			for tick, Y in pairs(LocalPlayer.Character.Head:GetChildren()) do
				if Y:IsA("Decal") then
					Y.Transparency = 0
				end
			end
		end
	end)
	Miscellaneous:CreateButton("Korblox", function(tick)
		LocalPlayer.Character.RightLowerLeg.MeshId = "\057\048\050\057\052\050\048\057\051"
		LocalPlayer.Character.RightLowerLeg.Transparency = 1
		LocalPlayer.Character.RightUpperLeg.MeshId = "http://www.roblox.com/asset/?id=\057\048\050\057\052\050\048\057\054"
		LocalPlayer.Character.RightUpperLeg.TextureID = "http://roblox.com/asset/?id=\057\048\050\056\052\051\051\057\056"
		LocalPlayer.Character.RightFoot.MeshId = "\057\048\050\057\052\050\048\056\057"
		LocalPlayer.Character.RightFoot.Transparency = 1
	end)
	Teleport:CreateButton("Map", function()
		local tick = ZK()
		if tick then
			local Y = nil
			local CoreGui = nil
			for tick, Y in pairs(tick.Spawns:GetChildren()) do
				if Y.Name == "Spawn" or Y.Name == "PlayerSpawn" then
					CoreGui = CFrame.new(Y.CFrame.X, Y.CFrame.Y, Y.CFrame.TweenService) * CFrame.Angles(0, 0, 0)
				end
			end
			if CoreGui ~= nil then
				Y = CoreGui * CFrame.new(0, 5, 0)
				if Y ~= nil then
					m(LocalPlayer, "CFrame", Y)
				end
			end
		end
	end)
	Teleport:CreateButton("Above Map", function()
		local tick = ZK()
		if tick then
			local Y = nil
			local CoreGui = nil
			for tick, Y in pairs(tick.Spawns:GetChildren()) do
				if Y.Name == "Spawn" or Y.Name == "PlayerSpawn" then
					CoreGui = CFrame.new(Y.CFrame.X, Y.CFrame.Y, Y.CFrame.TweenService) * CFrame.Angles(0, 0, 0)
				end
			end
			if CoreGui ~= nil then
				Y = CFrame.new(CoreGui.X, (CFrame.new((DK((CoreGui * CFrame.new(0, 999, 0)).Position, tick)).Position) * CFrame.new(0, 7, 0)).Y, CoreGui.TweenService)
				if Y ~= nil then
					m(LocalPlayer, "CFrame", Y)
				end
			end
		end
	end)
	Teleport:CreateButton("Voting Map", function()
		local tick = CFrame.new(-108, 140, 83)
		m(LocalPlayer, "CFrame", tick)
	end)
	Teleport:CreateButton("Void (Safe)", function()
		local tick = CFrame.new(99999, 99999, 99999)
		m(LocalPlayer, "CFrame", tick)
		if not LocalPlayer.Character:FindFirstChild("Safe Void Path") then
			local tick = Instance.new("Part")
			tick.Name = "Safe Void Path"
			tick.Parent = LocalPlayer.Character
			tick.CFrame = CFrame.new(99999, 99995, 99999)
			tick.Anchored = true
			tick.Size = Vector3.new(300, .1, 300)
			tick.Transparency = .5
		end
	end)
	Teleport:CreateButton("Lobby", function()
		local tick = CFrame.new(-110, 140, 10)
		m(LocalPlayer, "CFrame", tick)
	end)
	Teleport:CreateButton("Murderer", function()
		local tick = V(ScriptContext.Murderer)
		if l(tick) then
			local Y = (h(tick)).CFrame
			m(LocalPlayer, "CFrame", Y)
		end
	end)
	Teleport:CreateButton("Sheriff", function()
		local tick = V(ScriptContext.Sheriff)
		if l(tick) then
			local Y = (h(tick)).CFrame
			m(LocalPlayer, "CFrame", Y)
		end
	end)
	Teleport:CreatePlayerDropdown("TP to Player", function(tick)
		m(LocalPlayer, "CFrame", (h(tick)).CFrame)
	end)
	local Kx = Farm:CreateLabel("Farm Elapse: \048d \048h \048m \048s")
	local Ux = Farm:CreateLabel("Collected Coins: \048")
	local rx = Farm:CreateLabel("Collected Eggs: \048")
	Farm:CreateToggle("Auto Farm", function(tick)
		N.AutoFarm = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoFarm do
					task.wait()
					local tick = V(ScriptContext.Murderer)
					local Y
					if N.CoinType == "Coin" then
						Y = N.CoinBag ~= ContextActionService
					elseif N.CoinType == "Egg" then
						Y = N.EggBag ~= 20
					elseif N.CoinType == "Coin and Egg" then
						Y = N.CoinBag ~= ContextActionService and N.EggBag ~= 20
					end
					if tick and (tick.Character and (z.Function(ReplicatedStorage.Remotes.Extras.GetTimer) > 0 and (l(LocalPlayer) and Y))) then
						local tick = QK()
						if tick and N.PreviousCoin ~= tick then
							local Y = tick.CFrame
							local CoreGui = h(LocalPlayer)
							local UserInputService = (h(LocalPlayer)).Position
							local VirtualInputManager = (Y.Position - UserInputService).Magnitude
							local UserService = N.FarmSpeedMethod == "Automatic" and (N.FastFarm and VirtualInputManager * .0385 or VirtualInputManager * .0415) or N.FarmSpeedMethod == "Manual" and tonumber(N.ManualSpeed)
							local TextService = N.SafeMode
							local RunService = 0
							local StarterGui = 0
							local HttpService
							N.PreviousCoin = tick
							N.FarmSTOP = false
							if UserService >= 10 then
								UserService = 3
							end
							z.Event(ReplicatedStorage.Remotes.Gameplay.Stealth, N.StealthWhenFarm)
							if TextService then
								local tick = ZK()
								if tick then
									local CoreGui = nil
									local TweenService = nil
									for tick, Y in pairs(tick.Spawns:GetChildren()) do
										if Y.Name == "Spawn" or Y.Name == "PlayerSpawn" then
											TweenService = CFrame.new(Y.CFrame.X, Y.CFrame.Y, Y.CFrame.TweenService) * CFrame.Angles(0, 0, 0)
										end
									end
									if TweenService ~= nil then
										CoreGui = CFrame.new(TweenService.X, (CFrame.new((DK((TweenService * CFrame.new(0, -999, 0)).Position, tick)).Position) * CFrame.new(0, -20, 0)).Y, TweenService.TweenService)
										if CoreGui ~= nil then
											RunService = {
												Y.X;
												CoreGui.Y,
												Y.TweenService
											}
											StarterGui = CoreGui.Y
										end
									end
								end
							else
								RunService = {
									Y.X;
									Y.Y - 1.875;
									Y.TweenService
								}
							end
							if TextService then
								m(LocalPlayer, "CFrame", CFrame.new(CoreGui.CFrame.X, StarterGui, CoreGui.CFrame.TweenService) * CFrame.Angles(math.rad(90), 0, math.rad(90)))
							end
							NK(true)
							HttpService = CFrame.new(RunService[1], RunService[2], RunService[3]) * CFrame.Angles(math.rad(90), 0, math.rad(90))
							N.CurrentTween = TweenService:Create(h(LocalPlayer), TweenInfo.new(UserService, Enum.EasingStyle.Linear, N.SmoothFarm), {
								CFrame = HttpService
							})
							N.CurrentTween:Play()
							task.wait(UserService + .1)
							if N.CurrentTween then
								if TextService then
									m(LocalPlayer, "CFrame", CFrame.new(Y.X, Y.Y - 1.875, Y.TweenService) * CFrame.Angles(math.rad(90), 0, math.rad(90)))
								end
							end
						end
					else
						if not N.FarmSTOP and (LocalPlayer and (LocalPlayer.Character and l(LocalPlayer))) then
							N.FarmSTOP = true
							N.NoReplicateCoin = 0
							NK(false)
							z.Event(ReplicatedStorage.Remotes.Gameplay.Stealth, false)
							if l(LocalPlayer) then
								if N.TpWhenDone == "Map" then
									local tick = ZK()
									if tick then
										local Y = nil
										local CoreGui = nil
										for tick, Y in pairs(tick.Spawns:GetChildren()) do
											if Y.Name == "Spawn" or Y.Name == "PlayerSpawn" then
												CoreGui = CFrame.new(Y.CFrame.X, Y.CFrame.Y, Y.CFrame.TweenService) * CFrame.Angles(0, 0, 0)
											end
										end
										if CoreGui ~= nil then
											Y = CoreGui * CFrame.new(0, 5, 0)
											if Y ~= nil then
												m(LocalPlayer, "CFrame", Y)
											else
												if N.OldPos ~= nil then
													m(LocalPlayer, "CFrame", N.OldPos)
													N.OldPos = nil
												end
											end
										end
									end
								elseif N.TpWhenDone == "Lobby" then
									local tick = CFrame.new(-110, 140, 10)
									m(LocalPlayer, "CFrame", tick)
									N.OldPos = nil
								elseif N.TpWhenDone == "Void (Safe)" then
									local tick = CFrame.new(99999, 99999, 99999)
									m(LocalPlayer, "CFrame", tick)
									if not LocalPlayer.Character:FindFirstChild("Safe Void Path") then
										local tick = Instance.new("Part")
										tick.Name = "Safe Void Path"
										tick.Parent = LocalPlayer.Character
										tick.CFrame = CFrame.new(99999, 99995, 99999)
										tick.Anchored = true
										tick.Size = Vector3.new(300, .1, 300)
										tick.Transparency = .5
									end
									N.OldPos = nil
								elseif N.TpWhenDone == "Above Map" then
									local tick = ZK()
									if tick then
										local Y = nil
										local CoreGui = nil
										for tick, Y in pairs(tick.Spawns:GetChildren()) do
											if Y.Name == "Spawn" or Y.Name == "PlayerSpawn" then
												CoreGui = CFrame.new(Y.CFrame.X, Y.CFrame.Y, Y.CFrame.TweenService) * CFrame.Angles(0, 0, 0)
											end
										end
										if CoreGui ~= nil then
											Y = CFrame.new(CoreGui.X, (CFrame.new((DK((CoreGui * CFrame.new(0, 999, 0)).Position, tick)).Position) * CFrame.new(0, 3, 0)).Y, CoreGui.TweenService)
											if Y ~= nil then
												m(LocalPlayer, "CFrame", Y)
											else
												if N.OldPos ~= nil then
													m(LocalPlayer, "CFrame", N.OldPos)
													N.OldPos = nil
												end
											end
										end
									end
								end
								if Stats == "Murderer" then
									if N.KillAllWhenDone then
										local tick = false
										for Y, CoreGui in pairs(LocalPlayer.Backpack:GetChildren()) do
											if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
												CoreGui.Parent = LocalPlayer.Character
												tick = CoreGui
											end
										end
										if not tick then
											for Y, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
												if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
													tick = CoreGui
												end
											end
										end
										if tick then
											for Y, CoreGui in pairs(Players:GetPlayers()) do
												if CoreGui.Name ~= g then
													HK(CoreGui, tick)
												end
											end
										end
									end
								elseif Stats == "Sheriff" then
									if tick and (tick.Character and (l(tick) and not x:GetValue("Shooting Murderer"))) then
										local Y = false
										local CoreGui = false
										for tick, TweenService in pairs(LocalPlayer.Backpack:GetChildren()) do
											if TweenService.Name == "Gun" and TweenService:IsA("Tool") then
												TweenService.Parent = LocalPlayer.Character
												Y = TweenService
												CoreGui = true
											end
										end
										if not Y then
											for tick, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
												if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
													Y = CoreGui
												end
											end
										end
										if Y then
											local TweenService = (h(LocalPlayer)).CFrame
											local UserInputService
											local VirtualInputManager
											x:SetValue("Shooting Murderer", true)
											VirtualInputManager = RunService.Heartbeat:Connect(function()
												m(LocalPlayer, "CFrame", (h(tick)).CFrame * CFrame.new(0, 0, 5))
											end)
											task.wait(.2)
											UserInputService = RunService.Heartbeat:Connect(function()
												z.Function(Y.KnifeServer.ShootGun, 0, ((h(tick)).CFrame + (tick.Character.Humanoid.MoveDirection * tick.Character.Humanoid.WalkSpeed) / 16).Position, "AH")
											end)
											task.wait()
											VirtualInputManager:Disconnect()
											UserInputService:Disconnect()
											x:SetNil("Shooting Murderer")
											m(LocalPlayer, "CFrame", TweenService)
											if CoreGui then
												Y.Parent = LocalPlayer.Backpack
											end
										end
									end
								end
								if N.ResetEveryoneWhenDone then
									sK(function(tick)
										for Y, CoreGui in pairs(Players:GetPlayers()) do
											if CoreGui.Name ~= g and CoreGui.Character then
												local Y = h(CoreGui)
												if Y then
													z.Event(tick.Remote, 0, Enum.NormalId.Right, 10, Y, CFrame.new(0, - math.huge, 0))
												end
											end
										end
									end)
								else
									if N.ResetMurdererWhenDone then
										sK(function(Y)
											local CoreGui = h(tick)
											if CoreGui then
												z.Event(Y.Remote, 0, Enum.NormalId.Right, 10, CoreGui, CFrame.new(0, - math.huge, 0))
											end
										end)
									end
									if N.ResetSheriffWhenDone then
										tick = V(ScriptContext.Sheriff)
										if tick and (tick.Character and l(tick)) then
											sK(function(Y)
												local CoreGui = h(tick)
												if CoreGui then
													z.Event(Y.Remote, 0, Enum.NormalId.Right, 10, CoreGui, CFrame.new(0, - math.huge, 0))
												end
											end)
										end
									end
								end
								if N.ResetWhenDone then
									LocalPlayer.Character.Humanoid.Health = 0
								end
							end
						end
					end
				end
			end))()
		else
			NK(false)
			N.CollectedCoins = 0
			N.NoReplicateCoin = 0
			N.Elapse.s = 0
			N.Elapse.m = 0
			N.Elapse.h = 0
			N.Elapse.d = 0
			Kx:Update("Farm Elapse: " .. (N.Elapse.d .. ("d " .. (N.Elapse.h .. ("h " .. (N.Elapse.m .. ("m " .. (N.Elapse.s .. "s"))))))))
			N.CurrentCoin = nil
			if N.StealthWhenFarm and u("Ghost") then
				z.Event(ReplicatedStorage.Remotes.Gameplay.Stealth, false)
			end
			if N.CurrentTween ~= nil then
				N.CurrentTween:Pause()
				N.CurrentTween = nil
				task.wait(.15)
			end
			if l(LocalPlayer) then
				if N.TpWhenDone == "Map" then
					local tick = ZK()
					if tick then
						local Y = nil
						local CoreGui = nil
						for tick, Y in pairs(tick.Spawns:GetChildren()) do
							if Y.Name == "Spawn" or Y.Name == "PlayerSpawn" then
								CoreGui = CFrame.new(Y.CFrame.X, Y.CFrame.Y, Y.CFrame.TweenService) * CFrame.Angles(0, 0, 0)
							end
						end
						if CoreGui ~= nil then
							Y = CoreGui * CFrame.new(0, 5, 0)
							if Y ~= nil then
								m(LocalPlayer, "CFrame", Y)
							else
								if N.OldPos ~= nil then
									m(LocalPlayer, "CFrame", N.OldPos)
									N.OldPos = nil
								end
							end
						end
					end
				elseif N.TpWhenDone == "Lobby" then
					local tick = CFrame.new(-110, 140, 10)
					m(LocalPlayer, "CFrame", tick)
					N.OldPos = nil
				elseif N.TpWhenDone == "Void (Safe)" then
					local tick = CFrame.new(99999, 99999, 99999)
					m(LocalPlayer, "CFrame", tick)
					if not LocalPlayer.Character:FindFirstChild("Safe Void Path") then
						local tick = Instance.new("Part")
						tick.Name = "Safe Void Path"
						tick.Parent = LocalPlayer.Character
						tick.CFrame = CFrame.new(99999, 99995, 99999)
						tick.Anchored = true
						tick.Size = Vector3.new(300, .1, 300)
						tick.Transparency = .5
					end
					N.OldPos = nil
				elseif N.TpWhenDone == "Above Map" then
					local tick = ZK()
					if tick then
						local Y = nil
						local CoreGui = nil
						for tick, Y in pairs(tick.Spawns:GetChildren()) do
							if Y.Name == "Spawn" or Y.Name == "PlayerSpawn" then
								CoreGui = CFrame.new(Y.CFrame.X, Y.CFrame.Y, Y.CFrame.TweenService) * CFrame.Angles(0, 0, 0)
							end
						end
						if CoreGui ~= nil then
							Y = CFrame.new(CoreGui.X, (CFrame.new((DK((CoreGui * CFrame.new(0, 999, 0)).Position, tick)).Position) * CFrame.new(0, 3, 0)).Y, CoreGui.TweenService)
							if Y ~= nil then
								m(LocalPlayer, "CFrame", Y)
							else
								if N.OldPos ~= nil then
									m(LocalPlayer, "CFrame", N.OldPos)
									N.OldPos = nil
								end
							end
						end
					end
				end
			end
		end
	end)
	Farm:CreateSection("Config")
	Farm:CreateToggle("Safe Mode <font color=\"#\057f\052fff\">(Premium)</font>", function(tick)
		N.SafeMode = H and tick
	end)
	Farm:CreateToggle("Extra Farm Speed <font color=\"#\057f\052fff\">(Premium)</font>", function(tick)
		N.FastFarm = H and tick
	end)
	Farm:CreateToggle("Smooth Farm <font color=\"#\057f\052fff\">(Premium)</font>", function(tick)
		N.SmoothFarm = H and (tick and Enum.EasingDirection.In) or Enum.EasingDirection.InOut
	end)
	Farm:CreateDropdown("When Done Return In", {
		"Map";
		"Above Map",
		"Lobby";
		"Void (Safe)"
	}, function(tick)
		N.TpWhenDone = tick
	end)
	Farm:CreateDropdown("Farm Speed Method", {
		"Automatic",
		"Manual"
	}, function(tick)
		N.FarmSpeedMethod = tick
	end)
	local Gx = Farm:CreateSlider("Manual Speed", 1, 5, 3, function(tick)
		N.ManualSpeed = tonumber(tick) or 3
	end)
	Farm:CreateDropdown("Coin Type", {
		"Coin";
		"Egg",
		"Coin and Egg"
	}, function(tick)
		N.CoinType = tick
	end)
	Farm:CreateSection("When Done Farming")
	Farm:CreateLabel("Murderer:")
	Farm:CreateToggle("Kill Everyone", function(tick)
		N.KillAllWhenDone = tick
	end)
	Farm:CreateLabel("Sheriff:")
	Farm:CreateToggle("Shoot Murderer", function(tick)
		N.ShootMurdWhenDone = tick
	end)
	Farm:CreateLabel("All Roles:")
	Farm:CreateToggle("Reset", function(tick)
		N.ResetWhenDone = tick
	end)
	Farm:CreateToggle("Invisible", function(tick)
		N.InvisibleWhenDone = tick
	end)
	Farm:CreateSection("Spray Paint (When Done Farming)")
	Farm:CreateToggle("Reset Everyone <font color=\"#\057f\052fff\">(Premium)</font>", function(tick)
		N.ResetEveryoneWhenDone = H and tick
	end)
	Farm:CreateToggle("Reset Sheriff <font color=\"#\057f\052fff\">(Premium)</font>", function(tick)
		N.ResetSheriffWhenDone = H and tick
	end)
	Farm:CreateToggle("Reset Murderer <font color=\"#\057f\052fff\">(Premium)</font>", function(tick)
		N.ResetMurdererWhenDone = H and tick
	end)
	Farm:CreateSection("Perks")
	Farm:CreateToggle("Use Stealth While Farming", function(tick)
		N.StealthWhenFarm = tick
	end)
	RunService.RenderStepped:Connect(function()
		local tick = LocalPlayer and (LocalPlayer.PlayerGui and (LocalPlayer.PlayerGui.MainGUI and (LocalPlayer.PlayerGui.MainGUI.Lobby and (LocalPlayer.PlayerGui.MainGUI.Lobby.Dock and (LocalPlayer.PlayerGui.MainGUI.Lobby.Dock.CoinBags and (LocalPlayer.PlayerGui.MainGUI.Lobby.Dock.CoinBags.Container and (LocalPlayer.PlayerGui.MainGUI.Lobby.Dock.CoinBags.Container.Coin and (LocalPlayer.PlayerGui.MainGUI.Lobby.Dock.CoinBags.Container.Coin.CurrencyFrame and (LocalPlayer.PlayerGui.MainGUI.Lobby.Dock.CoinBags.Container.Coin.CurrencyFrame.Icon and LocalPlayer.PlayerGui.MainGUI.Lobby.Dock.CoinBags.Container.Coin.CurrencyFrame.Icon.Coins))))))))) or LocalPlayer and (LocalPlayer.PlayerGui and (LocalPlayer.PlayerGui.MainGUI and (LocalPlayer.PlayerGui.MainGUI.Game and (LocalPlayer.PlayerGui.MainGUI.Game.CoinBags and (LocalPlayer.PlayerGui.MainGUI.Game.CoinBags and (LocalPlayer.PlayerGui.MainGUI.Game.CoinBags.Container and (LocalPlayer.PlayerGui.MainGUI.Game.CoinBags.Container.Coin and (LocalPlayer.PlayerGui.MainGUI.Game.CoinBags.Container.Coin.CurrencyFrame and (LocalPlayer.PlayerGui.MainGUI.Game.CoinBags.Container.Coin.CurrencyFrame.Icon and LocalPlayer.PlayerGui.MainGUI.Game.CoinBags.Container.Coin.CurrencyFrame.Icon.Coins)))))))))
		local Y = LocalPlayer and (LocalPlayer.PlayerGui and (LocalPlayer.PlayerGui.MainGUI and (LocalPlayer.PlayerGui.MainGUI.Lobby and (LocalPlayer.PlayerGui.MainGUI.Lobby.Dock and (LocalPlayer.PlayerGui.MainGUI.Lobby.Dock.CoinBags and (LocalPlayer.PlayerGui.MainGUI.Lobby.Dock.CoinBags.Container and (LocalPlayer.PlayerGui.MainGUI.Lobby.Dock.CoinBags.Container.Coin and (LocalPlayer.PlayerGui.MainGUI.Lobby.Dock.CoinBags.Container.Egg.CurrencyFrame and (LocalPlayer.PlayerGui.MainGUI.Lobby.Dock.CoinBags.Container.Egg.CurrencyFrame.Icon and LocalPlayer.PlayerGui.MainGUI.Lobby.Dock.CoinBags.Container.Egg.CurrencyFrame.Icon.Coins))))))))) or LocalPlayer and (LocalPlayer.PlayerGui and (LocalPlayer.PlayerGui.MainGUI and (LocalPlayer.PlayerGui.MainGUI.Game and (LocalPlayer.PlayerGui.MainGUI.Game.CoinBags and (LocalPlayer.PlayerGui.MainGUI.Game.CoinBags and (LocalPlayer.PlayerGui.MainGUI.Game.CoinBags.Container and (LocalPlayer.PlayerGui.MainGUI.Game.CoinBags.Container.Egg and (LocalPlayer.PlayerGui.MainGUI.Game.CoinBags.Container.Egg.CurrencyFrame and (LocalPlayer.PlayerGui.MainGUI.Game.CoinBags.Container.Egg.CurrencyFrame.Icon and LocalPlayer.PlayerGui.MainGUI.Game.CoinBags.Container.Egg.CurrencyFrame.Icon.Coins)))))))))
		if tick and Y then
			if tonumber(tick.Text) == ContextActionService then
				Ux:Update("Collected Coins: " .. (tick.Text .. " [Full]"))
			else
				Ux:Update("Collected Coins: " .. tick.Text)
			end
			if tonumber(Y.Text) == 20 then
				rx:Update("Collected Eggs: " .. (Y.Text .. " [Full]"))
			else
				rx:Update("Collected Eggs: " .. Y.Text)
			end
			CoinBag = tonumber(tick.Text) + tonumber(Y.Text)
			N.CoinBag = tonumber(tick.Text)
			N.EggBag = tonumber(Y.Text)
		end
	end)
	LocalPlayer.CharacterAdded:Connect(function()
		pcall(function()
			if N.ForceSpawn then
				task.wait(.5)
				local tick = h(LocalPlayer)
				tick.CFrame = N.ForceSpawnCFrame
				N.ForceSpawn = false
			end
		end)
	end);
	(coroutine.wrap(function()
		while true do
			if N.AutoFarm then
				task.wait(1)
				N.Elapse.s = N.Elapse.s + 1
				if N.Elapse.s == 60 then
					N.Elapse.s = 0
					N.Elapse.m = N.Elapse.m + 1
					if N.Elapse.m == 60 then
						N.Elapse.m = 0
						N.Elapse.h = N.Elapse.h + 1
						if N.Elapse.h == 24 then
							N.Elapse.h = 0
							N.Elapse.d = N.Elapse.d + 1
						end
					end
				end
			else
				task.wait()
				N.Elapse.s = 0
				N.Elapse.m = 0
				N.Elapse.h = 0
				N.Elapse.d = 0
			end
			Kx:Update("Farm Elapse: " .. (N.Elapse.d .. ("d " .. (N.Elapse.h .. ("h " .. (N.Elapse.m .. ("m " .. (N.Elapse.s .. "s"))))))))
		end
	end))()
	JK()
	ReplicatedStorage.Remotes.Gameplay.Fade.OnClientEvent:Connect(function(tick)
		PlayerMods = tick
		Stats = PlayerMods[g] and PlayerMods[g].Role or "Innocent"
		for tick, Y in pairs(PlayerMods) do
			if not Y.Died and not Y.Killed then
				if Y.Role == "Murderer" then
					local Y = V(tick)
					if Y and Y.Character then
						ScriptContext.Murderer = tick
					end
				elseif Y.Role == "Sheriff" then
					local Y = V(tick)
					if Y and Y.Character then
						ScriptContext.Sheriff = tick
						ScriptContext.Hero = false
					end
				elseif Y.Role == "Hero" then
					local Y = V(tick)
					if Y and Y.Character then
						ScriptContext.Sheriff = tick
						ScriptContext.Hero = true
					end
				else
					local Y = V(tick)
					if Y and Y.Character then
						for Y, CoreGui in pairs(Y.Character:GetChildren()) do
							if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
								ScriptContext.Sheriff = tick
								ScriptContext.Hero = true
								if g == tick then
									Stats = "Hero"
								end
							end
						end
						if ScriptContext.Sheriff ~= tick then
							for Y, CoreGui in pairs(Y.Backpack:GetChildren()) do
								if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
									ScriptContext.Sheriff = tick
									ScriptContext.Hero = true
									if g == tick then
										Stats = "Hero"
									end
								end
							end
						end
					end
				end
			end
		end
		for tick, Y in pairs(N.RoleStates) do
			(coroutine.wrap(Y))()
		end
	end)
	ReplicatedStorage.Remotes.Gameplay.RoundEndFade.OnClientEvent:Connect(function()
		for tick, Y in pairs(Players:GetPlayers()) do
			PlayerMods[Y.Name] = {}
			PlayerMods[Y.Name].Dead = true
			PlayerMods[Y.Name].Killed = true
		end
		ScriptContext.Murderer = ""
		ScriptContext.Sheriff = ""
	end)
	ReplicatedStorage.UpdatePlayerData.OnClientEvent:Connect(zK)
	workspace.ChildRemoved:Connect(function()
		task.spawn(function()
			task.wait()
			zK()
		end)
	end)
	Players.PlayerRemoving:Connect(function(tick)
		local Y = N.ESPFolder:FindFirstChild(tick.Name)
		if Y then
			Y:Destroy()
		end
	end)
	OK("freeze", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = CoreGui.Character:FindFirstChild("LeftLowerArm")
					if tick then
						for CoreGui = 1, 30, 1 do
							z.Event(Y.Remote, 0, Enum.NormalId.Top, 2048, tick, tick.CFrame)
						end
					end
				end
			end
		end)
	end)
	OK("knockup", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = CoreGui.Character:FindFirstChild("LeftLowerArm")
					local TweenService = CoreGui.Character:FindFirstChild("RightLowerArm")
					if tick and TweenService then
						for tick = 1, 50, 1 do
							z.Event(Y.Remote, 0, Enum.NormalId.Top, 2048, TweenService, TweenService.CFrame)
						end
						for CoreGui = 1, 50, 1 do
							z.Event(Y.Remote, 0, Enum.NormalId.Top, 2048, tick, tick.CFrame)
						end
					end
				end
			end
		end)
	end)
	OK("lag", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = h(CoreGui)
					if tick then
						for CoreGui = 1, 250, 1 do
							z.Event(Y.Remote, 0, Enum.NormalId.Right, 2048, tick, tick.CFrame)
						end
					end
				end
			end
		end)
	end)
	OK("camerashake", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = h(CoreGui)
					if tick then
						z.Event(Y.Remote, 0, Enum.NormalId.Front, 8, Head, Head.CFrame * CFrame.new(0, 1.5, 0))
					end
				end
			end
		end)
	end)
	OK("spoofrole", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = CoreGui.Character:FindFirstChild("Head")
					if tick then
						z.Event(Y.Remote, ScriptContext.Murderer == CoreGui.Name and 17528040335 or ScriptContext.Sheriff == CoreGui.Name and (not ScriptContext.Hero and 17528079377) or ScriptContext.Sheriff == CoreGui.Name and (ScriptContext.Hero and 17528057967) or 17528011613, Enum.NormalId.Front, 5.5, tick, tick.CFrame * CFrame.new(0, 1.5, 0))
						z.Event(Y.Remote, ScriptContext.Murderer == CoreGui.Name and 17528040335 or ScriptContext.Sheriff == CoreGui.Name and (not ScriptContext.Hero and 17528079377) or ScriptContext.Sheriff == CoreGui.Name and (ScriptContext.Hero and 17528057967) or 17528011613, Enum.NormalId.Back, 5.5, tick, tick.CFrame * CFrame.new(0, 1.5, 0))
					end
				end
			end
		end)
	end)
	OK("box", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = h(CoreGui)
					if tick then
						local CoreGui = tick.CFrame
						z.Event(Y.Remote, N.BoxSprayId, Enum.NormalId.Top, 6, tick, CoreGui * CFrame.new(0, 3, 0))
						z.Event(Y.Remote, N.BoxSprayId, Enum.NormalId.Bottom, 6, tick, CoreGui * CFrame.new(0, 3.15, 0))
						z.Event(Y.Remote, N.BoxSprayId, Enum.NormalId.Bottom, 6, tick, CoreGui * CFrame.new(0, -2, 0))
						z.Event(Y.Remote, N.BoxSprayId, Enum.NormalId.Top, 6, tick, CoreGui * CFrame.new(0, -3, 0))
						z.Event(Y.Remote, N.BoxSprayId, Enum.NormalId.Front, 6, tick, CoreGui * CFrame.new(0, .1, 3.1))
						z.Event(Y.Remote, N.BoxSprayId, Enum.NormalId.Back, 6, tick, CoreGui * CFrame.new(0, .1, 2.86))
						z.Event(Y.Remote, N.BoxSprayId, Enum.NormalId.Front, 6, tick, CoreGui * CFrame.new(0, .1, -2))
						z.Event(Y.Remote, N.BoxSprayId, Enum.NormalId.Back, 6, tick, CoreGui * CFrame.new(0, .1, -3))
						z.Event(Y.Remote, N.BoxSprayId, Enum.NormalId.Right, 6, tick, CoreGui * CFrame.new(2.86, .1, 0))
						z.Event(Y.Remote, N.BoxSprayId, Enum.NormalId.Left, 6, tick, CoreGui * CFrame.new(3.1, .1, 0))
						z.Event(Y.Remote, N.BoxSprayId, Enum.NormalId.Right, 6, tick, CoreGui * CFrame.new(-3, .1, 0))
						z.Event(Y.Remote, N.BoxSprayId, Enum.NormalId.Left, 6, tick, CoreGui * CFrame.new(-2, .1, 0))
					end
				end
			end
		end)
	end)
	OK("blind", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = h(CoreGui)
					if tick then
						for CoreGui = 1, 5, 1 do
							z.Event(Y.Remote, 14787385911, Enum.NormalId.Left, 55, tick, tick.CFrame * CFrame.new(0, 5 - 5 * (CoreGui - 1), 0))
							z.Event(Y.Remote, 14787385911, Enum.NormalId.Right, 55, tick, tick.CFrame * CFrame.new(0, 5 - 5 * (CoreGui - 1), 0))
							z.Event(Y.Remote, 14787385911, Enum.NormalId.Top, 55, tick, tick.CFrame * CFrame.new(0, 5 - 5 * (CoreGui - 1), 0))
							z.Event(Y.Remote, 14787385911, Enum.NormalId.Bottom, 55, tick, tick.CFrame * CFrame.new(0, 5 - 5 * (CoreGui - 1), 0))
							z.Event(Y.Remote, 14787385911, Enum.NormalId.Back, 55, tick, tick.CFrame * CFrame.new(0, 5 - 5 * (CoreGui - 1), 0))
							z.Event(Y.Remote, 14787385911, Enum.NormalId.Front, 55, tick, tick.CFrame * CFrame.new(0, 5 - 5 * (CoreGui - 1), 0))
						end
					end
				end
			end
		end)
	end)
	OK("slickback", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = CoreGui.Character:FindFirstChild("LeftLowerArm")
					local TweenService = CoreGui.Character:FindFirstChild("RightLowerArm")
					if tick and TweenService then
						z.Event(Y.Remote, 0, Enum.NormalId.Front, 10000, tick, tick.CFrame * CFrame.new(0, 0, -1))
						z.Event(Y.Remote, 0, Enum.NormalId.Front, 10000, TweenService, TweenService.CFrame * CFrame.new(0, 0, -1))
					end
				end
			end
		end)
	end)
	OK("reset", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = h(CoreGui)
					if tick then
						z.Event(Y.Remote, 0, Enum.NormalId.Right, 10, tick, CFrame.new(0, - math.huge, 0))
					end
				end
			end
		end)
	end)
	OK("hallow", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = h(CoreGui)
					if tick then
						for CoreGui = 1, 10, 1 do
							z.Event(Y.Remote, 17618294446, Enum.NormalId.Top, 2, tick, tick.CFrame * CFrame.new(0, 2.5 + CoreGui / 100, 0))
							z.Event(Y.Remote, 17618294446, Enum.NormalId.Bottom, 2, tick, tick.CFrame * CFrame.new(0, 2.5 + CoreGui / 100, 0))
						end
					end
				end
			end
		end)
	end)
	OK("glitch", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = h(CoreGui)
					if tick then
						for CoreGui = 1, 150, 1 do
							z.Event(Y.Remote, 0, Enum.NormalId.Right, 10, tick, tick.CFrame)
						end
					end
				end
			end
		end)
	end)
	OK("yeet", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = h(CoreGui)
					if tick then
						for CoreGui = 1, 5, 1 do
							z.Event(Y.Remote, 0, Enum.NormalId.Right, 999999, tick, CFrame.new(99999, 99999, 99999))
						end
					end
				end
			end
		end)
	end)
	OK("floorclip", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = CoreGui.Character:FindFirstChild("RighHand")
					if tick then
						z.Event(Y.Remote, 0, Enum.NormalId.Front, 2500, tick, CFrame.new(0, -25000, 0))
						z.Event(Y.Remote, 0, Enum.NormalId.Front, 2500, tick, CFrame.new(0, 25000, 0))
					end
				end
			end
		end)
	end)
	OK("pp", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = h(CoreGui)
					if tick then
						xK(Y, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, tick, tick.CFrame * CFrame.new(-1, -1, -1))
						xK(Y, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, tick, tick.CFrame * CFrame.new(1, -1, -1))
						xK(Y, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, tick, tick.CFrame * CFrame.new(0, -1, -1))
						xK(Y, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, tick, tick.CFrame * CFrame.new(0, -1, -2))
						xK(Y, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, tick, tick.CFrame * CFrame.new(0, -1, -3))
						xK(Y, 17621332813, tick, tick.CFrame * CFrame.new(0, -1, -4))
					end
				end
			end
		end)
	end)
	OK("backpp", true, function(tick)
		sK(function(Y)
			for tick, CoreGui in pairs(tick) do
				if CoreGui and CoreGui.Character then
					local tick = h(CoreGui)
					if tick then
						xK(Y, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, tick, tick.CFrame * CFrame.new(-1, -1, 4.5))
						xK(Y, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, tick, tick.CFrame * CFrame.new(1, -1, 4.5))
						xK(Y, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, tick, tick.CFrame * CFrame.new(0, -1, 4.5))
						xK(Y, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, tick, tick.CFrame * CFrame.new(0, -1, 3.5))
						xK(Y, N.PenisColor == "White" and 17621332813 or N.PenisColor == "Black" and 17621324485, tick, tick.CFrame * CFrame.new(0, -1, 2.5))
						xK(Y, 17621332813, tick, tick.CFrame * CFrame.new(0, -1, 1.5))
					end
				end
			end
		end)
	end)
	OK("blacklobby", false, function(tick)
		sK(function(tick)
			for Y, CoreGui in pairs(workspace.Lobby:GetDescendants()) do
				task.wait()
				if CoreGui:IsA("BasePart") or CoreGui:IsA("Part") then
					z.Event(tick.Remote, 14787385911, Enum.NormalId.Top, 9999, CoreGui, CoreGui.CFrame)
					z.Event(tick.Remote, 14787385911, Enum.NormalId.Front, 9999, CoreGui, CoreGui.CFrame)
					z.Event(tick.Remote, 14787385911, Enum.NormalId.Bottom, 9999, CoreGui, CoreGui.CFrame)
					z.Event(tick.Remote, 14787385911, Enum.NormalId.Right, 9999, CoreGui, CoreGui.CFrame)
					z.Event(tick.Remote, 14787385911, Enum.NormalId.Left, 9999, CoreGui, CoreGui.CFrame)
					z.Event(tick.Remote, 14787385911, Enum.NormalId.Back, 9999, CoreGui, CoreGui.CFrame)
				end
			end
		end)
	end)
	OK("stealgun", false, function(tick)
		local Y = V(ScriptContext.Sheriff)
		if Y and Y.Character then
			sK(function(tick)
				local CoreGui = h(Y)
				if CoreGui then
					local Y = 0
					z.Event(tick.Remote, 0, Enum.NormalId.Right, 10, CoreGui, CFrame.new(0, - math.huge, 0))
					repeat
						task.wait()
						Y = Y + 1
					until workspace:FindFirstChild("GunDrop") or Y >= 25
					task.spawn(function()
						if workspace:FindFirstChild("GunDrop") and not x:GetValue("Grabbing") then
							local tick = (h(LocalPlayer)).CFrame
							x:SetValue("Grabbing", true)
							x:MakeTask("Grab Gun", RunService.Heartbeat, function()
								if x:GetValue("Grabbing") then
									m(LocalPlayer, "CFrame", workspace.GunDrop.CFrame)
									LocalPlayer.Character.Humanoid.PlatformStand = false
								end
							end)
							repeat
								task.wait()
							until not workspace:FindFirstChild("GunDrop")
							x:RemoveTask("Grab Gun")
							m(LocalPlayer, "CFrame", tick)
							x:SetNil("Grabbing")
							LocalPlayer.Character.Humanoid.PlatformStand = false
							LocalPlayer.Character.Humanoid:ChangeState(1)
						end
					end)
				end
			end)
		end
	end)
	OK("breakgun", false, function(tick)
		local Y = V(ScriptContext.Sheriff)
		if Y and Y.Name ~= g then
			local tick = false
			for Y, CoreGui in pairs(Y.Backpack:GetChildren()) do
				if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
					tick = CoreGui
				end
			end
			if not tick then
				for Y, CoreGui in pairs(Y.Character:GetChildren()) do
					if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
						tick = CoreGui
					end
				end
			end
			if tick then
				local Y, CoreGui = pcall(function()
					z.Function(tick.KnifeServer.ShootGun, 0, CFrame.new(), "AH")
				end)
				if CoreGui and not Y then
					I("<font color=\"rgb(\048, \050\053\053, \048)\">Successfully</font> Breaked the gun from <font color=\"rgb(\048, \048, \050\053\053)\">Sheriff</font>!")
				end
			end
		end
	end)
	OK("kill", true, function(tick)
		if tick ~= nil then
			if Stats == "Murderer" and l(Player) then
				local Y = false
				for tick, CoreGui in pairs(LocalPlayer.Backpack:GetChildren()) do
					if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
						CoreGui.Parent = LocalPlayer.Character
						Y = CoreGui
					end
				end
				if not Y then
					for tick, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
						if CoreGui.Name == "Knife" and CoreGui:IsA("Tool") then
							Y = CoreGui
						end
					end
				end
				if Y then
					for tick, CoreGui in pairs(tick) do
						HK(CoreGui, Y)
					end
				end
			end
		end
	end)
	OK("shootmurderer", false, function(tick)
		local Y = V(ScriptContext.Murderer)
		if Y and (Y.Character and (l(Y) and not x:GetValue("Shooting Murderer"))) then
			local tick = false
			local CoreGui = false
			for Y, TweenService in pairs(LocalPlayer.Backpack:GetChildren()) do
				if TweenService.Name == "Gun" and TweenService:IsA("Tool") then
					TweenService.Parent = LocalPlayer.Character
					tick = TweenService
					CoreGui = true
				end
			end
			if not tick then
				for Y, CoreGui in pairs(LocalPlayer.Character:GetChildren()) do
					if CoreGui.Name == "Gun" and CoreGui:IsA("Tool") then
						tick = CoreGui
					end
				end
			end
			if tick then
				local TweenService = (h(LocalPlayer)).CFrame
				local UserInputService
				local VirtualInputManager
				x:SetValue("Shooting Murderer", true)
				VirtualInputManager = RunService.Heartbeat:Connect(function()
					m(LocalPlayer, "CFrame", (h(Y)).CFrame * CFrame.new(0, 0, 5))
				end)
				task.wait(.2)
				UserInputService = RunService.Heartbeat:Connect(function()
					z.Function(tick.KnifeServer.ShootGun, 0, ((h(Y)).CFrame + (Y.Character.Humanoid.MoveDirection * Y.Character.Humanoid.WalkSpeed) / 16).Position, "AH")
				end)
				task.wait()
				VirtualInputManager:Disconnect()
				UserInputService:Disconnect()
				x:SetNil("Shooting Murderer")
				m(LocalPlayer, "CFrame", TweenService)
				if CoreGui then
					tick.Parent = LocalPlayer.Backpack
				end
			end
		end
	end)
	OK("trap", true, function(tick)
		if tick ~= nil then
			if u("Trap") then
				for tick, Y in pairs(tick) do
					if Y and Y.Character then
						z.Function(ReplicatedStorage.TrapSystem.PlaceTrap, (h(Y)).CFrame)
					end
				end
			else
				B("Uh oh! you need Trap Perks for this!")
			end
		end
	end);
	(coroutine.wrap(function()
		for tick, Y in pairs(Players:GetPlayers()) do
			Y.CharacterAdded:Connect(function()
				task.spawn(function()
					local tick = false
					repeat
						task.wait()
						pcall(function()
							local CoreGui = Y.Character.UpperTorso
							if CoreGui then
								tick = true
							end
						end)
					until tick
					local CoreGui = Instance.new("BillboardGui")
					CoreGui.Name = "Target"
					CoreGui.Parent = Y.Character.UpperTorso
					local TweenService = Instance.new("ImageLabel")
					TweenService.Name = "Icon"
					TweenService.Parent = CoreGui
				end)
			end)
			pcall(function()
				task.spawn(function()
					local tick = false
					repeat
						task.wait()
						pcall(function()
							local CoreGui = Y.Character.UpperTorso
							if CoreGui then
								tick = true
							end
						end)
					until tick
					local CoreGui = Instance.new("BillboardGui")
					CoreGui.Name = "Target"
					CoreGui.Parent = Y.Character.UpperTorso
					local TweenService = Instance.new("ImageLabel")
					TweenService.Name = "Icon"
					TweenService.Parent = CoreGui
				end)
			end)
		end
		Players.PlayerAdded:Connect(function(tick)
			tick.CharacterAdded:Connect(function()
				task.spawn(function()
					local Y = false
					repeat
						task.wait()
						pcall(function()
							local CoreGui = tick.Character.UpperTorso
							if CoreGui then
								Y = true
							end
						end)
					until Y
					local CoreGui = Instance.new("BillboardGui")
					CoreGui.Name = "Target"
					CoreGui.Parent = tick.Character.UpperTorso
					local TweenService = Instance.new("ImageLabel")
					TweenService.Name = "Icon"
					TweenService.Parent = CoreGui
				end)
			end)
			pcall(function()
				task.spawn(function()
					local Y = false
					repeat
						task.wait()
						pcall(function()
							local CoreGui = tick.Character.UpperTorso
							if CoreGui then
								Y = true
							end
						end)
					until Y
					local CoreGui = Instance.new("BillboardGui")
					CoreGui.Name = "Target"
					CoreGui.Parent = tick.Character.UpperTorso
					local TweenService = Instance.new("ImageLabel")
					TweenService.Name = "Icon"
					TweenService.Parent = CoreGui
				end)
			end)
		end)
	end))()
	TextService.AllInOne = GK(game, "__namecall", function(Y, ...)
		local CoreGui = getnamecallmethod()
		if not checkcaller() then
			local TweenService = {
				...
			}
			if CoreGui == "InvokeServer" then
				if Y.Name == "ShootGun" and Y.Parent.Name == "KnifeServer" then
					if N.SheriffSilentAim then
						if f["Shooting Murderer"] then
							return
						else
							local tick = Players[ScriptContext.Murderer]
							local CoreGui = N.SharpShooter and tick.Character.PrimaryPart or tick.Character.HumanoidRootPart
							TweenService[1] = 0
							if N.SheriffSilentAimAccuracy == "Seismic" then
								local tick = CoreGui.AssemblyLinearVelocity
								if tick.Magnitude == 0 then
									TweenService[2] = CoreGui.Position
								else
									local Y = (tick.Unit * CoreGui.Velocity.Magnitude) / 16.5
									local UserInputService = Y.Y
									if UserInputService > 2.65 then
										UserInputService = 2.65
									elseif UserInputService < -2 then
										UserInputService = -2
									end
									TweenService[2] = CoreGui.Position + Vector3.new(Y.X, UserInputService, Y.TweenService / 1.25)
								end
							elseif N.SheriffSilentAimAccuracy == "Overflow" then
								local Y = CoreGui.AssemblyLinearVelocity
								if Y.Magnitude == 0 then
									TweenService[2] = CoreGui.Position
								else
									local UserInputService = (Y.Unit * CoreGui.Velocity.Magnitude) / 17 + tick.Character.Humanoid.MoveDirection
									local VirtualInputManager = UserInputService.Y
									if VirtualInputManager > 2.5 then
										VirtualInputManager = 2.5
									elseif VirtualInputManager < -2 then
										VirtualInputManager = -2
									end
									TweenService[2] = CoreGui.Position + Vector3.new(UserInputService.X, VirtualInputManager, UserInputService.TweenService)
								end
							elseif N.SheriffSilentAimAccuracy == "Dynamic" then
								TweenService[2] = CoreGui.Position + tick.Character.Humanoid.MoveDirection
							elseif N.SheriffSilentAimAccuracy == "Regular" then
								TweenService[2] = CoreGui.Position
							end
							return TextService.AllInOne(Y, unpack(TweenService))
						end
					end
				end
				return TextService.AllInOne(Y, ...)
			elseif CoreGui == "FireServer" then
				if Y.Name == "Throw" then
					if N.MurdererSilentAim then
						local tick = eK(N.MurdererSilentAimTargetChecking)
						if tick then
							local Y = tick.Character.HumanoidRootPart.AssemblyLinearVelocity / 3
							TweenService[1] = CFrame.new(tick.Character.HumanoidRootPart.Position + Vector3.new(Y.X, Y.Y / 1.5, Y.TweenService))
						end
						return TextService.AllInOne(Y, TweenService[1], TweenService[2])
					end
				elseif Y.Name == "Remote" then
					if Y.Parent.Name == "SprayPaint" then
						if N.InfiniteSpraySize then
							TweenService[3] = 9999
							return TextService.AllInOne(Y, TweenService[1], TweenService[2], TweenService[3], TweenService[4], TweenService[5])
						end
					elseif Y.Parent.Name == "FakeBomb" then
						if N.AutoPrankBombClutch then
							TweenService[1] = LocalPlayer.Character.Head.CFrame * CFrame.new(0, -4, -5)
							return TextService.AllInOne(Y, TweenService[1], TweenService[2])
						end
					end
				elseif Y == tick then
					if N.AlwaysAliveChat then
						TweenService[2] = "alive"
						return TextService.AllInOne(Y, TweenService[1], TweenService[2])
					end
				end
				return TextService.AllInOne(Y, ...)
			elseif CoreGui == "Kick" then
				if Y == LocalPlayer then
					if N.AntiKick then
						return
					end
				end
			end
		end
		return TextService.AllInOne(Y, ...)
	end)
	TextService.KickHook = hookfunction(LocalPlayer.Kick, newcclosure(function(...)
		if N.AntiKick then
			return
		else
			return TextService.KickHooks(...)
		end
	end))
	for tick, Y in pairs(getconnections(ReplicatedStorage.UpdatePlayerData.OnClientEvent)) do
		pcall(zK)
		Y.Function(PlayerMods)
	end
	if H then
		vK()
	end
end
local function qK()
	local tick = {
		Bandit = {
			Enemy = "Bandit [Lv. \053]",
			QuestName = "BanditQuest\049",
			EnemyName = "Bandit";
			LevelQuest = 1,
			CFramePos = CFrame.new(1059.37195, 15.4495068, 1550.4231, .939700544, 0, 0, 0, 1, 0, .341998369, 0, .939700544);
			QuestGiver = "Bandit Quest Giver",
			World = 1
		};
		Monkey = {
			Enemy = "Monkey [Lv. \049\052]";
			QuestName = "JungleQuest";
			EnemyName = "Monkey";
			LevelQuest = 1,
			CFramePos = CFrame.new(-1598, 35.5501175, 153.377838, 0, 0, 1, 0, 1, 0, -1, 0, 0);
			QuestGiver = "Adventurer",
			World = 1
		},
		Gorilla = {
			Enemy = "Gorilla [Lv. \050\048]",
			QuestName = "JungleQuest",
			EnemyName = "Gorilla",
			LevelQuest = 2,
			CFramePos = CFrame.new(-1598, 35.5501175, 153.377838, 0, 0, 1, 0, 1, 0, -1, 0, 0);
			QuestGiver = "Adventurer",
			World = 1
		};
		Pirate = {
			Enemy = "Pirate [Lv. \051\053]";
			QuestName = "BuggyQuest\049";
			EnemyName = "Pirate";
			LevelQuest = 1,
			CFramePos = CFrame.new(-1141, 4.10001802, 3831.5498, .965929627, 0, 0, 0, 1, 0, .258804798, 0, .965929627),
			QuestGiver = "Pirate Adventurer";
			World = 1
		};
		Brute = {
			Enemy = "Brute [Lv. \052\053]";
			QuestName = "BuggyQuest\049",
			EnemyName = "Brute",
			LevelQuest = 2,
			CFramePos = CFrame.new(-1141, 4.10001802, 3831.5498, .965929627, 0, 0, 0, 1, 0, .258804798, 0, .965929627);
			QuestGiver = "Pirate Adventurer";
			World = 1
		};
		Desert_Bandit = {
			Enemy = "Desert Bandit [Lv. \054\048]";
			QuestName = "DesertQuest",
			EnemyName = "Desert Bandit";
			LevelQuest = 1;
			CFramePos = CFrame.new(894.488647, 5.14000702, 4392.43359, .819155693, 0, 0, 0, 1, 0, .573571265, 0, .819155693);
			QuestGiver = "Desert Adventurer";
			World = 1
		};
		Desert_Officer = {
			Enemy = "Desert Officer [Lv. \055\048]";
			QuestName = "DesertQuest",
			EnemyName = "Desert Officer",
			LevelQuest = 2;
			CFramePos = CFrame.new(894.488647, 5.14000702, 4392.43359, .819155693, 0, 0, 0, 1, 0, .573571265, 0, .819155693),
			QuestGiver = "Desert Adventurer";
			World = 1
		};
		Snow_Bandit = {
			Enemy = "Snow Bandit [Lv. \057\048]",
			QuestName = "SnowQuest";
			EnemyName = "Snow Bandit",
			LevelQuest = 1,
			CFramePos = CFrame.new(1389.74451, 88.1519318, -1298, 0, 0, .939684391, 0, 1, 0, 0, 0, 0),
			QuestGiver = "Villager";
			World = 1
		},
		Snowman = {
			Enemy = "Snowman [Lv. \049\048\048]",
			QuestName = "SnowQuest",
			EnemyName = "Snowman",
			LevelQuest = 2,
			CFramePos = CFrame.new(1389.74451, 88.1519318, -1298, 0, 0, .939684391, 0, 1, 0, 0, 0, 0),
			QuestGiver = "Villager",
			World = 1
		};
		Chief_Petty_Officer = {
			Enemy = "Chief Petty Officer [Lv. \049\050\048]";
			QuestName = "MarineQuest\050",
			EnemyName = "Cheif Petty Officer";
			LevelQuest = 1,
			CFramePos = CFrame.new(-5039, 27.3500385, 4324.68018, 0, 0, -1, 0, 1, 0, 1, 0, 0),
			QuestGiver = "Marine";
			World = 1
		};
		Sky_Bandit = {
			Enemy = "Sky Bandit [Lv. \049\053\048]";
			QuestName = "SkyQuest";
			EnemyName = "Sky Bandit";
			LevelQuest = 1,
			CFramePos = CFrame.new(-4839, 716.368591, -2619, .866007268, 0, .500031412, 0, 1, 0, 0, 0, .866007268),
			QuestGiver = "Sky Adventurer";
			World = 1
		},
		Dark_Master = {
			Enemy = "Dark Master [Lv. \049\055\053]",
			QuestName = "SkyQuest";
			EnemyName = "Dark Master",
			LevelQuest = 2,
			CFramePos = CFrame.new(-4839, 716.368591, -2619, .866007268, 0, .500031412, 0, 1, 0, 0, 0, .866007268),
			QuestGiver = "Sky Adventurer",
			World = 1
		},
		Prisoner = {
			Enemy = "Prisoner [Lv. \049\057\048]",
			QuestName = "PrisonerQuest";
			EnemyName = "Prisoner";
			LevelQuest = 1;
			CFramePos = CFrame.new(5308.93115, 1.65517521, 475.120514, 0, 0, 0, 1.60817859e-09, 1, 0, .995993316, 0, 0);
			QuestGiver = "Jail Keeper",
			World = 1
		};
		Dangerous_Prisoner = {
			Enemy = "Dangerous Prisoner [Lv. \050\049\048]";
			QuestName = "PrisonerQuest",
			EnemyName = "Dangerous Prisoner";
			LevelQuest = 2,
			CFramePos = CFrame.new(5308.93115, 1.65517521, 475.120514, 0, 0, 0, 1.60817859e-09, 1, 0, .995993316, 0, 0);
			QuestGiver = "Jail Keeper";
			World = 1
		},
		Toga_Warrior = {
			Enemy = "Toga Warrior [Lv. \050\053\048]",
			QuestName = "ColosseumQuest";
			EnemyName = "Toga Warrior",
			LevelQuest = 1;
			CFramePos = CFrame.new(-1580, 6.35000277, -2986, 0, 0, 0, 0, 1, 0, .857167721, 0, 0),
			QuestGiver = "Colosseum Quest Giver",
			World = 1
		},
		Gladiator = {
			Enemy = "Gladiator [Lv. \050\055\053]",
			QuestName = "ColosseumQuest",
			EnemyName = "Gladiator";
			LevelQuest = 2,
			CFramePos = CFrame.new(-1580, 6.35000277, -2986, 0, 0, 0, 0, 1, 0, .857167721, 0, 0);
			QuestGiver = "Colosseum Quest Giver",
			World = 1
		},
		Military_Soldier = {
			Enemy = "Military Soldier [Lv. \051\048\048]",
			QuestName = "MagmaQuest";
			EnemyName = "Military Soldier";
			LevelQuest = 1,
			CFramePos = CFrame.new(-5313, 10.9500084, 8515.29395, 0, 0, .866048813, 0, 1, 0, 0, 0, 0),
			QuestGiver = "The Mayor",
			World = 1
		};
		Military_Spy = {
			Enemy = "Military Spy [Lv. \051\050\053]";
			QuestName = "MagmaQuest";
			EnemyName = "Military Spy",
			LevelQuest = 2;
			CFramePos = CFrame.new(-5313, 10.9500084, 8515.29395, 0, 0, .866048813, 0, 1, 0, 0, 0, 0),
			QuestGiver = "The Mayor";
			World = 1
		};
		Fishman_Warrior = {
			Enemy = "Fishman Warrior [Lv. \051\055\053]",
			QuestName = "FishmanQuest";
			EnemyName = "Fishman Warrior";
			LevelQuest = 1;
			CFramePos = CFrame.new(61122.65234375, 18.497442245483, 1569.3997802734),
			Entrance = Vector3.new(61163.8515625, 11.6796875, 1819.7841796875),
			QuestGiver = "King Neptune",
			World = 1
		},
		Fishman_Commando = {
			Enemy = "Fishman Commando [Lv. \052\048\048]",
			QuestName = "FishmanQuest";
			EnemyName = "Fishman Commando",
			LevelQuest = 2;
			CFramePos = CFrame.new(61122.65234375, 18.497442245483, 1569.3997802734);
			Entrance = Vector3.new(61163.8515625, 11.6796875, 1819.7841796875),
			QuestGiver = "King Neptune";
			World = 1
		};
		God_Guard = {
			Enemy = "God\'s Guard [Lv. \052\053\048]";
			QuestName = "SkyExp\049Quest",
			EnemyName = "God\'s Guard",
			LevelQuest = 1;
			CFramePos = CFrame.new(-4721, 843.874695, -1949, .996191859, 0, 0, 0, 1, 0, .0871884301, 0, .996191859),
			Entrance = Vector3.new(-4607, 872.54248, -1667);
			QuestGiver = "Mole",
			World = 1
		};
		Shanda = {
			Enemy = "Shanda [Lv. \052\055\053]",
			QuestName = "SkyExp\049Quest",
			EnemyName = "Shanda",
			LevelQuest = 2;
			CFramePos = CFrame.new(-7894, 5547.1416015625, -380);
			Entrance = Vector3.new(-7894, 5547.1416015625, -380);
			QuestGiver = "Mole";
			World = 1
		};
		Royal_Squad = {
			Enemy = "Royal Squad [Lv. \053\050\053]";
			QuestName = "SkyExp\050Quest",
			EnemyName = "Royal Squad",
			LevelQuest = 1,
			CFramePos = CFrame.new(-7906, 5634.6626, -1411, 0, 0, -1, 0, 1, 0, 1, 0, 0),
			Entrance = Vector3.new(-7894, 5547.1416015625, -380);
			QuestGiver = "Gan Fall Adventurer",
			World = 1
		};
		Royal_Soldier = {
			Enemy = "Royal Soldier [Lv. \053\053\048]",
			QuestName = "SkyExp\050Quest";
			EnemyName = "Royal Soldier",
			LevelQuest = 2,
			CFramePos = CFrame.new(-7906, 5634.6626, -1411, 0, 0, -1, 0, 1, 0, 1, 0, 0);
			Entrance = Vector3.new(-7894, 5547.1416015625, -380),
			QuestGiver = "Gan Fall Adventurer",
			World = 1
		},
		Galley_Pirate = {
			Enemy = "Galley Pirate [Lv. \054\050\053]",
			QuestName = "FountainQuest",
			EnemyName = "Galley Pirate";
			LevelQuest = 1,
			CFramePos = CFrame.new(5259.81982, 37.3500175, 4050.0293, .087131381, 0, .996196866, 0, 1, 0, 0, 0, .087131381);
			QuestGiver = "Freezeburg Quest Giver";
			World = 1
		},
		Galley_Captain = {
			Enemy = "Galley Captain [Lv. \054\053\048]";
			QuestName = "FountainQuest",
			EnemyName = "Galley Captain";
			LevelQuest = 2,
			CFramePos = CFrame.new(5259.81982, 37.3500175, 4050.0293, .087131381, 0, .996196866, 0, 1, 0, 0, 0, .087131381),
			QuestGiver = "Freezeburg Quest Giver";
			World = 1
		},
		Raider = {
			Enemy = "Raider [Lv. \055\048\048]";
			QuestName = "Area\049Quest";
			EnemyName = "Raider",
			LevelQuest = 1;
			CFramePos = CFrame.new(-429, 71.7699966, 1836.18188, 0, 0, 0, 0, 1, 0, .974368095, 0, 0);
			QuestGiver = "Area \049 Quest Giver";
			World = 2
		},
		Mercenary = {
			Enemy = "Mercenary [Lv. \055\050\053]";
			QuestName = "Area\049Quest",
			EnemyName = "Mercenary",
			LevelQuest = 2;
			CFramePos = CFrame.new(-429, 71.7699966, 1836.18188, 0, 0, 0, 0, 1, 0, .974368095, 0, 0);
			QuestGiver = "Area \050 Quest Giver",
			World = 2
		};
		Swan_Pirate = {
			Enemy = "Swan Pirate [Lv. \055\055\053]";
			QuestName = "Area\050Quest",
			EnemyName = "Spawn Pirate",
			LevelQuest = 1,
			CFramePos = CFrame.new(638.43811, 71.769989, 918.282898, .139203906, 0, .99026376, 0, 1, 0, 0, 0, .139203906),
			QuestGiver = "Area \050 Quest Giver";
			World = 2
		};
		Factory_Staff = {
			Enemy = "Factory Staff [Lv. \056\048\048]",
			QuestName = "Area\050Quest";
			EnemyName = "Factory Staff",
			LevelQuest = 2,
			CFramePos = CFrame.new(638.43811, 71.769989, 918.282898, .139203906, 0, .99026376, 0, 1, 0, 0, 0, .139203906),
			QuestGiver = "Area \050 Quest Giver";
			World = 2
		};
		Marine_Lieutenant = {
			Enemy = "Marine Lieutenant [Lv. \056\055\053]";
			QuestName = "MarineQuest\051";
			EnemyName = "Marine Lieutenant";
			LevelQuest = 1,
			CFramePos = CFrame.new(-2440, 71.7140732, -3216, .866007268, 0, .500031412, 0, 1, 0, 0, 0, .866007268),
			QuestGiver = "Marine Quest Giver";
			World = 2
		};
		Marine_Captain = {
			Enemy = "Marine Captain [Lv. \057\048\048]",
			QuestName = "MarineQuest\051",
			EnemyName = "Marine Captain";
			LevelQuest = 2,
			CFramePos = CFrame.new(-2440, 71.7140732, -3216, .866007268, 0, .500031412, 0, 1, 0, 0, 0, .866007268),
			QuestGiver = "Marine Quest Giver";
			World = 2
		};
		Zombie = {
			Enemy = "Zombie [Lv. \057\053\048]";
			QuestName = "ZombieQuest",
			EnemyName = "Zombie",
			LevelQuest = 1,
			CFramePos = CFrame.new(-2440, 71.7140732, -3216, .866007268, 0, .500031412, 0, 1, 0, 0, 0, .866007268);
			QuestGiver = "Graveyard Quest Giver",
			World = 2
		};
		Vampire = {
			Enemy = "Vampire [Lv. \057\055\053]";
			QuestName = "ZombieQuest",
			EnemyName = "Vampire",
			LevelQuest = 2;
			CFramePos = CFrame.new(-2440, 71.7140732, -3216, .866007268, 0, .500031412, 0, 1, 0, 0, 0, .866007268),
			QuestGiver = "Graveyard Quest Giver";
			World = 2
		},
		Snow_Trooper = {
			Enemy = "Snow Trooper [Lv. \049\048\048\048]";
			QuestName = "SnowMountainQuest",
			EnemyName = "Snow Trooper";
			LevelQuest = 1;
			CFramePos = CFrame.new(609.858826, 400.119904, -5372, 0, 0, .92718488, 0, 1, 0, 0, 0, 0);
			QuestGiver = "Snow Quest Giver";
			World = 2
		};
		Winter_Warrior = {
			Enemy = "Winter Warrior [Lv. \049\048\053\048]";
			QuestName = "SnowMountainQuest";
			EnemyName = "Winter Warrior";
			LevelQuest = 2,
			CFramePos = CFrame.new(609.858826, 400.119904, -5372, 0, 0, .92718488, 0, 1, 0, 0, 0, 0),
			QuestGiver = "Snow Quest Giver",
			World = 2
		},
		Lab_Subordinate = {
			Enemy = "Lab Subordinate [Lv. \049\049\048\048]",
			QuestName = "IceSideQuest",
			EnemyName = "Lab Subordinate";
			LevelQuest = 1,
			CFramePos = CFrame.new(-6064, 15.2422857, -4902, .453972578, 0, 0, 0, 1, 0, .891015649, 0, .453972578);
			QuestGiver = "Ice Quest Giver";
			World = 2
		},
		Horned_Warrior = {
			Enemy = "Horned Warrior [Lv. \049\049\050\053]",
			QuestName = "IceSideQuest";
			EnemyName = "Horned Warrior";
			LevelQuest = 2,
			CFramePos = CFrame.new(-6064, 15.2422857, -4902, .453972578, 0, 0, 0, 1, 0, .891015649, 0, .453972578),
			QuestGiver = "Ice Quest Giver",
			World = 2
		};
		Magma_Ninja = {
			Enemy = "Magma Ninja [Lv. \049\049\055\053]",
			QuestName = "FireSideQuest";
			EnemyName = "Magma Ninja";
			LevelQuest = 1,
			CFramePos = CFrame.new(-5428, 15.0622921, -5299, 0, 0, .469463557, 0, 1, 0, 0, 0, 0),
			QuestGiver = "Fire Quest Giver";
			World = 2
		};
		Lava_Pirate = {
			Enemy = "Lava Pirate [Lv. \049\050\048\048]",
			QuestName = "FireSideQuest",
			EnemyName = "Lava Pirate",
			LevelQuest = 2,
			CFramePos = CFrame.new(-5428, 15.0622921, -5299, 0, 0, .469463557, 0, 1, 0, 0, 0, 0);
			QuestGiver = "Fire Quest Giver";
			World = 2
		},
		Ship_Deckhand = {
			Enemy = "Ship Deckhand [Lv. \049\050\053\048]";
			QuestName = "ShipQuest\049",
			EnemyName = "Ship Deckhand",
			LevelQuest = 1;
			CFramePos = CFrame.new(1037.80127, 125.092171, 32911.6016);
			Entrance = Vector3.new(923.21252441406, 126.9760055542, 32852.83203125);
			QuestGiver = "Rear Crew Quest Giver";
			World = 2
		},
		Ship_Engineer = {
			Enemy = "Ship Engineer [Lv. \049\050\055\053]";
			QuestName = "ShipQuest\049",
			EnemyName = "Ship Engineer";
			LevelQuest = 2;
			CFramePos = CFrame.new(1037.80127, 125.092171, 32911.6016),
			Entrance = Vector3.new(923.21252441406, 126.9760055542, 32852.83203125);
			QuestGiver = "Rear Crew Quest Giver",
			World = 2
		};
		Ship_Steward = {
			Enemy = "Ship Steward [Lv. \049\051\048\048]";
			QuestName = "ShipQuest\050",
			EnemyName = "Ship Steward";
			LevelQuest = 1,
			CFramePos = CFrame.new(968.80957, 125.092171, 33244.125);
			Entrance = Vector3.new(923.21252441406, 126.9760055542, 32852.83203125),
			QuestGiver = "Front Crew Quest Giver";
			World = 2
		};
		Ship_Officer = {
			Enemy = "Ship Officer [Lv. \049\051\050\053]",
			QuestName = "ShipQuest\050",
			EnemyName = "Ship Officer",
			LevelQuest = 2;
			CFramePos = CFrame.new(968.80957, 125.092171, 33244.125),
			Entrance = Vector3.new(923.21252441406, 126.9760055542, 32852.83203125);
			QuestGiver = "Front Crew Quest Giver";
			World = 2
		};
		Arctic_Warrior = {
			Enemy = "Arctic Warrior [Lv. \049\051\053\048]";
			QuestName = "FrostQuest";
			EnemyName = "Arctic Warrior";
			LevelQuest = 1;
			CFramePos = CFrame.new(5667.6582, 26.7997818, -6486, 0, 0, 0, 0, 1, 0, .358349502, 0, 0),
			QuestGiver = "Frost Quest Giver";
			World = 2
		},
		Snow_Lurker = {
			Enemy = "Snow Lurker [Lv. \049\051\055\053]";
			QuestName = "FrostQuest";
			EnemyName = "Snow Lurker",
			LevelQuest = 2;
			CFramePos = CFrame.new(5667.6582, 26.7997818, -6486, 0, 0, 0, 0, 1, 0, .358349502, 0, 0),
			QuestGiver = "Frost Quest Giver",
			World = 2
		};
		Sea_Soldier = {
			Enemy = "Sea Soldier [Lv. \049\052\050\053]";
			QuestName = "ForgottenQuest",
			EnemyName = "Sea Soldier",
			LevelQuest = 1,
			CFramePos = CFrame.new(-3054, 235.544281, -10142, .990270376, 0, 0, 0, 1, 0, .13915664, 0, .990270376),
			QuestGiver = "Forgotten Quest Giver";
			World = 2
		};
		Water_Fighter = {
			Enemy = "Water Fighter [Lv. \049\052\053\048]",
			QuestName = "ForgottenQuest",
			EnemyName = "Water Fighter",
			LevelQuest = 2;
			CFramePos = CFrame.new(-3054, 235.544281, -10142, .990270376, 0, 0, 0, 1, 0, .13915664, 0, .990270376),
			QuestGiver = "Forgotten Quest Giver",
			World = 2
		},
		Pirate_Millionaire = {
			Enemy = "Pirate Millionaire [Lv. \049\053\048\048]";
			QuestName = "PiratePortQuest";
			EnemyName = "Pirate Millionaire",
			LevelQuest = 1;
			CFramePos = CFrame.new(-290, 42.9034653, 5581.58984, .965929627, 0, 0, 0, 1, 0, .258804798, 0, .965929627);
			QuestGiver = "";
			World = 3
		};
		Pistol_Billonaire = {
			Enemy = "Pistol Billionaire [Lv. \049\053\050\053]";
			QuestName = "PiratePortQuest",
			EnemyName = "Pistol Billionaire",
			LevelQuest = 2;
			CFramePos = CFrame.new(-290, 42.9034653, 5581.58984, .965929627, 0, 0, 0, 1, 0, .258804798, 0, .965929627);
			QuestGiver = "",
			World = 3
		};
		Dragon_Crew_Warrior = {
			Enemy = "Dragon Crew Warrior [Lv. \049\053\055\053]";
			QuestName = "AmazonQuest",
			EnemyName = "Dragon Crew Warrior";
			LevelQuest = 1;
			CFramePos = CFrame.new(5832.83594, 51.6806107, -1101, .898790359, 0, 0, 0, 1, 0, .438378751, 0, .898790359);
			QuestGiver = "";
			Wolrd = 3
		};
		Dragon_Crew_Archer = {
			Enemy = "Dragon Crew Archer [Lv. \049\054\048\048]";
			QuestName = "AmazonQuest";
			EnemyName = "Dragon Crew Archer";
			LevelQuest = 2,
			CFramePos = CFrame.new(5833.1147460938, 51.60498046875, -1103);
			QuestGiver = "";
			World = 3
		};
		Female_Islander = {
			Enemy = "Female Islander [Lv. \049\054\050\053]";
			QuestName = "AmazonQuest\050",
			EnemyName = "Female Islander",
			LevelQuest = 1,
			CFramePos = CFrame.new(5446.8793945313, 601.62945556641, 749.45672607422),
			QuestGiver = "",
			World = 3
		};
		Giant_Islander = {
			Enemy = "Giant Islander [Lv. \049\054\053\048]";
			QuestName = "AmazonQuest\050";
			EnemyName = "Giant Islander",
			LevelQuest = 2,
			CFramePos = CFrame.new(5446.8793945313, 601.62945556641, 749.45672607422);
			QuestGiver = "",
			Wolrd = 3
		};
		Marine_Commodore = {
			Enemy = "Marine Commodore [Lv. \049\055\048\048]";
			QuestName = "MarineTreeIsland",
			EnemyName = "Marine Commodore",
			LevelQuest = 1;
			CFramePos = CFrame.new(2180.54126, 27.8156815, -6741, 0, 0, .258804798, 0, 1, 0, 0, 0, 0);
			QuestGiver = "",
			World = 3
		};
		Marine_Rear_Admiral = {
			Enemy = "Marine Rear Admiral [Lv. \049\055\050\053]";
			QuestName = "MarineTreeIsland";
			EnemyName = "Marine Rear Admiral";
			LevelQuest = 2;
			CFramePos = CFrame.new(2180.54126, 27.8156815, -6741, 0, 0, .258804798, 0, 1, 0, 0, 0, 0);
			QuestGiver = "";
			World = 3
		},
		Fishman_Raider = {
			Enemy = "Fishman Raider [Lv. \049\055\055\053]",
			QuestName = "DeepForestIsland\051",
			EnemyName = "Fishman Raider";
			LevelQuest = 1,
			CFramePos = CFrame.new(-10581, 330.872955, -8761, 0, 0, .469463557, 0, 1, 0, 0, 0, 0);
			QuestGiver = "",
			World = 3
		};
		Fishman_Captain = {
			Enemy = "Fishman Captain [Lv. \049\056\048\048]";
			QuestName = "DeepForestIsland\051",
			EnemyName = "Fishman Captain";
			LevelQuest = 2;
			CFramePos = CFrame.new(-10581, 330.872955, -8761, 0, 0, .469463557, 0, 1, 0, 0, 0, 0);
			QuestGiver = "",
			World = 3
		},
		Forest_Pirate = {
			Enemy = "Forest Pirate [Lv. \049\056\050\053]";
			QuestName = "DeepForestIsland";
			EnemyName = "Forest Pirate";
			LevelQuest = 1,
			CFramePos = CFrame.new(-13234, 331.488495, -7625, .707134247, 0, 0, 0, 1, 0, .707079291, 0, .707134247);
			QuestGiver = "";
			World = 3
		};
		Mythological_Pirate = {
			Enemy = "Mythological Pirate [Lv. \049\056\053\048]",
			QuestName = "DeepForestIsland";
			EnemyName = "Mythological Pirate",
			LevelQuest = 2,
			CFramePos = CFrame.new(-13234, 331.488495, -7625, .707134247, 0, 0, 0, 1, 0, .707079291, 0, .707134247),
			QuestGiver = "",
			World = 3
		},
		Jungle_Pirate = {
			Enemy = "Jungle Pirate [Lv. \049\057\048\048]";
			QuestName = "DeepForestIsland\050";
			EnemyName = "Jungle Pirate",
			LevelQuest = 1;
			CFramePos = CFrame.new(-12680, 389.971039, -9902, 0, 0, .996196866, 0, 1, 0, 0, 0, 0),
			QuestGiver = "";
			World = 3
		},
		Musketeer_Pirate = {
			Enemy = "Musketeer Pirate [Lv. \049\057\050\053]",
			QuestName = "DeepForestIsland\050",
			EnemyName = "Musketeer Pirate";
			LevelQuest = 2;
			CFramePos = CFrame.new(-12680, 389.971039, -9902, 0, 0, .996196866, 0, 1, 0, 0, 0, 0),
			QuestGiver = "",
			World = 3
		};
		Reborn_Skeleton = {
			Enemy = "Reborn Skeleton [Lv. \049\057\055\053]",
			QuestName = "HauntedQuest\049";
			EnemyName = "Reborn Skeleton",
			LevelQuest = 1;
			CFramePos = CFrame.new(-9479, 141.215088, 5566.09277, 0, 0, 1, 0, 1, 0, -1, 0, 0);
			QuestGiver = "",
			World = 3
		};
		Living_Zombie = {
			Enemy = "Living Zombie [Lv. \050\048\048\048]";
			QuestName = "HauntedQuest\049";
			EnemyName = "Living Zombie",
			LevelQuest = 2;
			CFramePos = CFrame.new(-9479, 141.215088, 5566.09277, 0, 0, 1, 0, 1, 0, -1, 0, 0),
			QuestGiver = "",
			World = 3
		};
		Demonic_Soul = {
			Enemy = "Demonic Soul [Lv. \050\048\050\053]",
			QuestName = "HauntedQuest\050",
			EnemyName = "Demonic Soul";
			LevelQuest = 1,
			CFramePos = CFrame.new(-9479, 141.215088, 5566.09277, 0, 0, 1, 0, 1, 0, -1, 0, 0),
			QuestGiver = "",
			World = 3
		},
		Posessed_Mummy = {
			Enemy = "Posessed Mummy [Lv. \050\048\053\048]",
			QuestName = "HauntedQuest\050",
			EnemyName = "Posessed Mummy";
			LevelQuest = 2;
			CFramePos = CFrame.new(-9516, 172.017181, 6078.46533, 0, 0, -1, 0, 1, 0, 1, 0, 0),
			QuestGiver = "";
			World = 3
		},
		Peanut_Scout = {
			Enemy = "Peanut Scout [Lv. \050\048\055\053]";
			QuestName = "NutsIslandQuest";
			EnemyName = "Peanut Scout",
			LevelQuest = 1,
			CFramePos = CFrame.new(-2104, 38.104167938232, -10194, 0, 0, -1, 0, 1, 0, 1, 0, 0);
			QuestGiver = "";
			World = 3
		},
		Peanut_President = {
			Enemy = "Peanut President [Lv. \050\049\048\048]";
			QuestName = "NutsIslandQuest",
			EnemyName = "Peanut President",
			LevelQuest = 2,
			CFramePos = CFrame.new(-2104, 38.104167938232, -10194, 0, 0, -1, 0, 1, 0, 1, 0, 0);
			QuestGiver = "";
			World = 3
		},
		Ice_Cream_Chef = {
			Enemy = "Ice Cream Chef [Lv. \050\049\050\053]",
			QuestName = "IceCreamIslandQuest",
			EnemyName = "Ice Cream Chef",
			LevelQuest = 1,
			CFramePos = CFrame.new(-819, 65.845329284668, -10965),
			QuestGiver = "";
			World = 3
		};
		Ice_Cream_Commander = {
			Enemy = "Ice Cream Commander [Lv. \050\049\053\048]";
			QuestName = "IceCreamIslandQuest";
			EnemyName = "Ice Cream Commander";
			LevelQuest = 2,
			CFramePos = CFrame.new(-819, 65.845329284668, -10965),
			QuestGiver = "",
			World = 3
		};
		Cookie_Crafter = {
			Enemy = "Cookie Crafter [Lv. \050\050\048\048]";
			QuestName = "CakeQuest\049",
			EnemyName = "Cookie Crafter",
			LevelQuest = 1;
			CFramePos = CFrame.new(-2022, 36.9275894, -12030, 0, 0, 0, 0, 1, 0, .275594592, 0, 0),
			QuestGiver = "",
			World = 3
		};
		Cake_Guard = {
			Enemy = "Cake Guard [Lv. \050\050\050\053]";
			QuestName = "CakeQuest\049";
			EnemyName = "Cake Guard";
			LevelQuest = 2,
			CFramePos = CFrame.new(-2022, 36.9275894, -12030, 0, 0, 0, 0, 1, 0, .275594592, 0, 0);
			QuestGiver = "",
			World = 3
		},
		Baking_Staff = {
			Enemy = "Baking Staff [Lv. \050\050\053\048]",
			QuestName = "CakeQuest\050";
			EnemyName = "Baking Staff",
			LevelQuest = 1,
			CFramePos = CFrame.new(-1928, 37.7296638, -12840, .951068401, 0, 0, 0, 1, 0, .308980465, 0, .951068401),
			QuestGiver = "";
			World = 3
		};
		Head_Baker = {
			Enemy = "Head Baker [Lv. \050\050\055\053]";
			QuestName = "CakeQuest\050",
			EnemyName = "Head Baker",
			LevelQuest = 2;
			CFramePos = CFrame.new(-1928, 37.7296638, -12840, .951068401, 0, 0, 0, 1, 0, .308980465, 0, .951068401);
			QuestGiver = "",
			World = 3
		};
		Cocoa_Warrior = {
			Enemy = "Cocoa Warrior [Lv. \050\051\048\048]",
			QuestName = "ChocQuest\049",
			EnemyName = "Cocoa Warrior",
			LevelQuest = 1,
			CFramePos = CFrame.new(231.75, 23.900302886963, -12200);
			QuestGiver = " ",
			World = 3
		},
		Chocolate_Bar_Battler = {
			Enemy = "Chocolate Bar Battler [Lv. \050\051\050\053]",
			QuestName = "ChocQuest\049";
			EnemyName = "Chocolate Bar Battler";
			LevelQuest = 2;
			CFramePos = CFrame.new(231.75, 23.900302886963, -12200);
			QuestGiver = " ";
			World = 3
		};
		Sweet_Thief = {
			Enemy = "Sweet Thief [Lv. \050\051\053\048]",
			QuestName = "ChocQuest\050",
			EnemyName = "Sweet Thief",
			LevelQuest = 1;
			CFramePos = CFrame.new(151.1982421875, 23.890714645386, -12774),
			QuestGiver = " ";
			World = 3
		};
		Candy_Rebel = {
			Enemy = "Candy Rebel [Lv. \050\051\055\053]",
			QuestName = "ChocQuest\050";
			EnemyName = "Candy Rebel";
			LevelQuest = 2;
			CFramePos = CFrame.new(151.1982421875, 23.890714645386, -12774);
			QuestGiver = " ";
			World = 3
		},
		Candy_Pirate = {
			Enemy = "Candy Pirate [Lv. \050\052\048\048]";
			QuestName = "CandyQuest\049",
			EnemyName = "Candy Pirate",
			LevelQuest = 1;
			CFramePos = CFrame.new(-1149, 13.575903892517, -14445),
			QuestGiver = " ",
			World = 3
		};
		Snow_Demon = {
			Enemy = "Snow Demon [Lv. \050\052\050\053]",
			QuestName = "CandyQuest\049";
			EnemyName = "Snow Demon",
			LevelQuest = 2;
			CFramePos = CFrame.new(-1149, 13.575903892517, -14445),
			QuestGiver = " ",
			World = 3
		}
	}
	local Y = {
		Bandit = {
			Enemy = "Bandit",
			LowestLevel = 0,
			MaxLevel = 14
		};
		Monkey = {
			Enemy = "Monkey";
			LowestLevel = 14,
			MaxLevel = 20
		};
		Gorilla = {
			Enemy = "Gorilla";
			LowestLevel = 20,
			MaxLevel = 35
		},
		Pirate = {
			Enemy = "Pirate",
			LowestLevel = 35;
			MaxLevel = 45
		};
		Brute = {
			Enemy = "Brute";
			LowestLevel = 45;
			MaxLevel = 60
		};
		Desert_Bandit = {
			Enemy = "Desert Bandit",
			LowestLevel = 60;
			MaxLevel = 70
		},
		Desert_Officer = {
			Enemy = "Desert Officer",
			LowestLevel = 70,
			MaxLevel = 90
		},
		Snow_Bandit = {
			Enemy = "Snow Bandit";
			LowestLevel = 90;
			MaxLevel = 100
		},
		Snowman = {
			Enemy = "Snowman",
			LowestLevel = 100;
			MaxLevel = 120
		};
		Chief_Petty_Officer = {
			Enemy = "Chief Petty Officer",
			LowestLevel = 120,
			MaxLevel = 150
		};
		Sky_Bandit = {
			Enemy = "Sky Bandit";
			LowestLevel = 150,
			MaxLevel = 175
		};
		Dark_Master = {
			Enemy = "Dark Master";
			LowestLevel = 175;
			MaxLevel = 190
		},
		Prisoner = {
			Enemy = "Prisoner";
			LowestLevel = 190;
			MaxLevel = 210
		};
		Dangerous_Prisoner = {
			Enemy = "Dangerous Prisoner",
			LowestLevel = 210;
			MaxLevel = 250
		};
		Toga_Warrior = {
			Enemy = "Toga Warrior",
			LowestLevel = 250,
			MaxLevel = 275
		};
		Gladiator = {
			Enemy = "Gladiator";
			LowestLevel = 275,
			MaxLevel = 300
		};
		Military_Soldier = {
			Enemy = "Military Soldier",
			LowestLevel = 300;
			MaxLevel = 325
		};
		Military_Spy = {
			Enemy = "Military Spy";
			LowestLevel = 325;
			MaxLevel = 375
		},
		Fishman_Warror = {
			Enemy = "Fishman Warrior";
			LowestLevel = 375,
			MaxLevel = 400
		};
		Fishman_Commando = {
			Enemy = "Fishman Commando";
			LowestLevel = 400;
			MaxLevel = 450
		},
		God_Guard = {
			Enemy = "God\'s Guard",
			LowestLevel = 450;
			MaxLevel = 475
		},
		Shanda = {
			Enemy = "Shanda";
			LowestLevel = 475,
			MaxLevel = 525
		},
		Royal_Squad = {
			Enemy = "Royal Squad",
			LowestLevel = 525;
			MaxLevel = 550
		};
		Royal_Soldier = {
			Enemy = "Royal Soldier",
			LowestLevel = 550;
			MaxLevel = 625
		},
		Gallery_Pirate = {
			Enemy = "Gallery Pirate",
			LowestLevel = 625;
			MaxLevel = 700
		};
		Raider = {
			Enemy = "Raider";
			LowestLevel = 700,
			MaxLevel = 725
		};
		Mercenary = {
			Enemy = "Mercenary",
			LowestLevel = 725;
			MaxLevel = 775
		},
		Swan_Pirate = {
			Enemy = "Swan Pirate",
			LowestLevel = 775;
			MaxLevel = 800
		};
		Factory_Staff = {
			Enemy = "Factory Staff";
			LowestLevel = 800;
			MaxLevel = 875
		},
		Marine_Lieutenant = {
			Enemy = "Marine Lieutenant";
			LowestLevel = 875;
			MaxLevel = 900
		};
		Marine_Captain = {
			Enemy = "Marine Captain",
			LowestLevel = 900,
			MaxLevel = 950
		};
		Zombie = {
			Enemy = "Zombie",
			LowestLevel = 950;
			MaxLevel = 975
		},
		Vampire = {
			Enemy = "Vampire";
			LowestLevel = 975;
			MaxLevel = 1000
		};
		Snow_Trooper = {
			Enemy = "Snow Trooper",
			LowestLevel = 1000,
			MaxLevel = 1050
		};
		Winter_Warrior = {
			Enemy = "Winter Warrior";
			LowestLevel = 1050,
			MaxLevel = 1100
		},
		Lab_Subordinate = {
			Enemy = "Lab Subordinate";
			LowestLevel = 1100;
			MaxLevel = 1125
		};
		Horned_Warrior = {
			Enemy = "Horned Warrior";
			LowestLevel = 1125,
			MaxLevel = 1175
		},
		Magma_Ninja = {
			Enemy = "Magma Ninja";
			LowestLevel = 1175;
			MaxLevel = 1200
		},
		Lava_Pirate = {
			Enemy = "Lava Pirate",
			LowestLevel = 1200;
			MaxLevel = 1250
		};
		Ship_Deckhand = {
			Enemy = "Ship Deckhand";
			LowestLevel = 1250,
			MaxLevel = 1275
		};
		Ship_Engineer = {
			Enemy = "Ship Engineer";
			LowestLevel = 1275,
			MaxLevel = 1300
		},
		Ship_Steward = {
			Enemy = "Ship Steward",
			LowestLevel = 1300,
			MaxLevel = 1325
		},
		Ship_Officer = {
			Enemy = "Ship Officer";
			LowestLevel = 1325;
			MaxLevel = 1375
		};
		Arctic_Warrior = {
			Enemy = "Arctic Warrior";
			LowestLevel = 1375,
			MaxLevel = 1425
		},
		Snow_Lurker = {
			Enemy = "Snow Lurker";
			LowestLevel = 1375,
			MaxLevel = 1425
		};
		Sea_Soldier = {
			Enemy = "Sea Soldier";
			LowestLevel = 1425;
			MaxLevel = 1450
		},
		Water_Fighter = {
			Enemy = "Water Fighter",
			LowestLevel = 1450,
			MaxLevel = 1500
		},
		Pirate_Millionaire = {
			Enemy = "Pirate Millionaire",
			LowestLevel = 1500;
			MaxLevel = 1525
		},
		Pistol_Billonaire = {
			Enemy = "Pistol Billionaire";
			LowestLevel = 1525;
			MaxLevel = 1575
		},
		Dragon_Crew_Warrior = {
			Enemy = "Dragon Crew Warrior",
			LowestLevel = 1575;
			MaxLevel = 1600
		};
		Dragon_Crew_Archer = {
			Enemy = "Dragon Crew Archer",
			LowestLevel = 1600,
			MaxLevel = 1625
		},
		Female_Islander = {
			Enemy = "Female Islander";
			LowestLevel = 1625,
			MaxLevel = 1650
		},
		Giant_Islander = {
			Enemy = "Giant Islander";
			LowestLevel = 1650,
			MaxLevel = 1700
		},
		Marine_Commodore = {
			Enemy = "Marine Commodore";
			LowestLevel = 1700;
			MaxLevel = 1725
		};
		Marine_Rear_Admiral = {
			Enemy = "Marine Rear Admiral",
			LowestLevel = 1725;
			MaxLevel = 1775
		},
		Fishman_Raider = {
			Enemy = "Fishman Raider",
			LowestLevel = 1775,
			MaxLevel = 1800
		};
		Fishman_Captain = {
			Enemy = "Fishman Captain";
			LowestLevel = 1800,
			MaxLevel = 1825
		},
		Forest_Pirate = {
			Enemy = "Forest Pirate";
			LowestLevel = 1825;
			MaxLevel = 1850
		};
		Mythological_Pirate = {
			Enemy = "Mythological Pirate",
			LowestLevel = 1850;
			MaxLevel = 1900
		},
		Jungle_Pirate = {
			Enemy = "Jungle Pirate",
			LowestLevel = 1900,
			MaxLevel = 1925
		};
		Musketeer_Pirate = {
			Enemy = "Musketeer Pirate",
			LowestLevel = 1925,
			MaxLevel = 1975
		};
		Reborn_Skeleton = {
			Enemy = "Reborn Skeleton",
			LowestLevel = 1975,
			MaxLevel = 2000
		},
		Living_Zombie = {
			Enemy = "Living Zombie",
			LowestLevel = 2000,
			MaxLevel = 2025
		};
		Demonic_Soul = {
			Enemy = "Demonic Soul",
			LowestLevel = 2025;
			MaxLevel = 2050
		};
		Posessed_Mummy = {
			Enemy = "Posessed Mummy";
			LowestLevel = 2050,
			MaxLevel = 2075
		},
		Peanut_Scout = {
			Enemy = "Peanut Scout",
			LowestLevel = 2075,
			MaxLevel = 2100
		},
		Peanut_President = {
			Enemy = "Peanut President";
			LowestLevel = 2100,
			MaxLevel = 2125
		};
		Ice_Cream_Chef = {
			Enemy = "Ice Cream Chef";
			LowestLevel = 2125;
			MaxLevel = 2150
		},
		Ice_Cream_Commander = {
			Enemy = "Ice Cream Commander";
			LowestLevel = 2150;
			MaxLevel = 2200
		},
		Cookie_Crafter = {
			Enemy = "Cookie Crafter",
			LowestLevel = 2200;
			MaxLevel = 2225
		},
		Cake_Guard = {
			Enemy = "Cake Guard";
			LowestLevel = 2225;
			MaxLevel = 2250
		},
		Baking_Staff = {
			Enemy = "Baking Staff";
			LowestLevel = 2250;
			MaxLevel = 2275
		};
		Head_Baker = {
			Enemy = "Head Baker";
			LowestLevel = 2275,
			MaxLevel = 2300
		};
		Cocoa_Warrior = {
			Enemy = "Cocoa Warrior",
			LowestLevel = 2300,
			MaxLevel = 2325
		},
		Chocolate_Bar_Battler = {
			Enemy = "Chocolate Bar Battler";
			LowestLevel = 2325;
			MaxLevel = 2350
		};
		Sweet_Thief = {
			Enemy = "Sweet Thief",
			LowestLevel = 2350;
			MaxLevel = 2375
		};
		Candy_Rebel = {
			Enemy = "Candy Rebel";
			LowestLevel = 2375,
			MaxLevel = 2400
		},
		Candy_Pirate = {
			Enemy = "Candy Pirate";
			LowestLevel = 2400,
			MaxLevel = 2425
		},
		Snow_Demon = {
			Enemy = "Snow Demon",
			LowestLevel = 2425;
			MaxLevel = 2450
		}
	}
	local CoreGui = require(LocalPlayer.PlayerScripts.CombatFramework)
	local UserInputService = (debug.getupvalues(CoreGui))[2]
	local UserService = {
		ESP = {};
		Tracer = {}
	}
	N.ServerSea = game.PlaceId == 2753915549 and 1 or game.PlaceId == 4442272183 and 2 or game.PlaceId == 7449423635 and 3
	N.ServerWorld = N.ServerSea == 1 and "First Sea" or N.ServerSea == 2 and "Second Sea" or N.ServerSea == 3 and "Third Sea"
	N.Tools = {}
	N.SelectedTool = "Combat"
	N.AutoFarmType = "Quest"
	N.AutoUpgradePerSeconds = 30
	N.StatsCountPerUpgrade = 1
	N.ModScripts = {}
	N.ModScripts.increment = UserInputService.activeController.increment
	N.ModScripts.timeToNextBlock = UserInputService.activeController.timeToNextBlock
	N.ModScripts.timeToNextAttack = UserInputService.activeController.timeToNextAttack
	N.ModScripts.hitboxMagnitude = UserInputService.activeController.hitboxMagnitude
	N.InCombatAimbot = nil
	sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge)
	local function TextService()
		local CoreGui = LocalPlayer.Data.Level.Value
		for Y, TweenService in pairs(Y) do
			if TweenService.MaxLevel >= CoreGui and (TweenService.LowestLevel <= CoreGui and tick[Y].World == N.ServerSea) then
				return {
					tick[Y].EnemyName,
					tick[Y].LevelQuest;
					tick[Y].QuestName,
					tick[Y].CFramePos
				}
			end
		end
	end
	local function StarterGui(tick)
		local Y = h(LocalPlayer)
		local CoreGui = (tick.Position - Y.Position).Magnitude
		local UserInputService = 0
		if CoreGui < 10 then
			UserInputService = 1000
		elseif CoreGui < 170 then
			Y.CFrame = tick
			UserInputService = 350
		elseif CoreGui < 1000 then
			UserInputService = 350
		elseif CoreGui >= 1000 then
			UserInputService = 300
		end
		N.CurrentTween = TweenService:Create(Y, TweenInfo.new(CoreGui / UserInputService, Enum.EasingStyle.Linear), {
			CFrame = tick
		})
		N.CurrentTween:Play()
		if not LocalPlayer.Character.UpperTorso:FindFirstChild("BodyGyro") and not LocalPlayer.Character.UpperTorso:FindFirstChild("BodyVelocity") then
			local tick = Instance.new("BodyGyro")
			local Y = Instance.new("BodyVelocity")
			tick.Name = "BodyGyro"
			tick.Parent = LocalPlayer.Character.UpperTorso
			tick.P = 90000
			tick.MaxTorque = Vector3.new(9000000000, 9000000000, 9000000000)
			tick.CFrame = LocalPlayer.Character.UpperTorso.CFrame
			Y.Name = "BodyVelocity"
			Y.Parent = LocalPlayer.Character.UpperTorso
			Y.Velocity = Vector3.new(0, .01, 0)
			Y.MaxForce = Vector3.new(9000000000, 9000000000, 9000000000)
		end
		N.CurrentTween.Completed:Wait()
		N.CurrentTween = nil
		if not N.AutoFarm then
			if LocalPlayer.Character.UpperTorso:FindFirstChild("BodyGyro") and LocalPlayer.Character.UpperTorso:FindFirstChild("BodyVelocity") then
				LocalPlayer.Character.UpperTorso.BodyGyro:Destroy()
				LocalPlayer.Character.UpperTorso.BodyVelocity:Destroy()
			end
		end
	end
	local function ScriptContext()
		(coroutine.wrap(function()
			pcall(function()
				if N.CurrentTween then
					N.CurrentTween:Stop()
				end
			end)
		end))()
	end
	local function Lighting(tick)
		local Y = h(LocalPlayer)
		local CoreGui = math.huge
		local TweenService
		for UserInputService, VirtualInputManager in pairs(workspace.Enemies:GetChildren()) do
			if VirtualInputManager.Name:match(tick) and (VirtualInputManager:FindFirstChild("Humanoid") and VirtualInputManager.Humanoid.Health > 0) then
				local tick = (Y.Position - VirtualInputManager.HumanoidRootPart.Position).Magnitude
				if tick < CoreGui then
					CoreGui = tick
					TweenService = VirtualInputManager
				end
			end
		end
		return TweenService
	end
	local function ContextActionService()
		local tick = h(LocalPlayer)
		local Y = math.huge
		local CoreGui
		for TweenService, UserInputService in pairs(workspace:GetChildren()) do
			if UserInputService.Name:match("Chest") and UserInputService:IsA("Part") then
				local TweenService = (tick.Position - UserInputService.CFrame.Position).Magnitude
				if TweenService < Y then
					Y = TweenService
					CoreGui = UserInputService
				end
			end
		end
		return CoreGui
	end
	local function Stats()
		for tick, Y in pairs(LocalPlayer.Backpack:GetChildren()) do
			if Y:IsA("Tool") then
				table.insert(N.Tools, Y.Name)
			end
		end
		for tick, Y in pairs(LocalPlayer.Character:GetChildren()) do
			if Y:IsA("Tool") then
				table.insert(N.Tools, Y.Name)
			end
		end
	end
	local function Farm(tick, Y)
		for Y = 1, Y, 1 do
			z.Function(ReplicatedStorage.Remotes.CommF_, {
				[1] = "AddPoint",
				[2] = tick;
				[3] = 1
			})
		end
	end
	local function E(tick)
		VirtualInputManager:SendKeyEvent(true, tick, false, game)
		task.wait()
		VirtualInputManager:SendKeyEvent(false, tick, false, game)
	end
	local function Q(tick)
		z.Function(ReplicatedStorage.Remotes.Redeem, tick)
	end
	local PlayerMods = Library:CreateTab("Player Mods", "rbxassetid://\049\051\054\054\057\054\051\051\055\054\050")
	local Premium = Library:CreateTab("Premium", "rbxassetid://\049\051\054\054\057\054\054\057\051\055\056")
	local f = Library:CreateTab("Teleport", "rbxassetid://\049\051\054\054\057\054\051\057\052\053\057")
	local a = Library:CreateTab("Farm", "rbxassetid://\049\051\054\054\057\054\050\054\056\048\049")
	PlayerMods:CreateButton("Join Pirates Team", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "SetTeam", "Pirates")
	end)
	PlayerMods:CreateButton("Join Marines Team", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "SetTeam", "Marines")
	end)
	PlayerMods:CreateButton("Redeem All Valid Codes", function()
		Q("Sub\050Fer\057\057\057")
		Q("Enyu_is_Pro")
		Q("Magicbus")
		Q("JCWK")
		Q("Starcodeheo")
		Q("Bluxxy")
		Q("THEGREATACE")
		Q("SUB\050GAMERROBOT_EXP\049")
		Q("StrawHatMaine")
		Q("Sub\050OfficialNoobie")
		Q("SUB\050NOOBMASTER\049\050\051")
		Q("Sub\050Daigrock")
		Q("Axiore")
		Q("TantaiGaming")
		Q("STRAWHATMAINE")
	end)
	PlayerMods:CreateSection("PVP")
	PlayerMods:CreateToggle("Auto Enable PVP", function(tick)
		N.AutoEnablePVP = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoEnablePVP do
					task.wait()
					if LocalPlayer.PlayerGui.Main.PvpDisabled.Visible then
						z.Function(ReplicatedStorage.Remotes.CommF_, "EnablePvp")
						task.wait()
						if not LocalPlayer.PlayerGui.Main.PvpDisabled.Visible then
							B("PVP has been enabled.")
						end
					end
				end
			end))()
		end
	end)
	PlayerMods:CreateButton("Enable PVP", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "EnablePvp")
		task.wait()
		if not LocalPlayer.PlayerGui.Main.PvpDisabled.Visible then
			B("PVP has been enabled.")
		end
	end)
	PlayerMods:CreateSection("Modifications")
	PlayerMods:CreateToggle("Infinite Obversation Range", function(tick)
		N.InfiniteObversationRange = tick
		if tick then
			(coroutine.wrap(function()
				while N.InfiniteObversationRange do
					task.wait()
					if LocalPlayer and LocalPlayer.Character then
						LocalPlayer.VisionRadius.Value = math.huge
					end
				end
			end))()
		end
	end)
	PlayerMods:CreateToggle("No Dodge Cooldown", function(tick)
		N.NoDodgeCooldown = tick
		if tick then
			(coroutine.wrap(function()
				while N.NoDodgeCooldown do
					task.wait(.15)
					for tick, Y in pairs(getgc()) do
						if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Dodge")) then
							if typeof(Y) == "function" and (getfenv(Y)).script == LocalPlayer.Character.Dodge then
								for tick, CoreGui in pairs(debug.getupvalues(Y)) do
									if tonumber(CoreGui) == .1 then
										repeat
											task.wait(.15)
											debug.getupvalue(Y, tick, 0)
										until not N.NoDodgeCooldown
									end
								end
							end
						end
					end
				end
			end))()
		end
	end)
	PlayerMods:CreateToggle("Infinite Gepo", function(tick)
		N.InfiniteGeppo = tick
		if tick then
			(coroutine.wrap(function()
				while N.InfiniteGeppo do
					task.wait(.15)
					for tick, Y in pairs(getgc()) do
						if LocalPlayer and (LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Geppo")) then
							if typeof(Y) == "function" and (getfenv(Y)).script == LocalPlayer.Character.Geppo then
								for tick, CoreGui in pairs(debug.getupvalues(Y)) do
									if tonumber(tick) == 9 then
										repeat
											task.wait(.15)
											debug.getupvalue(Y, tick, 0)
										until not N.InfiniteGeppo or LocalPlayer.Character.Humanoid.Health <= 0
									end
								end
							end
						end
					end
				end
			end))()
		end
	end)
	if H then
		Premium:CreateSection("Client")
		Premium:CreateButton("No Camera Shake", function()
			(require(ReplicatedStorage.Util.CameraShaker)):Stop()
		end)
		Premium:CreateButton("Rain Fake Devil Fruits", function()
			local tick = h(LocalPlayer)
			for Y, CoreGui in pairs((game:GetObjects("rbxassetid://\049\052\055\053\057\051\054\056\050\048\049"))[1]:GetChildren()) do
				for Y = 1, 5, 1 do
					CoreGui.Parent = workspace.Map
					CoreGui:MoveTo(tick.Position + Vector3.new(math.random(-50, 50), 100, math.random(-50, 50)))
					if CoreGui.Fruit:FindFirstChild("AnimationController") then
						((CoreGui.Fruit:FindFirstChild("AnimationController")):LoadAnimation(CoreGui.Fruit:FindFirstChild("Idle"))):Play()
					end
					CoreGui.Handle.Touched:Connect(function(tick)
						if tick.Parent == LocalPlayer.Character then
							CoreGui.Parent = tick.Parent
						end
					end)
				end
			end
		end)
		Premium:CreateToggle("Anti AFK", function(tick)
			if tick then
				x:MakeTask("Anti AFK", LocalPlayer.Idled, function()
					VirtualUser:ClickButton2(Vector2.new())
				end)
			else
				x:RemoveTask("Anti AFK")
			end
		end)
		Premium:CreateSection("PVP")
		local tick = Premium:CreateParagraph("PVP Status:", "Status: <font color=\"rgb(\048, \050\053\053, \048)\">Not in Combat</font>")
		Premium:CreateParagraph("PVP Aimbot", "This can be only use when you are in combat.")
		Premium:CreateToggle("Aimbot", function(tick)
			N.PVPAimbot = tick
		end)
		RunService.RenderStepped:Connect(function()
			if LocalPlayer.PlayerGui.Main.InCombat.Visible then
				tick:Update("PVP Status:", "Status: <font color=\"rgb(\050\053\053, \048, \048)\">In Combat</font>")
			else
				tick:Update("PVP Status:", "Status: <font color=\"rgb(\048, \050\053\053, \048)\">Not in Combat</font>")
			end
		end)
	else
		local tick = HttpService:JSONDecode(w("https://apis.roblox.com/game-passes/Stats\049/game-passes/\050\050\055\051\057\056\048\052/product-info"))
		Premium:CreateSection("Premium Member")
		Premium:CreateLabel("Be a Symphony Hub <font color=\"rgb(\048, \048, \050\053\053)\">Premium</font> <u>Member</u>!")
		Premium:CreateButton("Buy Premium for <font color=\"rgb(\048, \050\053\053, \048)\">" .. (tick.PriceInRobux .. " Robux</font>"), function()
			local tick, Y = pcall(function()
				MarketplaceService:PromptGamePassPurchase(LocalPlayer, 22739804)
			end)
			if Y and not tick then
				s("https://web.roblox.com/game-pass/\050\050\055\051\057\056\048\052/Symphony-Hub-Premium")
				I("<font color=\"rgb(\050\053\053, \048, \048)\">Failed</font> to callback the prompt, buy it on website instead | Copied to Clipboard")
			end
		end)
		Premium:CreateLabel("Not Working?")
		Premium:CreateButton("Copy Link Our Official site", function()
			s("https://itsjidy.github.io/SymphonyHub")
		end)
	end
	f:CreateSection(N.ServerWorld)
	if N.ServerSea == 1 then
		f:CreateButton("First land", function()
			StarterGui(CFrame.new(1042.1501464844, 16.299360275269, 1444.3442382813))
		end)
		f:CreateButton("Shell Town", function()
			StarterGui(CFrame.new(-2599, 6.9146227836609, 2062.2216796875))
		end)
		f:CreateButton("Marine Ford", function()
			StarterGui(CFrame.new(-5081, 85.221641540527, 4257.3588867188))
		end)
		f:CreateButton("Midle Town", function()
			StarterGui(CFrame.new(-655, 7.878026008606, 1573.7612304688))
		end)
		f:CreateButton("Jungle", function()
			StarterGui(CFrame.new(-1499, 22.877912521362, 353.87060546875))
		end)
		f:CreateButton("Pirate", function()
			StarterGui(CFrame.new(-1163, 44.777843475342, 3842.8276367188))
		end)
		f:CreateButton("Desert", function()
			StarterGui(CFrame.new(954.02056884766, 6.6275520324707, 4262.611328125))
		end)
		f:CreateButton("Ice Land", function()
			StarterGui(CFrame.new(1144.5270996094, 7.3292083740234, -1164))
		end)
		f:CreateButton("Colosseum", function()
			StarterGui(CFrame.new(-1667, 39.385631561279, -3135))
		end)
		f:CreateButton("Prison", function()
			StarterGui(CFrame.new(4857.6982421875, 5.6780304908752, 732.75750732422))
		end)
		f:CreateButton("Mob Leader", function()
			StarterGui(CFrame.new(-2841, 7.3560485839844, 5318.1040039063))
		end)
		f:CreateButton("Magma Land", function()
			StarterGui(CFrame.new(-5328, 8.6164798736572, 8427.3994140625))
		end)
		f:CreateButton("Water \055", function()
			StarterGui(CFrame.new(3893.953125, 5.3989524841309, -1893))
		end)
		f:CreateButton("Fish Man Village", function()
			StarterGui(CFrame.new(61191.12109375, 18.497436523438, 1561.8873291016))
		end)
		f:CreateButton("Fountain City", function()
			StarterGui(CFrame.new(5244.7133789063, 38.526943206787, 4073.4987792969))
		end)
		f:CreateButton("Sky \049", function()
			StarterGui(CFrame.new(-4878, 717.71246337891, -2637))
		end)
		f:CreateButton("Sky \050", function()
			StarterGui(CFrame.new(-7899, 5545.6030273438, -422))
		end)
	elseif N.ServerSea == 2 then
		f:CreateButton("Dock", function()
			StarterGui(CFrame.new(-12, 19.302536010742, 2827.853515625))
		end)
		f:CreateButton("Mansion", function()
			StarterGui(CFrame.new(-390, 321.89730834961, 869.00506591797))
		end)
		f:CreateButton("Kingdom of Rose", function()
			StarterGui(CFrame.new(-388, 138.35575866699, 1132.1662597656))
		end)
		f:CreateButton("Cafe", function()
			StarterGui(CFrame.new(-379, 73.0458984375, 304.84692382813))
		end)
		f:CreateButton("Sunflower", function()
			StarterGui(CFrame.new(-1576, 198.61849975586, 13.725157737732))
		end)
		f:CreateButton("Jeramy Mountain", function()
			StarterGui(CFrame.new(1986.3519287109, 448.95678710938, 796.70239257813))
		end)
		f:CreateButton("Colossuem \050", function()
			StarterGui(CFrame.new(-1871, 45.820514678955, 1359.6843261719))
		end)
		f:CreateButton("Usopp\'s Island", function()
			StarterGui(CFrame.new(4760.4985351563, 8.3444719314575, 2849.2426757813))
		end)
		f:CreateButton("Factory", function()
			StarterGui(CFrame.new(349.53750610352, 74.446998596191, -355))
		end)
		f:CreateButton("The Bridge", function()
			StarterGui(CFrame.new(-1860, 88.384948730469, -1859))
		end)
		f:CreateButton("Green Bit", function()
			StarterGui(CFrame.new(-2202, 73.097663879395, -2819))
		end)
		f:CreateButton("Graveyard", function()
			StarterGui(CFrame.new(-5617, 492.22183227539, -778))
		end)
		f:CreateButton("Dark Area", function()
			StarterGui(CFrame.new(3464.7700195313, 13.375151634216, -3368))
		end)
		f:CreateButton("Superhuman Mountain", function()
			StarterGui(CFrame.new(561.23834228516, 401.44781494141, -5297))
		end)
		f:CreateButton("Lava Island", function()
			StarterGui(CFrame.new(-5505, 15.977565765381, -5366))
		end)
		f:CreateButton("Cold IsLand", function()
			StarterGui(CFrame.new(-5924, 15.977565765381, -4996))
		end)
		f:CreateButton("Ice Castle", function()
			StarterGui(CFrame.new(6111.7109375, 294.41259765625, -6716))
		end)
		f:CreateButton("inscription Island", function()
			StarterGui(CFrame.new(-5099, 98.241539001465, 2424.4035644531))
		end)
		f:CreateButton("Forgotten Island", function()
			StarterGui(CFrame.new(-3051, 238.87203979492, -10250))
		end)
		f:CreateButton("Ghost Ship", function()
			z.Function(ReplicatedStorage.Remotes.CommF_, "requestEntrance", Vector3.new(923.21252441406, 126.9760055542, 32852.83203125))
		end)
	elseif N.ServerSea == 3 then
		f:CreateButton("Port Town", function()
			StarterGui(CFrame.new(-275, 43.755737304688, 5451.0659179688))
		end)
		f:CreateButton("Hydra Island", function()
			StarterGui(CFrame.new(5541.2685546875, 668.30456542969, 195.48069763184))
		end)
		f:CreateButton("Gaint Tree", function()
			StarterGui(CFrame.new(2276.0859375, 25.87850189209, -6493))
		end)
		f:CreateButton("Zou ISland", function()
			StarterGui(CFrame.new(-10034, 331.78845214844, -8319))
		end)
		f:CreateButton("Mansion", function()
			StarterGui(CFrame.new(-12548, 332.40396118164, -7603))
		end)
		f:CreateButton("Castle on the Sea", function()
			StarterGui(CFrame.new(-5498, 313.79473876953, -2860))
		end)
		f:CreateButton("Graveyard Island", function()
			StarterGui(CFrame.new(-9515, 142.130615, 5537.58398))
		end)
		f:CreateButton("CoCoNut Island", function()
			StarterGui(CFrame.new(-1846, 38.128959655762, -10451))
		end)
		f:CreateButton("HoCake Island \049", function()
			StarterGui(CFrame.new(-927, 58.971530914307, -10895))
		end)
		f:CreateButton("HoCake Island \050", function()
			StarterGui(CFrame.new(-1973, 37.824035644531, -11883))
		end)
	end
	f:CreateSection("Shop")
	if N.ServerSea == 1 then
		f:CreateButton("Buso Shop", function()
			StarterGui(CFrame.new(5841.3208007812, 12.240174293518, 3603.513671875))
		end)
		f:CreateButton("Ken Shop", function()
			StarterGui(CFrame.new(65.571594238281, 386.49786376953, 4064.0361328125))
		end)
		f:CreateButton("Sword Shop", function()
			StarterGui(CFrame.new(2360.3986816406, 40.296642303467, 9683.9658203125))
		end)
	elseif N.ServerSea == 2 then
		f:CreateButton("Electro Shop", function()
			StarterGui(CFrame.new(2462.4741210938, 173.04458618164, -1099))
		end)
		f:CreateButton("Dragon Claw Shop", function()
			StarterGui(CFrame.new(2719.3259277344, 430.65707397461, 721.21575927734))
		end)
		f:CreateButton("ReStat Shop", function()
			StarterGui(CFrame.new(2433.724609375, 57.307052612305, 142.75276184082))
		end)
	end
	f:CreateButton("Black Leg Shop", function()
		if N.ServerSea == 1 then
			StarterGui(CFrame.new(6457.8754882812, 168.47467041016, -2376))
		elseif N.ServerSea == 2 then
			StarterGui(CFrame.new(2367.072265625, 57.307052612305, 135.18827819824))
		else
			B("This shop can be only found at First Sea and Second Sea.")
		end
	end)
	f:CreateButton("Cybrog Shop", function()
		if N.ServerSea == 1 then
			StarterGui(CFrame.new(6457.8754882812, 168.47467041016, -2376))
		elseif N.ServerSea == 2 then
			StarterGui(CFrame.new(2325.8371582031, 57.267036437988, 235.82777404785))
		else
			B("This shop can be only found at First Sea and Second Sea.")
		end
	end)
	f:CreateButton("Water Style Shop", function()
		if N.ServerSea == 1 then
			StarterGui(CFrame.new(3944.1264648438, 123.67578125, 1489.2821044922))
		elseif N.ServerSea == 2 then
			StarterGui(CFrame.new(2455.255859375, 57.307052612305, 224.07823181152))
		else
			B("This shop can be only found at First Sea and Second Sea.")
		end
	end)
	f:CreateSection("Dungeon")
	f:CreateButton("Teleport to Dungeon", function()
		if N.ServerSea == 1 then
			StarterGui(CFrame.new(6729.3916015625, 103.67321777344, 952.03881835938))
		elseif N.ServerSea == 2 then
			StarterGui(CFrame.new(2698.6772460938, 223.11566162109, 6.6630764007568))
		else
			B("This dungeon can be only found at First Sea and Second Sea.")
		end
	end)
	f:CreateSection("Sea")
	f:CreateButton("Teleport To First Sea", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "TravelMain")
	end)
	f:CreateButton("Teleport To Second Sea", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "TravelDressrosa")
	end)
	f:CreateButton("Teleport To Third Sea", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "TravelZou")
	end)
	local c = a:CreateParagraph("Server Info:", "Server: <font color=\"rgb(\048, \050\053\053, \048)\">" .. (N.ServerWorld .. ("</font>\nFPS: \048\nLevel: <font color=\"rgb(\048, \050\053\053, \048)\">" .. (LocalPlayer.Data.Level.Value .. "</font>\nAuto Farm Current Target: <font color=\"rgb(\050\053\053, \048, \048)\">null</font>"))))
	a:CreateToggle("Auto Farm Quests", function(tick)
		N.AutoFarmQuests = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoFarmQuests do
					task.wait()
					local tick = TextService()
					local Y = LocalPlayer.PlayerGui.Main.Quest.Container.QuestTitle.Title.Text
					N.CurrentTarget = nil
					if LocalPlayer.PlayerGui.Main.Quest.Visible and not string.match(Y, tick[1]) then
						z.Function(ReplicatedStorage.Remotes.CommF_, "AbandonQuest")
					end
					if not LocalPlayer.PlayerGui.Main.Quest.Visible then
						StarterGui(tick[4])
						task.wait(.5)
						z.Function(ReplicatedStorage.Remotes.CommF_, "StartQuest", tick[3], tick[2])
					else
						local Y = Lighting(tick[1])
						if Y then
							repeat
								task.wait()
								StarterGui(Y.HumanoidRootPart.CFrame * CFrame.new(0, 15, 0))
								Y.HumanoidRootPart.Size = Vector3.new(20, 20, 20)
								Y.HumanoidRootPart.CanCollide = false
								Y.HumanoidRootPart.Transparency = 1
								Y.Humanoid.JumpPower = 0
								Y.Humanoid.WalkSpeed = 0
								N.CurrentTarget = Y
								task.wait()
							until not Y:FindFirstChild("Humanoid") or Y.Humanoid.Health <= 0 or not N.AutoFarmQuests
							N.CurrentTarget = nil
						end
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Farm Chests", function(tick)
		N.AutoFarmChests = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoFarmChests do
					task.wait()
					local tick = ContextActionService()
					if tick then
						StarterGui(tick.CFrame * CFrame.new(0, 5, 2))
					end
					N.CurrentTarget = nil
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Farm Ectoplasm", function(tick)
		N.AutoFarmEctoplasm = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoFarmEctoplasm do
					task.wait()
					if N.ServerSea == 3 then
						local tick = h(LocalPlayer)
						if workspace.Enemies:FindFirstChild("Ship Deckhand [Lv. \049\050\053\048]") or workspace.Enemies:FindFirstChild("Ship Engineer [Lv. \049\050\055\053]") or workspace.Enemies:FindFirstChild("Ship Steward [Lv. \049\051\048\048]") or workspace.Enemies:FindFirstChild("Ship Officer [Lv. \049\051\050\053]") then
							for tick, Y in pairs(workspace.Enemies:GetChildren()) do
								if Y.Name:match("Bone") and (Y:FindFirstChild("HumanoidRootPart") and (Y:FindFirstChild("Humanoid") and Y.Humanoid.Health > 0)) then
									repeat
										task.wait()
										StarterGui(Y.HumanoidRootPart.CFrame * CFrame.new(0, 15, 0))
										Y.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
										Y.HumanoidRootPart.Transparency = 1
										Y.Humanoid.JumpPower = 0
										Y.Humanoid.WalkSpeed = 0
										Y.HumanoidRootPart.CanCollide = false
										N.CurrentTarget = Y
									until not Y:FindFirstChild("Humanoid") or Y.Humanoid.Health <= 0 or not N.AutoFarmEctoplasm
									N.CurrentTarget = nil
								end
							end
						else
							local tick = ((CFrame.new(911.35827636719, 125.95812988281, 33159.5390625)).Position - (h(LocalPlayer)).Position).Magnitude
							if tick > 1800 then
								z.Function(ReplicatedStorage.Remotes.CommF_, "requestEntrance", Vector3.new(923.21252441406, 126.9760055542, 32852.83203125))
							end
							StarterGui(CFrame.new(911.35827636719, 125.95812988281, 33159.5390625))
						end
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Farm Factory", function(tick)
		N.AutoFarmFactory = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoFarmFactory do
					task.wait()
					local tick = h(LocalPlayer)
					if workspace.Enemies:FindFirstChild("Core") then
						for tick, Y in pairs(workspace.Enemies:GetChildren()) do
							if Y.Name == "Core" and (Y:FindFirstChild("HumanoidRootPart") and (Y:FindFirstChild("Humanoid") and Y.Humanoid.Health > 0)) then
								repeat
									task.wait()
									StarterGui(Y.HumanoidRootPart.CFrame * CFrame.new(0, 15, 0))
									Y.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
									Y.HumanoidRootPart.Transparency = 1
									Y.Humanoid.JumpPower = 0
									Y.Humanoid.WalkSpeed = 0
									Y.HumanoidRootPart.CanCollide = false
									N.CurrentTarget = Y
								until not Y:FindFirstChild("Humanoid") or Y.Humanoid.Health <= 0 or not N.AutoFarmFactory
								N.CurrentTarget = nil
							end
						end
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Farm Canvander", function(tick)
		N.AutoFarmCanvander = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoFarmFactory do
					task.wait()
					local tick = h(LocalPlayer)
					if workspace.Enemies:FindFirstChild("Beautiful Pirate [Lv. \049\057\053\048] [Boss]") then
						for tick, Y in pairs(workspace.Enemies:GetChildren()) do
							if Y.Name == "Beautiful Pirate [Lv. \049\057\053\048] [Boss]" and (Y:FindFirstChild("HumanoidRootPart") and (Y:FindFirstChild("Humanoid") and Y.Humanoid.Health > 0)) then
								repeat
									task.wait()
									StarterGui(Y.HumanoidRootPart.CFrame * CFrame.new(0, 15, 0))
									Y.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
									Y.HumanoidRootPart.Transparency = 1
									Y.Humanoid.JumpPower = 0
									Y.Humanoid.WalkSpeed = 0
									Y.HumanoidRootPart.CanCollide = false
									N.CurrentTarget = Y
								until not Y:FindFirstChild("Humanoid") or Y.Humanoid.Health <= 0 or not N.AutoFarmCanvander
								N.CurrentTarget = nil
							end
						end
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Farm Hallow Scythe", function(tick)
		N.AutoFarmHallowScythe = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoFarmHallowScythe do
					task.wait()
					local tick = h(LocalPlayer)
					if workspace.Enemies:FindFirstChild("Soul Reaper [Lv. \050\049\048\048] [Raid Boss]") then
						for tick, Y in pairs(workspace.Enemies:GetChildren()) do
							if Y.Name == "Soul Reaper [Lv. \050\049\048\048] [Raid Boss]" and (Y:FindFirstChild("HumanoidRootPart") and (Y:FindFirstChild("Humanoid") and Y.Humanoid.Health > 0)) then
								repeat
									task.wait()
									StarterGui(Y.HumanoidRootPart.CFrame * CFrame.new(0, 30, 0))
									Y.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
									Y.HumanoidRootPart.Transparency = 1
									Y.Humanoid.JumpPower = 0
									Y.Humanoid.WalkSpeed = 0
									Y.HumanoidRootPart.CanCollide = false
									N.CurrentTarget = Y
								until not Y:FindFirstChild("Humanoid") or Y.Humanoid.Health <= 0 or not N.AutoFarmHallowScythe
								N.CurrentTarget = nil
							end
						end
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Farm Cake Queen", function(tick)
		N.AutoFarmCakeQueen = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoFarmCakeQueen do
					task.wait()
					local tick = h(LocalPlayer)
					if workspace.Enemies:FindFirstChild("Cake Queen [Lv. \050\049\055\053] [Boss]") then
						for tick, Y in pairs(workspace.Enemies:GetChildren()) do
							if Y.Name == "Cake Queen [Lv. \050\049\055\053] [Boss]" and (Y:FindFirstChild("HumanoidRootPart") and (Y:FindFirstChild("Humanoid") and Y.Humanoid.Health > 0)) then
								repeat
									task.wait()
									StarterGui(Y.HumanoidRootPart.CFrame * CFrame.new(0, 30, 0))
									Y.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
									Y.HumanoidRootPart.Transparency = 1
									Y.Humanoid.JumpPower = 0
									Y.Humanoid.WalkSpeed = 0
									Y.HumanoidRootPart.CanCollide = false
									N.CurrentTarget = Y
								until not Y:FindFirstChild("Humanoid") or Y.Humanoid.Health <= 0 or not N.AutoFarmCakeQueen
								N.CurrentTarget = nil
							end
						end
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Farm Rip Indra", function(tick)
		N.AutoFarmRipIndra = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoFarmRipIndra do
					task.wait()
					local tick = h(LocalPlayer)
					if workspace.Enemies:FindFirstChild("rip_indra True Form [Lv. \053\048\048\048] [Raid Boss]") or workspace.Enemies:FindFirstChild("rip_indra [Lv. \053\048\048\048] [Raid Boss]") then
						for tick, Y in pairs(workspace.Enemies:GetChildren()) do
							if Y.Name:match("rip_indra") and (Y:FindFirstChild("HumanoidRootPart") and (Y:FindFirstChild("Humanoid") and Y.Humanoid.Health > 0)) then
								repeat
									task.wait()
									StarterGui(Y.HumanoidRootPart.CFrame * CFrame.new(0, 30, 0))
									Y.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
									Y.HumanoidRootPart.Transparency = 1
									Y.Humanoid.JumpPower = 0
									Y.Humanoid.WalkSpeed = 0
									Y.HumanoidRootPart.CanCollide = false
									N.CurrentTarget = Y
								until not Y:FindFirstChild("Humanoid") or Y.Humanoid.Health <= 0 or not N.AutoFarmRipIndra
								N.CurrentTarget = nil
							end
						end
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Farm Swan Glasses", function(tick)
		N.AutoFarmSwanGlasses = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoFarmSwanGlasses do
					task.wait()
					local tick = h(LocalPlayer)
					if workspace.Enemies:FindFirstChild("Don Swan [Lv. \049\048\048\048] [Boss]") then
						for tick, Y in pairs(workspace.Enemies:GetChildren()) do
							if Y.Name == "Don Swan [Lv. \049\048\048\048] [Boss]" and (Y:FindFirstChild("HumanoidRootPart") and (Y:FindFirstChild("Humanoid") and Y.Humanoid.Health > 0)) then
								repeat
									task.wait()
									StarterGui(Y.HumanoidRootPart.CFrame * CFrame.new(0, 30, 0))
									Y.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
									Y.HumanoidRootPart.Transparency = 1
									Y.Humanoid.JumpPower = 0
									Y.Humanoid.WalkSpeed = 0
									Y.HumanoidRootPart.CanCollide = false
									N.CurrentTarget = Y
								until not Y:FindFirstChild("Humanoid") or Y.Humanoid.Health <= 0 or not N.AutoFarmSwanGlasses
								N.CurrentTarget = nil
							end
						end
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Farm Saber", function(tick)
		N.AutoFarmSaber = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoFarmSaber do
					task.wait()
					local tick = h(LocalPlayer)
					if workspace.Enemies:FindFirstChild("Saber Expert [Lv. \050\048\048] [Boss]") then
						for tick, Y in pairs(workspace.Enemies:GetChildren()) do
							if Y.Name == "Saber Expert [Lv. \050\048\048] [Boss]" and (Y:FindFirstChild("HumanoidRootPart") and (Y:FindFirstChild("Humanoid") and Y.Humanoid.Health > 0)) then
								repeat
									task.wait()
									StarterGui(Y.HumanoidRootPart.CFrame * CFrame.new(0, 30, 0))
									Y.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
									Y.HumanoidRootPart.Transparency = 1
									Y.Humanoid.JumpPower = 0
									Y.Humanoid.WalkSpeed = 0
									Y.HumanoidRootPart.CanCollide = false
									N.CurrentTarget = Y
								until not Y:FindFirstChild("Humanoid") or Y.Humanoid.Health <= 0 or not N.AutoFarmSaber
								N.CurrentTarget = nil
							end
						end
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Farm Rengoku", function(tick)
		N.AutoFarmRengoku = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoFarmRengoku do
					task.wait()
					local tick = h(LocalPlayer)
					if workspace.Enemies:FindFirstChild("Snow Lurker [Lv. \049\051\055\053]") or workspace.Enemies:FindFirstChild("Arctic Warrior [Lv. \049\051\053\048]") then
						for tick, Y in pairs(workspace.Enemies:GetChildren()) do
							if (Y.Name == "Snow Lurker [Lv. \049\051\055\053]" or Y.Name == "Arctic Warrior [Lv. \049\051\053\048]") and (Y:FindFirstChild("HumanoidRootPart") and (Y:FindFirstChild("Humanoid") and Y.Humanoid.Health > 0)) then
								repeat
									task.wait()
									StarterGui(Y.HumanoidRootPart.CFrame * CFrame.new(0, 30, 0))
									Y.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
									Y.HumanoidRootPart.Transparency = 1
									Y.Humanoid.JumpPower = 0
									Y.Humanoid.WalkSpeed = 0
									Y.HumanoidRootPart.CanCollide = false
									N.CurrentTarget = Y
								until not Y:FindFirstChild("Humanoid") or Y.Humanoid.Health <= 0 or not N.AutoFarmRengoku
								N.CurrentTarget = nil
							end
						end
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Farm Bone", function(tick)
		N.AutoFarmBone = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoFarmBone do
					task.wait()
					if N.ServerSea == 3 then
						local tick = h(LocalPlayer)
						if workspace.Enemies:FindFirstChild("Reborn Skeleton [Lv. \049\057\055\053]") or workspace.Enemies:FindFirstChild("Living Zombie [Lv. \050\048\048\048]") or workspace.Enemies:FindFirstChild("Demonic Soul [Lv. \050\048\050\053]") or workspace.Enemies:FindFirstChild("Posessed Mummy [Lv. \050\048\053\048]") then
							for tick, Y in pairs(workspace.Enemies:GetChildren()) do
								if Y.Name == "Reborn Skeleton [Lv. \049\057\055\053]" or Y.Name == "Living Zombie [Lv. \050\048\048\048]" or Y.Name == "Demonic Soul [Lv. \050\048\050\053]" or Y.Name == "Posessed Mummy [Lv. \050\048\053\048]" then
									if Y:FindFirstChild("HumanoidRootPart") and (Y:FindFirstChild("Humanoid") and Y.Humanoid.Health > 0) then
										repeat
											task.wait()
											StarterGui(Y.HumanoidRootPart.CFrame * CFrame.new(0, 15, 0))
											Y.HumanoidRootPart.Size = Vector3.new(1, 1, 1)
											Y.HumanoidRootPart.Transparency = 1
											Y.Humanoid.JumpPower = 0
											Y.Humanoid.WalkSpeed = 0
											Y.HumanoidRootPart.CanCollide = false
											N.CurrentTarget = Y
										until Y:FindFirstChild("Humanoid") and Y.Humanoid.Health <= 0 or not N.AutoFarmBone
										N.CurrentTarget = nil
									end
								end
							end
						end
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Second Sea", function(tick)
		N.AutoSecondSea = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoSecondSea do
					task.wait()
					if LocalPlayer.Data.Level.Value >= 700 and N.ServerSea == 1 then
						if not workspace.Map.Ice.Door.CanCollide and workspace.Map.Ice.Door.Transparency == 1 then
							local tick = CFrame.new(4849.29883, 5.65138149, 719.611877)
							local Y = h(LocalPlayer)
							repeat
								task.wait()
								StarterGui(tick)
							until (tick.Position - Y.Position).Magnitude <= 3 or not N.AutoSecondSea
							task.wait(1)
							if z.Function(ReplicatedStorage.Remotes.CommF_, "DressrosaQuestProgress", "Detective") ~= 1 then
								z.Function(ReplicatedStorage.Remotes.CommF_, "DressrosaQuestProgress", "Detective")
								task.wait(1.5)
								if LocalPlayer and LocalPlayer.Backpack:FindFirstChild("Key") then
									LocalPlayer.Character.Backpack.Key.Parent = LocalPlayer.Character
								end
							end
							repeat
								task.wait()
								StarterGui(CFrame.new(1347.7124, 37.3751602, -1325))
							until (Vector3.new(1347.7124, 37.3751602, -1325) - Y.Position).Magnitude <= 3 or not N.AutoSecondSea
							task.wait(2)
							for tick, Y in pairs(workspace.Enemies:GetChildren()) do
								if Y.Name == "Ice Admiral [Lv. \055\048\048] [Boss]" then
									z.Function(ReplicatedStorage.Remotes.CommF_, "SetSpawnPoint")
									repeat
										task.wait()
										StarterGui(Y.HumanoidRootPart.CFrame * CFrame.new(0, 25, 15))
										Y.HumanoidRootPart.Size = Vector3.new(50, 50, 50)
										Y.HumanoidRootPart.Transparency = 1
										Y.HumanoidRootPart.CanCollide = false
										N.CurrentTarget = Y
									until not Y:FindFirstChild("Humanoid") or Y.Humanoid.Health <= 0
									task.wait(2)
									z.Function(ReplicatedStorage.Remotes.CommF_, "TravelDressrosa")
									task.wait(25)
								end
							end
						end
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Third Sea", function(tick)
		N.AutoThirdSea = tick
		if tick then
			ScriptContext();
			(coroutine.wrap(function()
				while N.AutoThirdSea do
					task.wait()
					if LocalPlayer.Data.Level.Value >= 1500 and N.ServerSea == 2 then
						if z.Function(ReplicatedStorage.Remotes.CommF_, "ZQuestProgress", "Check") == 0 then
							StarterGui(CFrame.new(-1926, 12.819851875305, 1738.3092041016))
							if ((CFrame.new(-1926, 12.819851875305, 1738.3092041016)).Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 10 then
								task.wait(1.5)
								z.Function(ReplicatedStorage.Remotes.CommF_, "ZQuestProgress", "Begin")
							end
							task.wait(2)
							if workspace.Enemies:FindFirstChild("rip_indra [Lv. \049\053\048\048] [Boss]") then
								for tick, Y in pairs((game:GetService("Workspace")).Enemies:GetChildren()) do
									if Y.Name == "rip_indra [Lv. \049\053\048\048] [Boss]" then
										repeat
											task.wait()
											Y.HumanoidRootPart.Size = Vector3.new(50, 50, 50)
											Y.HumanoidRootPart.Transparency = 1
											Y.HumanoidRootPart.CanCollide = false
											Y.Humanoid.WalkSpeed = 0
											N.CurrentTarget = Y
											z.Function(ReplicatedStorage.Remotes.CommF_, "TravelZou")
										until not Y:FindFirstChild("Humanoid") or Y.Humanoid.Health <= 0 or not N.AutoThirdSea
									end
								end
							elseif not workspace.Enemies:FindFirstChild("rip_indra [Lv. \049\053\048\048] [Boss]") and ((CFrame.new(-26880, 22.848554611206, 473.18951416016)).Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 1000 then
								StarterGui(CFrame.new(-26880, 22.848554611206, 473.18951416016))
							end
						end
					end
				end
			end))()
		end
	end)
	a:CreateSection("Farm Configuration")
	a:CreateToggle("Auto Haki", function(tick)
		N.AutoHaki = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoHaki do
					task.wait()
					if LocalPlayer and (LocalPlayer.Character and not LocalPlayer.Character:FindFirstChild("HasBuso")) then
						z.Function(ReplicatedStorage.Remotes.CommF_, "Buso")
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Farm Silent Aim", function(tick)
		N.AutoFarmSilentAim = tick
	end)
	a:CreateToggle("Auto Basic Attack", function(tick)
		N.AutoBasicAttack = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoBasicAttack do
					task.wait()
					if LocalPlayer.Backpack:FindFirstChild(N.SelectedTool) then
						LocalPlayer.Backpack[N.SelectedTool].Parent = LocalPlayer.Character
					end
					VirtualUser:CaptureController()
					VirtualUser:Button1Down(Vector2.new(0, 1, 0, 1))
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Cast Skills", function(tick)
		N.AutoCastSkills = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoCastSkills do
					task.wait()
					if LocalPlayer.Backpack:FindFirstChild(N.SelectedTool) then
						LocalPlayer.Backpack[N.SelectedTool].Parent = LocalPlayer.Character
					end
					if N.AutoCastZSkill then
						E("TweenService")
					end
					if N.AutoCastXSkill then
						E("X")
					end
					if N.AutoCastCSkill then
						E("Lighting")
					end
					if N.AutoCastVSkill then
						E("V")
					end
				end
			end))()
		end
	end)
	a:CreateToggle("Enable Auto Cast TweenService Skill", function(tick)
		N.AutoCastZSkill = tick
	end)
	a:CreateToggle("Enable Auto Cast X Skill", function(tick)
		N.AutoCastXSkill = tick
	end)
	a:CreateToggle("Enable Auto Cast Lighting Skill", function(tick)
		N.AutoCastCSkill = tick
	end)
	a:CreateToggle("Enable Auto Cast V Skill", function(tick)
		N.AutoCastVSkill = tick
	end)
	local F = a:CreateDropdown("Select Weapon", {
		"Combat"
	}, function(tick)
		N.SelectedTool = tick
	end)
	a:CreateToggle("Rapid Attack <font color=\"rgb(\048, \048, \050\053\053)\">(Premium)</font>", function(tick)
		if tick then
			x:MakeTask("Rapid Attack", RunService.Stepped, function()
				UserInputService.activeController.attacking = false
				UserInputService.activeController.increment = 3
				UserInputService.activeController.blocking = false
				UserInputService.activeController.timeToNextBlock = 0
				UserInputService.activeController.timeToNextAttack = 0
				UserInputService.activeController.hitboxMagnitude = 54
			end)
		else
			x:RemoveTask("Rapid Attack")
			UserInputService.activeController.increment = N.ModScripts.increment
			UserInputService.activeController.timeToNextBlock = N.ModScripts.timeToNextBlock
			UserInputService.activeController.timeToNextAttack = N.ModScripts.timeToNextAttack
			UserInputService.activeController.hitboxMagnitude = N.ModScripts.hitboxMagnitude
		end
	end)
	a:CreateSection("Stats")
	a:CreateToggle("Auto Upgrade Stats", function(tick)
		N.AutoUpgradeStats = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoUpgradeStats do
					task.wait(N.AutoUpgradePerSeconds)
					if N.AutoUpgradeMeleeStats then
						Farm("Melee", N.StatsCountPerUpgrade)
					end
					if N.AutoUpgradeDefenseStats then
						Farm("Defense", N.StatsCountPerUpgrade)
					end
					if N.AutoUpgradeSwordStats then
						Farm("Sword", N.StatsCountPerUpgrade)
					end
					if N.AutoUpgradeGunStats then
						Farm("Gun", N.StatsCountPerUpgrade)
					end
					if N.AutoUpgradeDevilFruitStats then
						Farm("Demon Fruit", N.StatsCountPerUpgrade)
					end
				end
			end))()
		end
	end)
	a:CreateSection("Auto Upgrade Stats Configuration")
	a:CreateSlider("Stats Count Per Upgrade", 1, 5, 1, function(tick)
		N.StatsCountPerUpgrade = tonumber(tick) or 1
	end)
	a:CreateSlider("Auto Upgrade Stats Per Seconds", 3, 60, 30, function(tick)
		N.AutoUpgradePerSeconds = tonumber(tick) or 30
	end)
	a:CreateToggle("Melee", function(tick)
		N.AutoUpgradeMeleeStats = tick
	end)
	a:CreateToggle("Defense", function(tick)
		N.AutoUpgradeDefenseStats = tick
	end)
	a:CreateToggle("Sword", function(tick)
		N.AutoUpgradeSwordStats = tick
	end)
	a:CreateToggle("Gun", function(tick)
		N.AutoUpgradeGunStats = tick
	end)
	a:CreateToggle("Devil Fruit", function(tick)
		N.AutoUpgradeDevilFruitStats = tick
	end)
	a:CreateSection("Visual Indicators")
	a:CreateToggle("ESP Current Target", function(tick)
		if tick then
			UserService.ESP["Current Target"] = {}
			UserService.ESP["Current Target"].Text = Drawing.new("Text")
			UserService.ESP["Current Target"].Service = RunService.RenderStepped:Connect(function()
				if N.CurrentTarget and N.CurrentTarget:FindFirstChild("Humanoid") then
					local tick, Y = workspace.CurrentCamera:WorldToViewportPoint((N.CurrentTarget.Head.CFrame * CFrame.new(0, 1.5, 0)) * (CFrame.new(0, - N.CurrentTarget.HumanoidRootPart.Size.Y, 0)).Position)
					local CoreGui = (N.CurrentTarget.HumanoidRootPart.Position - workspace.CurrentCamera.CFrame.Position).Magnitude / 20
					UserService.ESP["Current Target"].Text.Visible = Y
					UserService.ESP["Current Target"].Text.Color = Color3.fromRGB(255, 0, 0)
					UserService.ESP["Current Target"].Text.Position = Vector2.new(tick.X, tick.Y)
					UserService.ESP["Current Target"].Text.Size = CoreGui >= 17 and 3 or 20 - CoreGui
					UserService.ESP["Current Target"].Text.Text = N.CurrentTarget.Name
				else
					UserService.ESP["Current Target"].Text.Visible = false
				end
			end)
			UserService.ESP["Current Target"].Text.OutlineColor = Color3.fromRGB(255, 255, 255)
			UserService.ESP["Current Target"].Text.Outline = true
			UserService.ESP["Current Target"].Text.Size = 20
			UserService.ESP["Current Target"].Text.Font = 3
			UserService.ESP["Current Target"].Text.Transparency = 1
			UserService.ESP["Current Target"].Text.Center = true
		else
			if UserService.ESP["Current Target"] then
				UserService.ESP["Current Target"].Service:Disconnect()
				UserService.ESP["Current Target"].Text:Remove()
			end
		end
	end)
	a:CreateToggle("Tracer Current Target", function(tick)
		if tick then
			UserService.Tracer["Current Target"] = {}
			UserService.Tracer["Current Target"].Line = Drawing.new("Line")
			UserService.Tracer["Current Target"].Service = RunService.RenderStepped:Connect(function()
				if N.CurrentTarget and N.CurrentTarget:FindFirstChild("Humanoid") then
					local tick, Y = workspace.CurrentCamera:WorldToViewportPoint(N.CurrentTarget.Head.CFrame * (CFrame.new(0, - N.CurrentTarget.HumanoidRootPart.Size.Y, 0)).Position)
					UserService.Tracer["Current Target"].Line.Color = Color3.fromRGB(255, 0, 0)
					UserService.Tracer["Current Target"].Line.From = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y)
					UserService.Tracer["Current Target"].Line.To = Vector2.new(tick.X, tick.Y)
					UserService.Tracer["Current Target"].Line.Visible = Y
				else
					UserService.Tracer["Current Target"].Line.Visible = false
				end
			end)
			UserService.Tracer["Current Target"].Line.Thickness = 2
			UserService.Tracer["Current Target"].Line.Transparency = 1
		else
			if UserService.Tracer["Current Target"] then
				UserService.Tracer["Current Target"].Service:Disconnect()
				UserService.Tracer["Current Target"].Text:Remove()
			end
		end
	end)
	a:CreateSection("Auto Buy")
	a:CreateToggle("Auto Buy Legendary Sword", function(tick)
		N.AutoBuyLegendarySword = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoBuyLegendarySword do
					task.wait()
					z.Function(ReplicatedStorage.Remotes.CommF_, "LegendarySwordDealer", "\049")
					z.Function(ReplicatedStorage.Remotes.CommF_, "LegendarySwordDealer", "\050")
					z.Function(ReplicatedStorage.Remotes.CommF_, "LegendarySwordDealer", "\051")
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Buy Random Fruits", function(tick)
		N.AutoBuyRandomFruits = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoBuyRandomFruits do
					task.wait()
					z.Function(ReplicatedStorage.Remotes.CommF_, "Cousin", "Buy")
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Buy Microchip Law Boss", function(tick)
		N.AutoBuyMicrochipLawBoss = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoBuyMicrochipLawBoss do
					task.wait()
					z.Function(ReplicatedStorage.Remotes.CommF_, "BlackbeardReward", "Microchip", "\050")
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Buy Enchancement Color", function(tick)
		N.AutoBuyEnchancement = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoBuyEnchancement do
					task.wait()
					z.Function(ReplicatedStorage.Remotes.CommF_, "ColorsDealer", "\050")
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Buy Dragon Talon", function(tick)
		N.AutoBuyDragonTalon = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoBuyDragonTalon do
					if LocalPlayer.Backpack:FindFirstChild("Dragon Claw") or LocalPlayer.Character:FindFirstChild("Dragon Claw") or LocalPlayer.Backpack:FindFirstChild("Dragon Talon") or LocalPlayer.Character:FindFirstChild("Dragon Talon") then
						if LocalPlayer.Backpack:FindFirstChild("Dragon Claw") and (LocalPlayer.Backpack:FindFirstChild("Dragon Claw")).Level.Value >= 400 then
							z.Function(ReplicatedStorage.Remotes.CommF_, "BuyDragonTalon")
						elseif LocalPlayer.Character:FindFirstChild("Dragon Claw") and (LocalPlayer.Character:FindFirstChild("Dragon Claw")).Level.Value >= 400 then
							z.Function(ReplicatedStorage.Remotes.CommF_, "BuyDragonTalon")
						end
					else
						z.Function(ReplicatedStorage.Remotes.CommF_, "BlackbeardReward", "DragonClaw", "\050")
					end
				end
			end))()
		end
	end)
	a:CreateButton("Buy Geppo", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyHaki", "Geppo")
	end)
	a:CreateButton("Buy Buso Haki", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyHaki", "Buso")
	end)
	a:CreateButton("Buy Soru", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyHaki", "Soru")
	end)
	a:CreateButton("Buy Observation Ken Haki", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "KenTalk", "Buy")
	end)
	a:CreateButton("Buy Black Leg", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyBlackLeg")
	end)
	a:CreateButton("Buy Electro", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyElectro")
	end)
	a:CreateButton("Buy Fishman Karate", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyFishmanKarate")
	end)
	a:CreateButton("Buy Dragon Claw", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BlackbeardReward", "DragonClaw", "\049")
		z.Function(ReplicatedStorage.Remotes.CommF_, "BlackbeardReward", "DragonClaw", "\050")
	end)
	a:CreateButton("Buy Superhuman", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuySuperhuman")
	end)
	a:CreateButton("Buy Death Step", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyDeathStep")
	end)
	a:CreateButton("Buy Sharkman Karate", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuySharkmanKarate", true)
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuySharkmanKarate")
	end)
	a:CreateButton("Buy Electric Claw", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyElectricClaw")
	end)
	a:CreateButton("Buy Dragon Talon", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyDragonTalon")
	end)
	a:CreateButton("Buy Surprise", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "Bones", "Buy", 1, 1)
	end)
	a:CreateButton("Buy Stat Refund", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "Bones", "Buy", 1, 2)
	end)
	a:CreateButton("Buy Race Reroll", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "Bones", "Buy", 1, 3)
	end)
	a:CreateButton("Buy Black Cape", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Black Cape")
	end)
	a:CreateButton("Buy Iron Mace", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Iron Mace")
	end)
	a:CreateButton("Buy Duel Katana", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Duel Katana")
	end)
	a:CreateButton("Buy Triple Katana", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Triple Katana")
	end)
	a:CreateButton("Buy Pipe", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Pipe")
	end)
	a:CreateButton("Buy Dual Headed Blade", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Dual-Headed Blade")
	end)
	a:CreateButton("Buy Bisento", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Bisento")
	end)
	a:CreateButton("Buy Soul Cane", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Soul Cane")
	end)
	a:CreateButton("Buy Slingshot", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Slingshot")
	end)
	a:CreateButton("Buy Musket", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Musket")
	end)
	a:CreateButton("Buy Flintlock", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Flintlock")
	end)
	a:CreateButton("Buy Refined Flintlock", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Refined Flintlock")
	end)
	a:CreateButton("Buy Cannon", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Cannon")
	end)
	a:CreateButton("Buy Kabucha", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BlackbeardReward", "Slingshot", "\049")
		z.Function(ReplicatedStorage.Remotes.CommF_, "BlackbeardReward", "Slingshot", "\050")
	end)
	a:CreateButton("Buy Swordsman Hat", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Swordsman Hat")
	end)
	a:CreateButton("Buy Cutlass", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Cutlass")
	end)
	a:CreateButton("Buy Katana", function()
		z.Function(ReplicatedStorage.Remotes.CommF_, "BuyItem", "Katana")
	end)
	a:CreateSection("Auto")
	a:CreateToggle("Auto Ken Haki", function(tick)
		N.AutoKenHaki = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoKenHaki do
					task.wait()
					z.Event(ReplicatedStorage.Remotes.CommE, "Ken", true)
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Awakener", function(tick)
		N.AutoAwakener = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoAwakener do
					task.wait()
					z.Function(ReplicatedStorage.Remotes.CommF_, "Awakener", "Check")
					z.Function(ReplicatedStorage.Remotes.CommF_, "Awakener", "Awaken")
				end
			end))()
		end
	end)
	a:CreateToggle("Auto Grab Dropped Fruits", function(tick)
		N.AutoGrabDroppedFruits = tick
		if tick then
			x:MakeTask("Auto Grab Dropped Fruits", workspace.ChildAdded, function(tick)
				if tick:IsA("Tool") and tick:FindFirstChild("Handle") then
					local Y = h(LocalPlayer)
					local CoreGui
					CoreGui = RunService.Stepped:Connect(function()
						if LocalPlayer and (LocalPlayer.Character and (Y and (tick.Parent == workspace and N.AutoGrabDroppedFruits))) then
							tick.Handle.CFrame = Y.CFrame
							task.spawn(function()
								firetouchinterest(tick.Handle, Y, 0)
								firetouchinterest(tick.Handle, Y, 1)
							end)
						end
					end)
					repeat
						task.wait()
					until tick.Parent ~= workspace or not N.AutoGrabDroppedFruits
					CoreGui:Disconnect()
				end
			end)
			for tick, Y in pairs(workspace:GetChildren()) do
				if Y:IsA("Tool") and Y:FindFirstChild("Handle") then
					local tick = h(LocalPlayer)
					local CoreGui
					CoreGui = RunService.Stepped:Connect(function()
						if LocalPlayer and (LocalPlayer.Character and (tick and (Y.Parent == workspace and N.AutoGrabDroppedFruits))) then
							Y.Handle.CFrame = tick.CFrame
							task.spawn(function()
								firetouchinterest(Y.Handle, tick, 0)
								firetouchinterest(Y.Handle, tick, 1)
							end)
						end
					end)
					repeat
						task.wait()
					until Y.Parent ~= workspace or not N.AutoGrabDroppedFruits
					CoreGui:Disconnect()
				end
			end
		else
			x:RemoveTask("Auto Grab Dropped Fruits")
		end
	end)
	a:CreateToggle("Auto Yama", function(tick)
		N.AutoYama = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoYama do
					task.wait()
					if z.Function(ReplicatedStorage.Remotes.CommF_, "EliteHunter", "Progress") >= 30 then
						repeat
							task.wait()
							fireclickdetector(workspace.Map.Waterfall.SealedKatana.Handle.ClickDetector)
						until LocalPlayer.Backpack:FindFirstChild("Yama") or LocalPlayer.Backpack:FindFirstChild("Yama") or not N.AutoYama
					end
				end
			end))()
		end
	end)
	RunService.Stepped:Connect(function()
		local tick = math.floor(workspace:GetRealPhysicsFPS())
		local Y = tick >= 45 and "<font color=\"rgb(\048, \050\053\053, \048)\">" .. (tick .. "</font>") or "<font color=\"rgb(\050\053\053, \048, \048)\">" .. (tick .. "</font>")
		c:Update("Server Info:", "Server: <font color=\"rgb(\048, \050\053\053, \048)\">" .. (N.ServerWorld .. ("</font>\nFPS: " .. (Y .. ("\nLevel: <font color=\"rgb(\048, \050\053\053, \048)\">" .. (LocalPlayer.Data.Level.Value .. ("</font>\nAuto Farm Current Target: " .. (N.CurrentTarget and "<font color=\"rgb(\048, \050\053\053, \048)\">" .. (N.CurrentTarget.Name .. "</font>") or "<font color=\"rgb(\050\053\053, \048, \048)\">null</font>"))))))))
	end)
	LocalPlayer.Character.ChildAdded:Connect(function(tick)
		if tick:IsA("Tool") then
			N.Tools = {}
			Stats()
			F:Change(N.Tools)
		end
	end)
	LocalPlayer.Backpack.ChildAdded:Connect(function(tick)
		if tick:IsA("Tool") then
			N.Tools = {}
			Stats()
			F:Change(N.Tools)
		end
	end)
	LocalPlayer.CharacterAdded:Connect(function()
		task.wait(1.5)
		LocalPlayer.Character.ChildAdded:Connect(function(tick)
			if tick:IsA("Tool") then
				N.Tools = {}
				Stats()
				F:Change(N.Tools)
			end
		end)
		LocalPlayer.Backpack.ChildAdded:Connect(function(tick)
			if tick:IsA("Tool") then
				N.Tools = {}
				Stats()
				F:Change(N.Tools)
			end
		end)
	end)
	Stats()
	F:Change(N.Tools)
	JK()
	N.InCombatAimbot = GK(game, "__namecall", function(tick, ...)
		local Y = getnamecallmethod()
		if not checkcaller() then
			local CoreGui = {
				...
			}
			if Y == "FireServer" then
				if tick.Name == "RemoteEvent" and tick.Parent.Parent == LocalPlayer.Character then
					if N.PVPAimbot and (LocalPlayer.PlayerGui.Main.InCombat.Visible and type(CoreGui[1]) == "Vector\051") then
						local Y = h(LocalPlayer)
						local CoreGui = math.huge
						local TweenService
						for tick, UserInputService in pairs(Players.GetPlayers(Players)) do
							if UserInputService.Name ~= g and (Child.FindFirstChild(Child, "Character") and (Child.Character.FindFirstChild(Child.Character, "Humanoid") and Child.Character.Humanoid.Health > 0)) then
								local tick = (Y.Position - (h(UserInputService)).Position).Magnitude
								if tick < CoreGui then
									CoreGui = tick
									TweenService = UserInputService
								end
							end
						end
						if TweenService then
							return N.InCombatAimbot(tick, (h(TweenService)).Position)
						end
					elseif N.AutoFarmSilentAim and (N.CurrentTarget and N.CurrentTarget.FindFirstChild(N.CurrentTarget, "Humanoid")) then
						return N.InCombatAimbot(tick, N.CurrentTarget.HumanoidRootPart.Position)
					end
				end
			end
		end
		return N.InCombatAimbot(tick, ...)
	end)
end
local function SK()
	local tick = game:GetService("AdService")
	local Y = game:GetService("SocialService")
	local CoreGui = ReplicatedStorage.Remotes.AbilityButtonPress
	local TweenService = (LocalPlayer.PlayerGui:WaitForChild("Hotbar")).Block.UIGradient
	N.LastTick = tick()
	N.CurvingStyle = "Left"
	N.PredictionType = "Force"
	N.BallTarget = ""
	local function VirtualInputManager(tick)
		local Y = workspace.Alive:FindFirstChild(tick)
		return Y and Y.Humanoid.Health ~= 0
	end
	local function UserService()
		if N.ParryRemote then
			local tick = {}
			tick[1] = .5
			if N.AutoCurveBall then
				if N.CurvingStyle == "Up" then
					tick[2] = CFrame.lookAt(workspace.CurrentCamera.CFrame.Position, LocalPlayer.Character.Head.Position * Vector3.new(0, 100, 0))
				elseif N.CurvingStyle == "Down" then
					tick[2] = CFrame.lookAt(workspace.CurrentCamera.CFrame.Position, LocalPlayer.Character.Head.Position * Vector3.new(0, -100, 0))
				elseif N.CurvingStyle == "Left" then
					tick[2] = CFrame.lookAt(workspace.CurrentCamera.CFrame.Position, LocalPlayer.Character.Head.Position * Vector3.new(100, 0, 0))
				elseif N.CurvingStyle == "Right" then
					tick[2] = CFrame.lookAt(workspace.CurrentCamera.CFrame.Position, LocalPlayer.Character.Head.Position * Vector3.new(-100, 0, 0))
				elseif N.CurvingStyle == "Back" then
					tick[2] = CFrame.lookAt(workspace.CurrentCamera.CFrame.Position, LocalPlayer.Character.Head.Position * Vector3.new(0, 0, 100))
				elseif N.CurvingStyle == "Back-Left" then
					tick[2] = CFrame.lookAt(workspace.CurrentCamera.CFrame.Position, LocalPlayer.Character.Head.Position * Vector3.new(100, 0, 100))
				elseif N.CurvingStyle == "Back-Right" then
					tick[2] = CFrame.lookAt(workspace.CurrentCamera.CFrame.Position, LocalPlayer.Character.Head.Position * Vector3.new(-100, 0, 100))
				elseif N.CurvingStyle == "Random" then
					local Y = {
						Vector3.new(0, 100, 0);
						Vector3.new(0, -100, 0),
						Vector3.new(100, 0, 0);
						Vector3.new(-100, 0, 0),
						Vector3.new(0, 0, 100);
						Vector3.new(100, 0, 100);
						Vector3.new(-100, 0, 100)
					}
					tick[2] = CFrame.lookAt(workspace.CurrentCamera.CFrame.Position, LocalPlayer.Character.Head.Position * Y[math.random(1, # Y)])
				end
			else
				tick[2] = workspace.CurrentCamera.CFrame
			end
			tick[3] = (function()
				local tick = {}
				for Y, CoreGui in pairs(workspace.Alive:GetChildren()) do
					tick[CoreGui.Name] = CoreGui.HumanoidRootPart.Position
				end
				return tick
			end)()
			tick[4] = {
				375,
				145
			}
			z.Event(N.ParryRemote, tick[1], tick[2], tick[3], tick[4], false)
		end
	end
	local function TextService(tick)
		a.Box[tick.Name] = {}
		a.Box[tick.Name].TopLeft = Drawing.new("Line")
		a.Box[tick.Name].TopRight = Drawing.new("Line")
		a.Box[tick.Name].BottomLeft = Drawing.new("Line")
		a.Box[tick.Name].BottomRight = Drawing.new("Line")
		a.Box[tick.Name].Service = RunService.RenderStepped:Connect(function()
			if tick and tick.Character then
				local Y = h(tick)
				if Y then
					local CoreGui, TweenService = CFrame.lookAt((CFrame.new(Y.CFrame.X, Y.CFrame.Y, Y.CFrame.TweenService)).Position, workspace.CurrentCamera.CFrame.Position), Vector3.new(3.5, 1.5, 1.5) * 1.35
					local UserInputService, VirtualInputManager = workspace.CurrentCamera:WorldToViewportPoint(CoreGui * (CFrame.new(TweenService.X, TweenService.Y, 0)).Position)
					local UserService, TextService = workspace.CurrentCamera:WorldToViewportPoint(CoreGui * (CFrame.new(- TweenService.X, TweenService.Y, 0)).Position)
					local RunService, StarterGui = workspace.CurrentCamera:WorldToViewportPoint(CoreGui * (CFrame.new(TweenService.X, - TweenService.Y, 0)).Position)
					local HttpService, ReplicatedStorage = workspace.CurrentCamera:WorldToViewportPoint(CoreGui * (CFrame.new(- TweenService.X, - TweenService.Y, 0)).Position)
					local ScriptContext = N.CurrentBallTarget == tick.Name and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 0)
					a.Box[tick.Name].TopLeft.From = Vector2.new(UserInputService.X, UserInputService.Y)
					a.Box[tick.Name].TopLeft.To = Vector2.new(UserService.X, UserService.Y)
					a.Box[tick.Name].TopLeft.Visible = VirtualInputManager
					a.Box[tick.Name].TopLeft.Color = ScriptContext
					a.Box[tick.Name].TopRight.From = Vector2.new(UserService.X, UserService.Y)
					a.Box[tick.Name].TopRight.To = Vector2.new(HttpService.X, HttpService.Y)
					a.Box[tick.Name].TopRight.Visible = TextService
					a.Box[tick.Name].TopRight.Color = ScriptContext
					a.Box[tick.Name].BottomLeft.From = Vector2.new(RunService.X, RunService.Y)
					a.Box[tick.Name].BottomLeft.To = Vector2.new(UserInputService.X, UserInputService.Y)
					a.Box[tick.Name].BottomLeft.Visible = StarterGui
					a.Box[tick.Name].BottomLeft.Color = ScriptContext
					a.Box[tick.Name].BottomRight.From = Vector2.new(HttpService.X, HttpService.Y)
					a.Box[tick.Name].BottomRight.To = Vector2.new(RunService.X, RunService.Y)
					a.Box[tick.Name].BottomRight.Visible = ReplicatedStorage
					a.Box[tick.Name].BottomRight.Color = ScriptContext
				else
					a.Box[tick.Name].TopLeft.Visible = false
					a.Box[tick.Name].TopRight.Visible = false
					a.Box[tick.Name].BottomLeft.Visible = false
					a.Box[tick.Name].BottomRight.Visible = false
				end
			else
				a.Box[tick.Name].TopLeft.Visible = false
				a.Box[tick.Name].TopRight.Visible = false
				a.Box[tick.Name].BottomLeft.Visible = false
				a.Box[tick.Name].BottomRight.Visible = false
			end
		end)
		a.Box[tick.Name].TopLeft.Thickness = 2
		a.Box[tick.Name].TopLeft.Transparency = 1
		a.Box[tick.Name].TopRight.Thickness = 2
		a.Box[tick.Name].TopRight.Transparency = 1
		a.Box[tick.Name].BottomLeft.Thickness = 2
		a.Box[tick.Name].BottomLeft.Transparency = 1
		a.Box[tick.Name].BottomRight.Thickness = 2
		a.Box[tick.Name].BottomRight.Transparency = 1
	end
	local function StarterGui(tick)
		a.Tracer[tick.Name] = {}
		a.Tracer[tick.Name].Line = Drawing.new("Line")
		a.Tracer[tick.Name].Service = RunService.RenderStepped:Connect(function()
			if tick and tick.Character then
				local Y = h(tick)
				if Y then
					local CoreGui, TweenService = workspace.CurrentCamera:WorldToViewportPoint(Y.CFrame * (CFrame.new(0, - Y.Size.Y, 0)).Position)
					a.Tracer[tick.Name].Line.Color = N.CurrentBallTarget == tick.Name and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 0)
					a.Tracer[tick.Name].Line.From = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y)
					a.Tracer[tick.Name].Line.To = Vector2.new(CoreGui.X, CoreGui.Y)
					a.Tracer[tick.Name].Line.Visible = TweenService
				else
					a.Tracer[tick.Name].Line.Visible = false
				end
			else
				a.Tracer[tick.Name].Line.Visible = false
			end
		end)
		a.Tracer[tick.Name].Line.Thickness = 2
		a.Tracer[tick.Name].Line.Transparency = 1
	end
	local function HttpService()
		a.Tracer["Ball Core"] = {}
		a.Tracer["Ball Core"].Line = Drawing.new("Line")
		a.Tracer["Ball Core"].Service = RunService.RenderStepped:Connect(function()
			local tick = N.CurrentBall
			if tick then
				local Y, CoreGui = workspace.CurrentCamera:WorldToViewportPoint(tick.CFrame * (CFrame.new(0, - tick.Size.Y, 0)).Position)
				a.Tracer["Ball Core"].Line.Color = Color3.fromRGB(0, 0, 255)
				a.Tracer["Ball Core"].Line.From = Vector2.new(workspace.CurrentCamera.ViewportSize.X / 2, workspace.CurrentCamera.ViewportSize.Y)
				a.Tracer["Ball Core"].Line.To = Vector2.new(Y.X, Y.Y)
				a.Tracer["Ball Core"].Line.Visible = CoreGui
			else
				a.Tracer["Ball Core"].Line.Visible = false
			end
		end)
		a.Tracer["Ball Core"].Line.Thickness = 2
		a.Tracer["Ball Core"].Line.Transparency = 1
	end
	local function ScriptContext(tick)
		a.ESP[tick.Name] = {}
		a.ESP[tick.Name].Text = Drawing.new("Text")
		a.ESP[tick.Name].Service = RunService.RenderStepped:Connect(function()
			if tick and tick.Character then
				local Y = h(tick)
				if Y then
					local CoreGui, TweenService = workspace.CurrentCamera:WorldToViewportPoint((Y.CFrame * CFrame.new(0, 6.5, 0)) * (CFrame.new(0, - Y.Size.Y, 0)).Position)
					local UserInputService = (Y.Position - workspace.CurrentCamera.CFrame.Position).Magnitude / 20
					a.ESP[tick.Name].Text.Visible = TweenService
					a.ESP[tick.Name].Text.Color = N.CurrentBallTarget == tick.Name and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 0)
					a.ESP[tick.Name].Text.Position = Vector2.new(CoreGui.X, CoreGui.Y)
					a.ESP[tick.Name].Text.Size = UserInputService >= 17 and 3 or 20 - UserInputService
				else
					a.ESP[tick.Name].Text.Visible = false
				end
			else
				a.ESP[tick.Name].Text.Visible = false
			end
		end)
		a.ESP[tick.Name].Text.OutlineColor = Color3.fromRGB(255, 255, 255)
		a.ESP[tick.Name].Text.Outline = true
		a.ESP[tick.Name].Text.Size = 30
		a.ESP[tick.Name].Text.Font = 3
		a.ESP[tick.Name].Text.Text = tick.Name
		a.ESP[tick.Name].Text.Transparency = 1
		a.ESP[tick.Name].Text.Center = true
	end
	local VirtualUser = Library:CreateTab("Player Mods", "rbxassetid://\049\051\054\054\057\054\051\051\055\054\050")
	local Lighting = Library:CreateTab("Visuals", "rbxassetid://\049\051\054\054\057\054\051\049\054\052\057")
	local ContextActionService = Library:CreateTab("Combat", "rbxassetid://\049\051\054\054\057\054\050\052\050\056\049")
	local Farm = Library:CreateTab("Farm", "rbxassetid://\049\051\054\054\057\054\050\054\056\048\049")
	local E = VirtualUser:CreateToggle("Enable WalkSpeed", function(tick)
		if tick then
			LocalPlayer.Character.Humanoid.WalkSpeed = N.WalkSpeed
			x:MakeTask("WalkSpeed OnRespawn", LocalPlayer.CharacterAdded, function()
				task.wait(.5)
				LocalPlayer.Character.Humanoid.WalkSpeed = N.WalkSpeed
			end)
		else
			x:RemoveTask("WalkSpeed OnRespawn")
			LocalPlayer.Character.Humanoid.WalkSpeed = 16
		end
	end)
	local Q = VirtualUser:CreateSlider("WalkSpeed", 1, 255, 16, function(tick)
		N.WalkSpeed = tick
		if E:GetStatus() then
			LocalPlayer.Character.Humanoid.WalkSpeed = tick
		end
	end)
	VirtualUser:CreateToggle("Toggle Infinite Jump", function(tick)
		if tick then
			x:MakeTask("Infinite Jump", UserInputService.JumpRequest, function()
				LocalPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
			end)
		else
			x:RemoveTask("Infinite Jump")
		end
	end)
	VirtualUser:CreateToggle("Toggle Noclip", function(tick)
		KK(tick)
	end)
	VirtualUser:CreateToggle("Bypass Pulse Ability <font color=\"rgb(\048, \048, \050\053\053)\">(Premium)</font>", function(tick)
		if tick then
			if H then
				x:MakeTask("Bypass Pulse", RunService.RenderStepped, function()
					pcall(function()
						LocalPlayer.PlayerGui.Hotbar.Ability.Red.Visible = false
					end)
				end)
			end
		else
			x:RemoveTask("Bypass Pulse")
		end
	end)
	VirtualUser:CreateSection("Buy")
	VirtualUser:CreateButton("Buy Normal Sword Crate (\056\048 Coins)", function()
		z.Function(ReplicatedStorage.Remote.RemoteFunction, "PromptPurchaseCrate", workspace.Spawn.Crates.NormalSwordCrate)
	end)
	VirtualUser:CreateButton("Buy Normal Exploision Crate (\056\048 Coins)", function()
		z.Function(ReplicatedStorage.Remote.RemoteFunction, "PromptPurchaseCrate", workspace.Spawn.Crates.NormalExplosionCrate)
	end)
	VirtualUser:CreateToggle("Auto Buy Normal Sword Crate (\056\048 Coins)", function(tick)
		N.AutoBuyNormalSwordCrate = tick
		if tick then
			(coroutine.wrap(function()
				while N.AutoBuyNormalSwordCrate do
					task.wait()
					z.Function(ReplicatedStorage.Remote.RemoteFunction, "PromptPurchaseCrate", workspace.Spawn.Crates.NormalSwordCrate)
					task.wait(1)
				end
			end))()
		end
	end)
	VirtualUser:CreateButton("Auto Buy Normal Exploision Crate (\056\048 Coins)", function()
		N.AutoBuyNormalExplosionCrate = Boolean
		if Boolean then
			(coroutine.wrap(function()
				while N.AutoBuyNormalExplosionCrate do
					task.wait()
					z.Function(ReplicatedStorage.Remote.RemoteFunction, "PromptPurchaseCrate", workspace.Spawn.Crates.NormalExplosionCrate)
					task.wait(1)
				end
			end))()
		end
	end)
	VirtualUser:CreateParagraph("Bypass Pulse Ability", "You are immune on others that uses <font color=\"rgb(\050\053\053, \048, \048)\">Pulse</font> ability.")
	Lighting:CreateSection("ESP")
	Lighting:CreateToggle("ESP Everyone", function(tick)
		if tick then
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g then
					ScriptContext(Y)
				end
			end
			x:MakeTask("ESP Handler \049", Players.PlayerAdded, ScriptContext)
			x:MakeTask("ESP Handler \050", Players.PlayerRemoving, function(tick)
				if a.ESP[tick.Name] then
					a.ESP[tick.Name].Text:Remove()
					a.ESP[tick.Name].Service:Disconnect()
					a.ESP[tick.Name] = nil
				end
			end)
		else
			x:RemoveTask("ESP Handler \049")
			x:RemoveTask("ESP Handler \050")
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g and a.ESP[Y.Name] then
					a.ESP[Y.Name].Text:Remove()
					a.ESP[Y.Name].Service:Disconnect()
					a.ESP[Y.Name] = nil
				end
			end
		end
	end)
	Lighting:CreateSection("ESP Box")
	Lighting:CreateToggle("ESP Box Everyone", function(tick)
		if tick then
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g then
					TextService(Y)
				end
			end
			x:MakeTask("Boxes Handler \049", Players.PlayerAdded, TextService)
			x:MakeTask("Boxes Handler \050", Players.PlayerRemoving, function(tick)
				if a.Box[tick.Name] then
					a.Box[tick.Name].TopLeft:Remove()
					a.Box[tick.Name].TopRight:Remove()
					a.Box[tick.Name].BottomLeft:Remove()
					a.Box[tick.Name].BottomRight:Remove()
					a.Box[tick.Name].Service:Disconnect()
					a.Box[tick.Name] = nil
				end
			end)
		else
			x:RemoveTask("Boxes Handler \049")
			x:RemoveTask("Boxes Handler \050")
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g and a.Box[Y.Name] then
					a.Box[Y.Name].TopLeft:Remove()
					a.Box[Y.Name].TopRight:Remove()
					a.Box[Y.Name].BottomLeft:Remove()
					a.Box[Y.Name].BottomRight:Remove()
					a.Box[Y.Name].Service:Disconnect()
					a.Box[Y.Name] = nil
				end
			end
		end
	end)
	Lighting:CreateSection("Tracer")
	Lighting:CreateToggle("Tracer Everyone", function(tick)
		if tick then
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g then
					StarterGui(Y)
				end
			end
			x:MakeTask("Tracer Handler \049", Players.PlayerAdded, StarterGui)
			x:MakeTask("Tracer Handler \050", Players.PlayerRemoving, function(tick)
				if a.Tracer[tick.Name] then
					a.Tracer[tick.Name].Line:Remove()
					a.Tracer[tick.Name].Service:Disconnect()
					a.Tracer[tick.Name] = nil
				end
			end)
		else
			x:RemoveTask("Tracer Handler \049")
			x:RemoveTask("Tracer Handler \050")
			for tick, Y in pairs(Players:GetPlayers()) do
				if Y.Name ~= g and a.Tracer[Y.Name] then
					a.Tracer[Y.Name].Line:Remove()
					a.Tracer[Y.Name].Service:Disconnect()
					a.Tracer[Y.Name] = nil
				end
			end
		end
	end)
	Lighting:CreateToggle("Tracer Ball", function(tick)
		if tick then
			HttpService()
		else
			a.Tracer["Ball Core"].Line:Remove()
			a.Tracer["Ball Core"].Service:Disconnect()
			a.Tracer["Ball Core"] = nil
		end
	end)
	ContextActionService:CreateSection("Ability Modification")
	for tick, Y in pairs(LocalPlayer.Character.Abilities:GetChildren()) do
		if Y:IsA("LocalScript") and (Y.Disabled == false or Y.Disabled == true) then
			ContextActionService:CreateToggle("No Cooldown " .. Y.Name, function(tick)
				if tick then
					x:SetValue("Original Level of " .. Y.Name, LocalPlayer.Upgrades[Y.Name].Value)
					LocalPlayer.Upgrades[Y.Name].Value = 999999
				else
					LocalPlayer.Upgrades[Y.Name].Value = x:GetValue("Original Level of " .. Y.Name)
				end
			end)
		end
	end
	ContextActionService:CreateSection("Ability Changer")
	local s = ContextActionService:CreateLabel("Current Ability: <font color=\"rgb(\050\053\053, \048, \048)\">Telekinesis</font>")
	repeat
		task.wait()
	until LocalPlayer and LocalPlayer.Character
	for tick, Y in pairs(LocalPlayer.Character.Abilities:GetChildren()) do
		if Y:IsA("LocalScript") then
			ContextActionService:CreateButton(Y.Name, function()
				x:SetValue("Ability Chosen", Y.Name)
				s:Update("Current Ability: <font color=\"rgb(\050\053\053, \048, \048)\">" .. (Y.Name .. "</font>"))
				for tick, CoreGui in pairs(LocalPlayer.Character.Abilities:GetChildren()) do
					if CoreGui:IsA("LocalScript") then
						if CoreGui.Name == Y.Name then
							CoreGui.Enabled = true
						else
							CoreGui.Enabled = false
						end
					end
				end
				if workspace:FindFirstChild("AbilityThingyk\049\050\049\050") then
					(workspace:FindFirstChild("AbilityThingyk\049\050\049\050")).Value = Y.Name
				end
			end)
		end
	end
	task.spawn(function()
		local tick
		if workspace:FindFirstChild("AbilityThingyk\049\050\049\050") then
			tick = Instance.new("StringValue")
			tick.Name = "AbilityThingyk\049\050\049\050"
			workspace.AbilityThingyk1212:Remove()
		end
		if tick then
			tick.Parent = workspace
		end
	end)
	for tick, Y in pairs(LocalPlayer.Character.Abilities:GetChildren()) do
		if Y:IsA("LocalScript") then
			if not Y.Disabled then
				x:SetValue("Ability Chosen", Y.Name)
				s:Update("Current Ability: <font color=\"rgb(\050\053\053, \048, \048)\">" .. (Y.Name .. "</font>"))
				if workspace:FindFirstChild("AbilityThingyk\049\050\049\050") then
					(workspace:FindFirstChild("AbilityThingyk\049\050\049\050")).Value = Y.Name
				end
			end
		end
	end
	Farm:CreateParagraph("Note", "This script is recommended on low ping users.")
	Farm:CreateToggle("Auto Parry", function(tick)
		if tick then
			x:MakeTask("Auto Parry", RunService.Heartbeat, function()
				if LocalPlayer and LocalPlayer.Character then
					local tick = h(LocalPlayer)
					local Y = N.CurrentBall
					local UserInputService = N.CurrentBallTarget
					if Y and (TweenService.Offset.Y == .5 and (not N.OnClash and not N.OnFlashed)) then
						local TweenService, VirtualInputManager = N.PredictionType == "Force" and Y.Velocity.Magnitude or N.PredictionType == "Assembly" and Y.AssemblyLinearVelocity.Magnitude or N.PredictionType == "Speed" and Y.zoomies.VectorVelocity.Magnitude, (tick.Position - Y.Position).Magnitude
						if TweenService > 0 then
							TweenService = ((TweenService * .05 + TweenService / 4.5) + 10) + (N.PingBased and Stats.Network.ServerStatsItem["Data Ping"]:GetValue() / 1000 or 0)
						end
						if UserInputService == g then
							if TweenService > VirtualInputManager then
								if N.Debounce then
									N.Debounce = false
									if N.AutoRage then
										if LocalPlayer.PlayerGui.Hotbar.Ability.UIGradient.Offset.Y == .5 then
											if LocalPlayer.Character.Abilities["Raging Deflection"].Enabled or LocalPlayer.Character.Abilities.Rapture.Enabled then
												if not LocalPlayer.PlayerGui.Hotbar.Ability.Red.Visible then
													if Y.Velocity.Magnitude >= 150 then
														CoreGui:Fire()
													else
														UserService()
													end
												else
													UserService()
												end
											else
												UserService()
											end
										else
											UserService()
										end
									else
										UserService()
									end
								end
							end
						end
					end
				end
			end)
		else
			x:DestroyTask("Auto Parry")
		end
	end)
	Farm:CreateSection("Configuration")
	Farm:CreateToggle("Auto Curve Ball", function(tick)
		N.AutoCurveBall = tick
	end)
	Farm:CreateDropdown("Curving Style", {
		"Left",
		"Down",
		"Up",
		"Right",
		"Back",
		"Back-Left";
		"Back-Right";
		"Random"
	}, function(tick)
		N.CurvingStyle = tick
	end)
	Farm:CreateDropdown("Auto Parry Range Prediction Type", {
		"Force",
		"Assembly";
		"Speed"
	}, function(tick)
		N.PredictionType = tick
	end)
	Farm:CreateParagraph("Auto Parry Range Prediction Type", "We recommend using <font color=\"rgb(\048, \050\053\053, \048)\">Speed</font> nor <font color=\"rgb(\048, \050\053\053, \048)\">Assembly</font>.")
	Farm:CreateToggle("Additional Range Ping Based", function(tick)
		N.PingBased = tick
	end)
	Farm:CreateToggle("Spam Parry on Clash <font color=\"rgb(\048, \048, \050\053\053)\">(Optional)</font>", function(tick)
		N.SpamParryOnClash = tick
	end)
	Farm:CreateSlider("Auto Parry Hit/s Before Clash", 1, 5, 2, function(tick)
		N.HitsTillClash = tick
	end)
	Farm:CreateToggle("Auto Notify When Parried", function(tick)
		N.AutoNotifyWhenParried = tick
	end)
	Farm:CreateToggle("Auto Notify On Detected Clash", function(tick)
		N.AutoNotifOnClash = tick
	end)
	Farm:CreateToggle("Auto Flash Counter", function(tick)
		if tick then
			x:MakeTask("Auto Flash Counter", RunService.Heartbeat, function()
				if LocalPlayer and LocalPlayer.Character then
					local tick = h(LocalPlayer)
					local Y = N.CurrentBall
					if Y then
						local TweenService = N.CurrentBallTarget
						if TweenService == g then
							if LocalPlayer.Character.Abilities["Flash Counter"].Enabled then
								if not LocalPlayer.PlayerGui.Hotbar.Ability.Red.Visible then
									if LocalPlayer.PlayerGui.Hotbar.Ability.UIGradient.Offset.Y == .5 then
										local TweenService = Y.AssemblyLinearVelocity.Magnitude / 5
										if TweenService > 40 then
											local UserInputService = (tick.Position - Y.Position).Magnitude
											local VirtualInputManager = 50 + TweenService * .125
											local UserService = 75 + TweenService * .225
											if UserInputService > VirtualInputManager and UserInputService < UserService then
												if not N.OnFlashed then
													N.OnFlashed = true
													CoreGui:Fire()
												end
											end
										end
									end
								end
							end
						else
							N.OnFlashed = false
						end
					end
				end
			end)
		else
			x:RemoveTask("Auto Flash Counter")
		end
	end)
	Farm:CreateToggle("Auto Pull/Telekinesis", function(tick)
		if tick then
			x:MakeTask("Auto Pull/Telekinesis", RunService.RenderStepped, function()
				if LocalPlayer and LocalPlayer.Character then
					local tick = N.CurrentBall
					if tick then
						local Y = N.CurrentBallTarget
						if Y ~= g then
							local TweenService, UserInputService = (N.PingBased and Stats.Network.ServerStatsItem["Data Ping"]:GetValue() / 45 or 0) + (N.PredictionType == "Force" and tick.Velocity.Magnitude or N.PredictionType == "Assembly" and tick.AssemblyLinearVelocity.Magnitude or N.PredictionType == "Speed" and tick.zoomies.VectorVelocity.Magnitude), (workspace.Alive[Y].HumanoidRootPart.Position - tick.Position).Magnitude
							TweenService = TweenService / 4.5
							if TweenService > 0 then
								TweenService = TweenService + 20
							end
							if tick.Velocity.Magnitude >= 50 then
								if TweenService > UserInputService then
									if (LocalPlayer.Character.Abilities.Pull.Enabled or LocalPlayer.Character.Abilities.Telekinesis.Enabled) and (not LocalPlayer.PlayerGui.Hotbar.Ability.Red.Visible and LocalPlayer.PlayerGui.Hotbar.Ability.UIGradient.Offset.Y == .5) then
										CoreGui:Fire()
									end
								end
							end
						end
					end
				end
			end)
		else
			x:RemoveTask("Auto Pull/Telekinesis")
		end
	end)
	Farm:CreateParagraph("Auto Pull/Telekinesis", "it is like a trap for others when they about to hit the ball and your ability <font color=\"rgb(\050\053\053, \048, \048)\">(Pull/Telekinesis)</font> will trigger automatically. <font color=\"rgb(\048, \048, \050\053\053)\">(must own these ability and equipped)</font>")
	Farm:CreateToggle("Auto Raging Deflection/Rapture", function(tick)
		N.AutoRage = tick
	end)
	Farm:CreateParagraph("Auto Raging Deflection/Rapture", "Your ability <font color=\"rgb(\050\053\053, \048, \048)\">(Raging Deflection/Rapture)</font> will trigger when the ball reached <font color=\"rgb(\048, \050\053\053, \048)\">\049\053\048</font> speed. <font color=\"rgb(\048, \048, \050\053\053)\">(must own these ability and equipped)</font>")
	Farm:CreateToggle("Auto Look At Ball", function(tick)
		if tick then
			x:MakeTask("Auto LookAt Ball", RunService.RenderStepped, function()
				if LocalPlayer and LocalPlayer.Character then
					local tick = h(LocalPlayer)
					local Y = N.CurrentBall
					if Y then
						local CoreGui = Y.Position
						LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.lookAt(tick.Position, Vector3.new(CoreGui.X, tick.CFrame.Y, CoreGui.TweenService))
					end
				end
			end)
		else
			x:RemoveTask("Auto LookAt Ball")
		end
	end)
	Farm:CreateToggle("AI Auto Play <font color=\"rgb(\048, \048, \050\053\053)\">(Premium)</font>", function(tick)
		N.AutoPlay = tick
		if tick and H then
			(coroutine.wrap(function()
				while N.AutoPlay do
					task.wait()
					if LocalPlayer and (LocalPlayer.Character and VirtualInputManager(g)) then
						local tick = h(LocalPlayer)
						local Y = N.CurrentBall
						if Y then
							local CoreGui = N.CurrentBallTarget
							if N.AiDirection == "Ball" then
								LocalPlayer.Character.Humanoid:MoveTo(N.OnBallMove == "Backward" and tick.Position + Vector3.new(math.random(1, 3), 0, -3) or N.OnBallMove == "Forward" and Y.Position)
								task.wait(1)
							elseif N.AiDirection == "Ball\'s Target" then
								LocalPlayer.Character.Humanoid:MoveTo(workspace.Alive[CoreGui].HumanoidRootPart.Position + Vector3.new(math.random(1, 3), 0, 0))
								task.wait(1)
							end
						end
					end
				end
			end))()
		end
	end)
	Farm:CreateDropdown("If Ball Targetting You Move To", {
		"Forward";
		"Backward"
	}, function(tick)
		N.OnBallMove = tick
	end)
	Farm:CreateDropdown("AI Follows the", {
		"Ball";
		"Ball\'s Target"
	}, function(tick)
		N.AiDirection = tick
	end)
	Farm:CreateToggle("Intense Orbit Ball", function(tick)
		if tick then
			x:MakeTask("Intense Orbit Ball", RunService.Heartbeat, function()
				if LocalPlayer and LocalPlayer.Character then
					local tick = N.CurrentBall
					if tick then
						local Y = N.CurrentBallTarget
						if Y == g then
							workspace.CurrentCamera.CameraSubject = tick
							m(LocalPlayer, "CFrame", tick.CFrame * CFrame.new(math.random(-15, 15), math.random(-15, 15), math.random(-15, 15)))
						else
							local tick = Players[Y]
							if tick and tick.Character then
								m(LocalPlayer, "CFrame", tick.Character.HumanoidRootPart.CFrame * CFrame.new(math.random(-15, 15), math.random(-15, 15), math.random(-15, 15)))
							end
						end
					end
				end
			end)
		else
			x:RemoveTask("Intense Orbit Ball")
			if LocalPlayer and LocalPlayer.Character then
				workspace.CurrentCamera.CameraSubject = LocalPlayer.Character
			end
		end
	end)
	Farm:CreateToggle("Show Sphere Hitbox Aura", function(tick)
		N.ShowSphereAura = tick
		if tick then
			local tick = Instance.new("Part")
			tick.Name = "SH Aura Sphere"
			tick.Parent = workspace
			tick.Color = Color3.fromRGB(0, 0, 255)
			tick.Shape = Enum.PartType.Ball
			tick.CanCollide = false
			tick.Anchored = true
			tick.CastShadow = false
			tick.Transparency = .6
			tick.Material = "ForceField"
			x:MakeTask("Show Sphere Hitbox Aura", RunService.Heartbeat, function()
				if LocalPlayer and LocalPlayer.Character then
					local Y = h(LocalPlayer)
					local CoreGui = N.CurrentBall
					tick.CFrame = Y.CFrame
					if CoreGui then
						local TweenService = N.CurrentBallTarget
						local UserInputService, VirtualInputManager = N.PredictionType == "Force" and CoreGui.Velocity.Magnitude or N.PredictionType == "Assembly" and CoreGui.AssemblyLinearVelocity.Magnitude or N.PredictionType == "Speed" and CoreGui.zoomies.VectorVelocity.Magnitude, (Y.Position - CoreGui.Position).Magnitude
						if UserInputService > 0 then
							UserInputService = ((UserInputService * .05 + UserInputService / 4.5) + 10) + (N.PingBased and Stats.Network.ServerStatsItem["Data Ping"]:GetValue() / 1000 or 0)
						end
						tick.Size = Vector3.new(UserInputService, UserInputService, UserInputService)
						if N.OnClash then
							tick.Color = Color3.fromRGB(255, 0, 0)
						else
							if TweenService == g then
								tick.Color = Color3.fromRGB(0, 255, 0)
							else
								tick.Color = Color3.fromRGB(0, 0, 255)
							end
						end
					else
						tick.Color = Color3.fromRGB(0, 255, 0)
					end
				end
			end)
		else
			x:RemoveTask("Show Sphere Hitbox Aura")
			if workspace:FindFirstChild("SH Aura Sphere") then
				workspace["SH Aura Sphere"]:Destroy()
			end
		end
	end)
	local PlayerMods = Farm:CreateToggle("Spam Parry", function(tick)
		N.SpamParry = tick
	end)
	Farm:CreateKeybind("Spam Parry", Enum.KeyCode.StarterGui, function()
		PlayerMods:Toggle()
		if PlayerMods:GetStatus() then
			I("Spam Parry has been Enabled.")
		else
			I("Spam Parry has been Disabled.")
		end
	end)
	Farm:CreateToggle("Auto Titan Blade Mode <font color=\"rgb(\048, \048, \050\053\053)\">(Premium)</font>", function(tick)
		if tick and H then
			if LocalPlayer and LocalPlayer.Character then
				if LocalPlayer.Character.Abilities["Titan Blade"].Enabled then
					x:MakeTask("Auto Titan Blade Mode", RunService.RenderStepped, function()
						z.Event(ReplicatedStorage.Remotes.TitanBlade)
					end)
				else
					B("You must equip Titan Blade Ability to use this (must owned Titan Blade Ability).")
				end
			end
		else
			x:RemoveTask("Auto Titan Blade Mode")
		end
	end)
	RunService.RenderStepped:Connect(function()
		if LocalPlayer and LocalPlayer.Character then
			local tick = h(LocalPlayer)
			local Y = N.CurrentBall
			local CoreGui = N.CurrentBallTarget
			if N.OnClash and (# workspace.Alive:GetChildren() < 2 or CoreGui ~= g and N.LastTarget ~= CoreGui or not VirtualInputManager(g) or not VirtualInputManager(N.LastTarget) or (tick.Position - workspace.Alive[N.LastTarget].HumanoidRootPart.Position).Magnitude >= 35 or not Y) then
				N.OnClash = false
				N.LastTarget = nil
				N.LastTick = 0
				N.LastAttack = 0
				if N.AutoNotifOnClash then
					local tick = tick() - N.ClashRecord
					local Y = "" .. (tick .. "")
					local CoreGui = ""
					local TweenService, UserInputService = false, 0
					for tick = 1, string.len(Y), 1 do
						if string.sub(Y, tick, tick) == "." and not TweenService then
							TweenService = true
							CoreGui = CoreGui .. "."
						else
							if TweenService and UserInputService < 2 then
								UserInputService = UserInputService + 1
								CoreGui = CoreGui .. string.sub(Y, tick, tick)
							elseif not TweenService then
								CoreGui = CoreGui .. string.sub(Y, tick, tick)
							end
						end
					end
				end
				B("Clash Ended! The match took " .. (TookTime .. "s."))
				N.ClashRecord = tick()
			end
		end
	end)
	RunService.Stepped:Connect(function()
		if N.SpamParry or N.OnClash then
			UserService()
		end
	end)
	RunService.Heartbeat:Connect(function()
		if not N.ParryRemote then
			for tick, Y in pairs(tick:GetChildren()) do
				if Y:IsA("RemoteEvent") and Y.Name:match("\n") then
					N.ParryRemote = Y
				end
			end
			if not N.ParryRemote then
				for tick, Y in pairs(Y:GetChildren()) do
					if Y:IsA("RemoteEvent") and Y.Name:match("\n") then
						N.ParryRemote = Y
					end
				end
			end
		end
	end)
	workspace.Balls.ChildAdded:Connect(function(tick)
		task.wait()
		if tick:GetAttribute("realBall") then
			N.CurrentBallTarget = tick:GetAttribute("target")
			N.CurrentBall = tick
			N.Debounce = true
			N.OnFlashed = false
			N.OnClash = false;
			(tick:GetAttributeChangedSignal("target")):Connect(function()
				local Y = tick:GetAttribute("target")
				N.CurrentBallTarget = tick:GetAttribute("target")
				if not N.Debounce and Y ~= g then
					N.Debounce = true
					N.OnFlashed = false
					if N.AutoNotifyWhenParried then
						(coroutine.wrap(B))("Ball Parried.")
					end
					if not N.OnClash then
						if N.SpamParryOnClash then
							local CoreGui = tick() - N.LastTick
							if CoreGui < .5 then
								if Y == N.LastTarget then
									N.LastAttack = N.LastAttack + 1
									if N.LastAttack >= N.HitsTillClash then
										local Y = h(LocalPlayer)
										local CoreGui = (Y.Position - tick.Position).Magnitude
										if CoreGui <= 40 then
											local tick = (Y.Position - workspace.Alive[N.LastTarget].HumanoidRootPart.Position).Magnitude
											if tick <= 30 then
												if N.AutoNotifOnClash then
													B("Clashing with " .. (N.LastTarget .. "! Spamming Block..."))
												end
												N.OnClash = true
												N.ClashRecord = tick()
											end
										end
									end
								end
							else
								N.LastAttack = 0
							end
						end
					end
					N.LastTick = tick()
					N.LastTarget = Y
				end
				N.Debounce = true
			end)
		end
	end)
	workspace.Balls.ChildRemoved:Connect(function(tick)
		if tick:GetAttribute("realBall") then
			N.CurrentBall = nil
		end
	end)
	for tick, Y in pairs(workspace.Balls:GetChildren()) do
		if Y:GetAttribute("realBall") then
			N.CurrentBallTarget = Y:GetAttribute("target")
			N.CurrentBall = Y
			N.Debounce = true
			N.OnFlashed = false
			N.OnClash = false;
			(Y:GetAttributeChangedSignal("target")):Connect(function()
				local tick = Y:GetAttribute("target")
				N.CurrentBallTarget = Y:GetAttribute("target")
				if not N.Debounce and tick ~= g then
					N.Debounce = true
					N.OnFlashed = false
					if N.AutoNotifyWhenParried then
						(coroutine.wrap(B))("Ball Parried.")
					end
					if not N.OnClash then
						if N.SpamParryOnClash then
							local CoreGui = tick() - N.LastTick
							if CoreGui < .5 then
								if tick == N.LastTarget then
									N.LastAttack = N.LastAttack + 1
									if N.LastAttack >= N.HitsTillClash then
										local tick = h(LocalPlayer)
										local CoreGui = (tick.Position - Y.Position).Magnitude
										if CoreGui <= 40 then
											local Y = (tick.Position - workspace.Alive[N.LastTarget].HumanoidRootPart.Position).Magnitude
											if Y <= 30 then
												if N.AutoNotifOnClash then
													B("Clashing with " .. (N.LastTarget .. "! Spamming Block..."))
												end
												N.OnClash = true
												N.ClashRecord = tick()
											end
										end
									end
								end
							else
								N.LastAttack = 0
							end
						end
					end
					N.LastTick = tick()
					N.LastTarget = tick
				end
				N.Debounce = true
			end)
		end
	end
	JK()
end
Library:OnPreload(function(tick, Y, CoreGui)
	l = CoreGui
	d = tick
	i = Y
	Library:OnGameInvoke(142823291, AK)
	Library:OnGameInvoke(game.PlaceId == 2753915549 and 2753915549 or game.PlaceId == 4442272183 and 4442272183 or game.PlaceId == 7449423635 and 7449423635, qK)
	Library:OnGameInvoke(i:match("Blade Ball: ") and game.PlaceId or 13772394625, SK)
	N.ESPFolder = Instance.new("Folder")
	N.ESPFolder.Name = "SH \051D Visual"
	N.ESPFolder.Parent = workspace
	N.FormSubject = "Bugs"
	N.FormText = ""
	N.FormTooFast = tick()
	k = (loadstring(w("https://raw.githubusercontent.com/xwel\051\051/hud/main/Notification")))()
	z.Event = Instance.new("RemoteEvent")
	z.Function = Instance.new("RemoteFunction")
	z.Event.FireServer(z.Event)
	z.Function.InvokeServer(z.Function)
end)
Library:OnLoad(function(Y, CoreGui, TweenService, UserInputService, VirtualInputManager, UserService)
	task.wait()
	F = UserService
	g = Y
	c = CoreGui
	H = TweenService
	y = UserInputService
	b = VirtualInputManager
	local function TextService()
		return F
	end
	local RunService
	RunService = hookfunction(TextService, function(...)
		return RunService(...)
	end)
	local StarterGui
	StarterGui = hookfunction(hookfunction, function(...)
		local tick = {
			...
		}
		local Y
		if tick[1] == z.Event or tick[1] == z.Function then
			Y = true
		else
			if type(tick[1]) == "function" then
				local CoreGui = (debug.getinfo(tick[1])).name
				if CoreGui == "FireServer" or CoreGui == "InvokeServer" then
					Y = true
				end
			end
		end
		if Y then
			local Y
			Y = StarterGui(tick[1], function(...)
				local CoreGui = {
					...
				}
				tick[2](CoreGui[1], "SH-API-" .. F, n(1), math.random(0, 9), "Bearer", "Elf and Tears", H, c, y, g)
				return Y(...)
			end)
			return Y
		end
		return StarterGui(...)
	end)
	if type(TextService) == "function" and (type(TextService()) == "string" and TextService() == F) then
		local Y = {}
		for tick, CoreGui in pairs(getgc()) do
			local TweenService = (debug.getinfo(CoreGui)).name
			if TweenService == "FireServer" then
				if not Y.Event then
					Y.Event = CoreGui
				end
			elseif TweenService == "InvokeServer" then
				if not Y.Function then
					Y.Function = CoreGui
				end
			end
		end
		z.Event = Y.Event or z.Event
		z.Function = Y.Function or z.Function
		local CoreGui = "" .. (tick() - tick .. "")
		local TweenService = ""
		local UserInputService, VirtualInputManager = false, 0
		for tick = 1, string.len(CoreGui), 1 do
			if string.sub(CoreGui, tick, tick) == "." and not UserInputService then
				UserInputService = true
				TweenService = TweenService .. "."
			else
				if UserInputService and VirtualInputManager < 2 then
					VirtualInputManager = VirtualInputManager + 1
					TweenService = TweenService .. string.sub(CoreGui, tick, tick)
				elseif not UserInputService then
					TweenService = TweenService .. string.sub(CoreGui, tick, tick)
				end
			end
		end
		B("Symphony Hub Loaded! Took " .. (TweenService .. "s to load."))
	else
		d:Destroy()
		Premium, f = nil, nil
	end
end)
return Library:Init()